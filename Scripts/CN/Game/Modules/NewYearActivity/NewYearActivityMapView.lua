--Date :2021-01-21
--Author : generated by FairyGUI
--Desc : 

local NewYearActivityMapView,Super = class("NewYearActivityMapView", View)

local MonsterType = 1
local BoxType = 2
local SmallBossType = 3
local BigBossType = 4
local BrithPointType = 5

function NewYearActivityMapView:ctor()
	--LuaLog("NewYearActivityMapView ctor")
	self._packName = "NewYearActivity"
	self._compName = "NewYearActivityMapView"
	--self._rootDepth = LayerDepth.Window
	self.myPlayer = false
	self.myPlayerData = {}
	self.myPlayerData.heroId = ModelManager.HandbookModel.heroOpertion
	self.myPlayerData.fashionId = ModelManager.HandbookModel.fashionCode
	self.myPlayerData.name = ModelManager.PlayerModel.username
	self.mapCellList = {} --保存地图格子的坐标
	self.mapNodeList = {} --保存地图实体
	self.playerList = {} --玩家实体
	self.playerData = {} --玩家信息
	self.isShowEffect = false
	self.timerKey = false
end

function NewYearActivityMapView:_initEvent( )
	
end

function NewYearActivityMapView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:NewYearActivity.NewYearActivityMapView
	self.bg1 = viewNode:getChildAutoType('bg1')--GLoader
	self.bg2 = viewNode:getChildAutoType('bg2')--GLoader
	self.bg3 = viewNode:getChildAutoType('bg3')--GLoader
	self.bg4 = viewNode:getChildAutoType('bg4')--GLoader
	self.girdLayer = viewNode:getChildAutoType('girdLayer')--GComponent
	--{autoFieldsEnd}:NewYearActivity.NewYearActivityMapView
	--Do not modify above code-------------
end

function NewYearActivityMapView:_initUI( )
	self:_initVM()
	self:initBaseData()
	self:initMap()
	self:createMyPlayer()
	--进入游戏
	local params = {}
	params.activityId = GameDef.ActivityType.NewYear
	params.onSuccess = function (data)
		printTable(6,"进入游戏data",data)
		self:myPlayerMove(data.x,data.y)
	end
	printTable(6,"进入游戏",params)
	RPCReq.Activity_NewYear_OnPlayerIn(params,params.onSuccess)
	--获取玩家数据
	self:setTimerUpdatePlayers()
	self:setBoss()
	self.timerKey = Scheduler.schedule(function()
        self:setTimerUpdatePlayers()
    end,10,0)
end

function NewYearActivityMapView:initBaseData( )
	self.beginX = 700 	--地图初始x位置
	self.beginY = -800  	--地图初始y位置
	self.lineNumX = 14   --行数
	self.lineNumY = 20   --列数
	self.girdLayer:setRotation(-26.8)   --地图旋转
	local posZero =  self.view:globalToLocal(Vector2(0, 0))
	self.view:setPosition(posZero.x,posZero.y)
	self.view:setWidth(display.width)
end

--创建自己
function NewYearActivityMapView:createMyPlayer()
	local obj = UIPackageManager.createObject("NewYearActivity", "myHeroCell")
	self.girdLayer:addChild(obj)
	self.myPlayer = BindManager.bindClass("Game.Modules.NewYearActivity.MyHeroCell",obj)
	self.myPlayer:setData(self.myPlayerData)
end

--创建玩家
function NewYearActivityMapView:createPlayer(playerData)
	local obj = UIPackageManager.createObject("NewYearActivity", "heroCell")
	self.girdLayer:addChild(obj)
	local heroCell = BindManager.bindClass("Game.Modules.NewYearActivity.HeroCell",obj)
	heroCell:setData(playerData)
	local x = self.mapCellList[playerData.x][playerData.y].x
	local y = self.mapCellList[playerData.x][playerData.y].y 
	heroCell:setPos(x,y)
	self.playerList[playerData.playerId] = heroCell
end

--创建Boss
function NewYearActivityMapView:createBoss(bossData)
	local obj = UIPackageManager.createObject("NewYearActivity", "bossCell")
	self.girdLayer:addChild(obj)
	local bossCell = BindManager.bindClass("Game.Modules.NewYearActivity.BossCell",obj)
	bossCell:setData(bossData)
	self.mapNodeList[bossData.id] = obj
	return obj
end

--创建地图
function NewYearActivityMapView:initMap()
	local mapCellType = 0
	for i = 1, self.lineNumX do
		self.mapCellList[i] = self.mapCellList[i] or {}
		for j = 1, self.lineNumY do 
			mapCellType = NewYearActivityModel:getMapTypeConfig(i,j)
			local x = self.beginX + i*85.6+51 * j
			local y = self.beginY + j*69.1
			self.mapCellList[i][j] = {x = x, y = y}
			if mapCellType == 5 then --出生点
				local mapCell = self:createBirthPoint()
				mapCell:setPosition(x,y)
				mapCell:removeClickListener(6)
				mapCell:addClickListener(function()
					self:myPlayerMove(i,j)
				end,6)
			elseif mapCellType == 3 then --小boss格子
				local mapCell = self:createBossMapCell()
				mapCell:setPosition(x,y)
				mapCell:removeClickListener(6)
				mapCell:addClickListener(function()
					local moveCell = NewYearActivityModel:moveToBoss(i,j,self.myPlayer.view:getPosition())
					self:myPlayerMove(moveCell.row,moveCell.col)
					local pointInfo = NewYearActivityModel:getPointConfig(i,j)
					ViewManager.open("NewYearActivitySmallBossView",{id = pointInfo.eventId})
				end,6)
			elseif mapCellType == 4 then --大boss格子
				local mapCell = self:createBossMapCell()
				mapCell:setPosition(x,y)
				mapCell:removeClickListener(6)
				mapCell:addClickListener(function()
					local moveCell = NewYearActivityModel:moveToBoss(i,j,self.myPlayer.view:getPosition())
					self:myPlayerMove(moveCell.row,moveCell.col)
					local pointInfo = NewYearActivityModel:getPointConfig(i,j)
					ViewManager.open("NewYearActivityBigBossView",{id = pointInfo.eventId})
				end,6)
			elseif mapCellType == 1 then --小怪
				local cfg = NewYearActivityModel:getPointConfig(i,j)
				local bossData = NewYearActivityModel:getBossData(cfg.eventId)
				if bossData and bossData.status and bossData.status == 2 then 
					local mapCell = self:createMonsterCell()
					mapCell:setPosition(x,y)
					mapCell:removeClickListener(6)
					mapCell:addClickListener(function()
						local moveCell = NewYearActivityModel:moveToBox(i,j,self.myPlayer.view:getPosition())
						self:myPlayerMove(moveCell.row,moveCell.col)
						local params = {}
						params.activityId = GameDef.ActivityType.NewYear
						params.bossId = cfg.eventId
						params.onSuccess = function (data)
							printTable(6,"小怪奖励",data)
							NewYearActivityModel.bossInfo[cfg.eventId].status = data.status
							self:initMap()
						end
						printTable(6,"挑战小怪",params)
						RPCReq.Activity_NewYear_Challenge(params,params.onSuccess)
					end,6)
				else
					local mapCell = self:createMapCell()
					mapCell:setPosition(x,y)
					mapCell:removeClickListener(6)
					mapCell:addClickListener(function()
						self:myPlayerMove(i,j)
					end,6)
				end
			elseif mapCellType == 2 then --宝箱
				local cfg = NewYearActivityModel:getPointConfig(i,j)
				local bossData = NewYearActivityModel:getBossData(cfg.eventId)
				if bossData and bossData.status and bossData.status == 2 then 
					local mapCell = self:createMonsterCell()
					mapCell:setPosition(x,y)
					mapCell:removeClickListener(6)
					mapCell:addClickListener(function()
						local params = {}
						params.activityId = GameDef.ActivityType.NewYear
						params.bossId = cfg.eventId
						params.onSuccess = function (data)
							printTable(6,"宝箱奖励",data)
							NewYearActivityModel.bossInfo[cfg.eventId].status = data.status
							self:initMap()
						end
						printTable(6,"挑战宝箱",params)
						RPCReq.Activity_NewYear_Challenge(params,params.onSuccess)
					end,6)
				else
					local mapCell = self:createMapCell()
					mapCell:setPosition(x,y)
					mapCell:removeClickListener(6)
					mapCell:addClickListener(function()
						self:myPlayerMove(i,j)
					end,6)
				end
			elseif mapCellType == 6 then --不可行走
				local mapCell = self:createObstacleCell()
				mapCell:setPosition(x,y)
			else
				local mapCell = self:createMapCell()
				mapCell:setPosition(x,y)
				mapCell:removeClickListener(6)
				mapCell:addClickListener(function()
					self:myPlayerMove(i,j)
				end,6)
			end
		end
	end
	NewYearActivityModel:setMapCellList(self.mapCellList)
end

function NewYearActivityMapView:myPlayerMove(row,col)
	if self.isShowEffect then return end 
	local x = self.mapCellList[row][col].x
	local y = self.mapCellList[row][col].y
	self.myPlayer:playOutEffect(function ()
		local params = {}
		params.activityId = GameDef.ActivityType.NewYear
		params.onSuccess = function ()
			
		end
		params.x = row
		params.y = col
		printTable(6,"玩家移动",params)
		RPCReq.Activity_NewYear_OnPlayerMove(params,params.onSuccess)

		self.isShowEffect = true
		self.myPlayer:setPos(x,y)
		self.myPlayer:playInEffect(function ()
			self.isShowEffect = false
			self:updatePlayers()
		end)
	end)
end

--创建BOSS
function NewYearActivityMapView:setBoss()
	local smallBossInfo = NewYearActivityModel:getMapPosConfig(SmallBossType)
	for _, v in ipairs(smallBossInfo) do
		local bossData = NewYearActivityModel:getNewYearBossConfig(v.eventId)
		local bossCell = self:createBoss(bossData)
		local cellPos = v.birthPoint[1]
		local pos = self.mapCellList[cellPos.row][cellPos.col]
		local fromPoint = v.fromPoint[1]
		bossCell:setPosition(pos.x - fromPoint.x, pos.y - fromPoint.y)
	end
	local bigBossInfo = NewYearActivityModel:getMapPosConfig(BigBossType)
	for _, v in ipairs(bigBossInfo) do
		local bossData = NewYearActivityModel:getNewYearBossConfig(v.eventId)
		local bossCell = self:createBoss(bossData)
		local cellPos = v.birthPoint[1]
		local pos = self.mapCellList[cellPos.row][cellPos.row]
		local fromPoint = v.fromPoint[1]
		bossCell:setPosition(pos.x + fromPoint.x, pos.y + fromPoint.y)
	end
end

--创建小怪/宝箱
function NewYearActivityMapView:setMonster()
	local smallBossInfo = NewYearActivityModel:getMapPosConfig(SmallBossType)

end

function NewYearActivityMapView:updatePlayers()
	local playerIdMapInServerData = {}
	for _, v in pairs(self.playerData) do
		playerIdMapInServerData[v.playerId] = true
		local playerObj = self.playerList[v.playerId]
		if not playerObj then 
			self:createPlayer(v)
		else
			local x = self.mapCellList[v.x] and self.mapCellList[v.x][v.y] and self.mapCellList[v.x][v.y].x or 0
			local y = self.mapCellList[v.x] and self.mapCellList[v.x][v.y] and self.mapCellList[v.x][v.y].y or 0
			playerObj:setPos(x, y)
		end
	end

	for playerId, obj in pairs(self.playerList) do
		if not playerIdMapInServerData[playerId] then
			obj:hideHero()
			self.playerList[playerId] = nil	
		end
	end
end

function NewYearActivityMapView:refreshPlayersShow()
	local playerInPos = {}
	for playerId, obj in pairs(self.playerList) do
		local key = obj.pos.x*10 + obj.pos.y
		if not playerInPos[key] then 
			playerInPos[key] = {} 
		end
		table.insert(playerInPos[key], obj)
	end
	local myPlayerKey = self.myPlayer.pos.x *10 + self.myPlayer.pos.y
	if playerInPos[myPlayerKey] then 
		for i, obj in ipairs(playerInPos[myPlayerKey]) do
			obj:hideHero()
		end
	else
		local level = 0
		local showPlayer = false
		for key, value in pairs(playerInPos) do
			for i, obj in ipairs(value) do
				obj:hideHero()
				if level < obj.level then 
					level = obj.level
					showPlayer = obj
				end
			end
			if showPlayer then 
				showPlayer:showHero()
			end
		end
	end
end

--创建地图格子
function NewYearActivityMapView:createMapCell()
	local obj = UIPackageManager.createObject("NewYearActivity", "mapCell")
	self.girdLayer:addChild(obj)
	return obj
end

--创建Boss格子
function NewYearActivityMapView:createBossMapCell()
	local obj = UIPackageManager.createObject("NewYearActivity", "bossMapCell")
	self.girdLayer:addChild(obj)
	return obj
end

--创建小怪格子
function NewYearActivityMapView:createMonsterCell()
	local obj = UIPackageManager.createObject("NewYearActivity", "monsterCell")
	self.girdLayer:addChild(obj)
	return obj
end

--创建出生点
function NewYearActivityMapView:createBirthPoint()
	local obj = UIPackageManager.createObject("NewYearActivity", "brithCell")
	self.girdLayer:addChild(obj)
	return obj
end

--创建不可行走格子
function NewYearActivityMapView:createObstacleCell()
	local obj = UIPackageManager.createObject("NewYearActivity", "obstacleCell")
	self.girdLayer:addChild(obj)
	return obj
end

function NewYearActivityMapView:moveToXY(obj,x,y)
	local mapPos = self.mapCellList[x][y]
	x = mapPos.x
	y = mapPos.y
	obj:setPosition(x,y)
end

function NewYearActivityMapView:setTimerUpdatePlayers()
	local params = {}
	params.activityId = GameDef.ActivityType.NewYear
	params.onSuccess = function (data)
		self.playerData = data and data.playerList or {}
		-- printTable(6,"self.playerData",self.playerData)
	 	self:updatePlayers()
	end
	RPCReq.Activity_NewYear_GetPlayerInfo(params,params.onSuccess)
end

function NewYearActivityMapView:_exit()
	self.mapNodeList = {}
	if self.timerKey then 
		Scheduler.unschedule(self.timerKey)
	end
	local params = {}
	params.activityId = GameDef.ActivityType.NewYear
	printTable(6,"玩家离开",params)
	RPCReq.Activity_NewYear_OnPlayerOut(params)
end

return NewYearActivityMapView