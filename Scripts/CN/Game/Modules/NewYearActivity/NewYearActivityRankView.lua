--Date :2021-01-22
--Author : generated by FairyGUI
--Desc : 

local NewYearActivityRankView,Super = class("NewYearActivityRankView", Window)

function NewYearActivityRankView:ctor()
	--LuaLog("NewYearActivityRankView ctor")
	self._packName = "NewYearActivity"
	self._compName = "NewYearActivityRankView"
	--self._rootDepth = LayerDepth.Window
	self.rankData = {}
	self.myRankData = {}
end

function NewYearActivityRankView:_initEvent( )
	
end

function NewYearActivityRankView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:NewYearActivity.NewYearActivityRankView
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.myRankItem = viewNode:getChildAutoType('myRankItem')--rankMyItem
		self.myRankItem.btn_myRecord = viewNode:getChildAutoType('myRankItem/btn_myRecord')--GComponent
		self.myRankItem.headItem = viewNode:getChildAutoType('myRankItem/headItem')--GButton
		self.myRankItem.txt_myRank = viewNode:getChildAutoType('myRankItem/txt_myRank')--GTextField
		self.myRankItem.txt_myRankName = viewNode:getChildAutoType('myRankItem/txt_myRankName')--GTextField
		self.myRankItem.txt_name = viewNode:getChildAutoType('myRankItem/txt_name')--GTextField
		self.myRankItem.txt_num = viewNode:getChildAutoType('myRankItem/txt_num')--GTextField
		self.myRankItem.txt_rank0 = viewNode:getChildAutoType('myRankItem/txt_rank0')--GTextField
	self.rankHead = viewNode:getChildAutoType('rankHead')--rankHead
		self.rankHead.txt_name = viewNode:getChildAutoType('rankHead/txt_name')--GTextField
		self.rankHead.txt_num = viewNode:getChildAutoType('rankHead/txt_num')--GTextField
		self.rankHead.txt_rank = viewNode:getChildAutoType('rankHead/txt_rank')--GTextField
	self.rankList = viewNode:getChildAutoType('rankList')--GList
	--{autoFieldsEnd}:NewYearActivity.NewYearActivityRankView
	--Do not modify above code-------------
end

function NewYearActivityRankView:_initUI( )
	self:_initVM()
	local params = {}
	params.rankType = GameDef.RankType.NewYear
	params.onSuccess = function (data)
		printTable(6,"新年活动排行榜",data)
		self.rankData = data.rankData or {}
		printTable(6,"self.rankData",self.rankData)
		if tolua.isnull(self.view) then return end
		self:setRankList()
		self:setMyRankList()
	end
	RPCReq.Rank_GetRankData(params,params.onSuccess)
end

function NewYearActivityRankView:setRankList()
	self.rankList:setItemRenderer(function(idx,obj)
		local index = idx + 1
		local data = self.rankData[index]
		local rankCtr = obj:getController("rankCtr")
		if index == 1 then 
			rankCtr:setSelectedIndex(0)
		elseif index == 2 then 
			rankCtr:setSelectedIndex(1)
		elseif index == 3 then 
			rankCtr:setSelectedIndex(2)
		else
			rankCtr:setSelectedIndex(3)
		end
		local txt_rank = obj:getChildAutoType("txt_rank")
		txt_rank:setText(index)
		local headItem 	= BindManager.bindPlayerCell(obj:getChildAutoType("headItem"))
		headItem:setHead(data.head, data.level, data.id,nil,data.headBorder)
		local txt_name = obj:getChildAutoType("txt_name")
		txt_name:setText(data.name)
		local txt_num = obj:getChildAutoType("txt_num")
		txt_num:setText(data.value)
		local btn_record = obj:getChildAutoType("btn_record")
		btn_record:addClickListener(function ()
			ModelManager.BattleModel:requestBattleRecord(data.battleId)
		end)
	end)
	self.rankList:setData(self.rankData)
end

function NewYearActivityRankView:setMyRankList()
	local myId = ModelManager.PlayerModel.userid
	local rankLevel = false
	for i, v in ipairs(self.rankData) do
		if v.id == myId then
			self.myRankData = v
			rankLevel = i
			break
		end
	end
	local headItem = BindManager.bindPlayerCell(self.myRankItem.headItem)
	headItem:setHead(ModelManager.PlayerModel.head, ModelManager.PlayerModel.level, myId,nil,ModelManager.PlayerModel.headBorder)
	local rankCtr = self.myRankItem:getController("rankCtr")
	if rankLevel then 
		if rankLevel < 4 then 
			rankCtr:setSelectedIndex(rankLevel)
		else
			rankCtr:setSelectedIndex(4)
			self.myRankItem.txt_myRank:setText(rankLevel)
		end
	else
		rankCtr:setSelectedIndex(0)
	end
	self.myRankItem.txt_name:setText(ModelManager.PlayerModel.username)
	self.myRankItem.txt_num:setText(self.myRankData.value or 0)
end
return NewYearActivityRankView