--Name : NotEnoughView.lua
--Author : generated by FairyGUI
--Date : 2020-3-7
--Desc : 

local NotEnoughView,Super = class("NotEnoughView", Window)

function NotEnoughView:ctor(args)
	self._packName = "UIPublic_Window"
	self._compName = "NotEnoughView"
	self._rootDepth = LayerDepth.PopWindow
	self.args = args
	self.sourceData = self.args.source
end

function NotEnoughView:_initEvent( )
	
end

function NotEnoughView:_initUI( )
	local vmRoot = self
	local viewNode = self.view
	
	vmRoot.list_source  = viewNode:getChildAutoType("list_source")
	self.list_source:setItemRenderer(function (index,obj)
		local moduleIcon = obj:getChildAutoType("moduleIcon")
		local txt_source = obj:getChildAutoType("txt_source")
		local txt_open = obj:getChildAutoType("txt_open")
		local btn_open = obj:getChildAutoType("btn_open")
		local c1 = obj:getController("c1")
		
		local sourceId = self.sourceData[index + 1]
		local sourceInfo = DynamicConfigData.t_itemSource[tonumber(sourceId)]
		
		local openTips = ModuleUtil.getModuleOpenTips(sourceId)
		if not openTips then
			c1:setSelectedIndex(1)
		else
			c1:setSelectedIndex(0)
			txt_open:setText(openTips)
		end
		
		moduleIcon:setURL(PathConfiger.getItemIcon(sourceInfo.icon))
		txt_source:setText(sourceInfo.decription)
		btn_open:removeClickListener()
		btn_open:addClickListener(function ( ... )
			ModuleUtil.openModule(sourceInfo.module,true)
			if (self.args and self.args.callFunc) then
				Scheduler.scheduleNextFrame(function ()
					self.args.callFunc();
				end)
			end
			self:closeView()
		end)
		
	end)
	
	self.list_source:setNumItems(#self.sourceData)
end




return NotEnoughView