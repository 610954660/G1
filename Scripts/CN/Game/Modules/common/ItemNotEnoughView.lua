--Name : ItemNotEnoughView.lua
--Author : generated by FairyGUI
--Date : 2020-3-7
--Desc : 

local ItemNotEnoughView,Super = class("ItemNotEnoughView", Window)

function ItemNotEnoughView:ctor(args)
	--LuaLog("ItemNotEnoughView ctor")
	self._packName = "UIPublic_Window"
	self._compName = "ItemNotEnoughView"
	self._rootDepth = LayerDepth.Tips
	self.args = args
	self.itemCell = false
	self.txt_name = false
	self.txt_desc = false

	self.sourceData = false
end

function ItemNotEnoughView:_initEvent( )
	
end

function ItemNotEnoughView:_initUI( )
	local vmRoot = self
	local viewNode = self.view
	vmRoot.txt_name  = viewNode:getChildAutoType("txt_name")
	vmRoot.txt_desc  = viewNode:getChildAutoType("txt_desc")
	vmRoot.list_source  = viewNode:getChildAutoType("list_source")
	vmRoot.btn_close  = viewNode:getChildAutoType("btn_close")
	
	self.btn_close:addClickListener(function ( ... )
			self:closeView()
		end)
	local cell = viewNode:getChild("itemCell")
	self.itemCell = BindManager.bindItemCell(cell)
	self.itemCell:setData(self.args.code, 1, self.args.type)
	local itemData = ItemConfiger.getInfoByCode(self.args.code)
	local bgLoader = self.view:getChildAutoType("bgLoader") 
	if bgLoader then
		
		bgLoader:setURL(PathConfiger.getItemTipsHeadBg(itemData.color))
	end
	
	local itemInfo = self.itemCell:getItemData():getItemInfo()
	self.txt_name:setText(itemInfo.name)
	self.txt_desc:setText(itemInfo.desc)
	self.txt_name:setColor(ColorUtil.getItemTipsColor(itemData.color))
	
	self.sourceData = itemInfo.source
	self.list_source:setItemRenderer(function (index,obj)
		local moduleIcon = obj:getChildAutoType("moduleIcon")
		local txt_source = obj:getChildAutoType("txt_source")
		local txt_open = obj:getChildAutoType("txt_open")
		local btn_open = obj:getChildAutoType("btn_open")
		local c1 = obj:getController("c1")
		
		local sourceId = self.sourceData[index + 1]
		local sourceInfo = DynamicConfigData.t_itemSource[tonumber(sourceId)]
		
		local openTips = ModuleUtil.getModuleOpenTips(sourceId)
		if not openTips then
			c1:setSelectedIndex(1)
		else
			c1:setSelectedIndex(0)
			txt_open:setText(openTips)
		end
		
		moduleIcon:setURL(PathConfiger.getItemIcon(sourceInfo.icon))
		txt_source:setText(sourceInfo.decription)
		btn_open:removeClickListener()
		btn_open:addClickListener(function ( ... )
			ModelManager.EquipTargetModel.jump = true
			ModuleUtil.openModule(sourceInfo.module,true)
			if (self.args and self.args.callFunc) then
				Scheduler.scheduleNextFrame(function ()
					self.args.callFunc();
				end)
			end
			self:closeView()
		end)
		
	end)
	
	self.list_source:setNumItems(#self.sourceData)
end




return ItemNotEnoughView