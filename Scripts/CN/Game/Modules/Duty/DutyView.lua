--Name : DutyView.lua
--Author : generated by FairyGUI
--Date : 2020-6-13
--Desc : 职级系统界面 added by xhd

local DutyView,Super = class("DutyView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
function DutyView:ctor()
	--LuaLog("DutyView ctor")
	self._packName = "Duty"
	self._compName = "DutyView"
	--self._rootDepth = LayerDepth.Window
	self.curConfig = false
	self.taskConfig = false
	self.tipShowFlag = false
	self.allConfig = false
	self.proData = false
end

function DutyView:_initEvent( )
	
end

function DutyView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Duty.DutyView
		vmRoot.rightJianTou = viewNode:getChildAutoType("$rightJianTou")--image
		vmRoot.dutyHisList = viewNode:getChildAutoType("$dutyHisList")--list
		vmRoot.dailyAwardList = viewNode:getChildAutoType("$dailyAwardList")--list
		vmRoot.yulangBtn = viewNode:getChildAutoType("$yulangBtn")--Button
		vmRoot.taskList = viewNode:getChildAutoType("$taskList")--list
		vmRoot.jinshen = viewNode:getChildAutoType("$jinshen")--Button
		vmRoot.getAwardBtn = viewNode:getChildAutoType("$getAwardBtn")--Button
		vmRoot.dutyprogress = viewNode:getChildAutoType("$dutyprogress")--ProgressBar
		vmRoot.dutyName = viewNode:getChildAutoType("$dutyName")--text
		vmRoot.proList = viewNode:getChildAutoType("$proList")--list
		vmRoot.dailyTipsName = viewNode:getChildAutoType("$dailyTipsName")--text
		vmRoot.dailyTipsList = viewNode:getChildAutoType("$dailyTipsList")--list
		vmRoot.dutyLoader = viewNode:getChildAutoType("$dutyLoader")--loader
		vmRoot.btn_closeTips = viewNode:getChildAutoType("$btn_closeTips")--Label
		vmRoot.yuanProgress = viewNode:getChildAutoType("$yuanProgress")--ProgressBar
		vmRoot.leftJianTou = viewNode:getChildAutoType("$leftJianTou")--image
		vmRoot.awardTipBtn = viewNode:getChildAutoType("$awardTipBtn")--Button
	--{vmFieldsEnd}:Duty.DutyView
	--Do not modify above code-------------
end


function DutyView:_initUI( )
	self:_initVM()
	--各类控制器
	self:setBg("bg_default.jpg")
    self.dairyCtrl = self.view:getController("dairyCtrl") --显示每日奖励
    self.tipsCtrl = self.view:getController("tipsCtrl") --显示奖励tips
    self.statusCtrl = self.view:getController("statusCtrl") --普通 晋升 状态
    self.hightLevelCtrl = self.view:getController("hightLevelCtrl") --是否最高等级提示
    -- local params = {}
	-- params.onSuccess = function (res )
	--     DutyModel:setData(res.data)
	-- end
	-- RPCReq.Duty_GetInfo(params, params.onSuccess)


	self.yulangBtn:addClickListener(function( ... )
		ViewManager.open("DutyWatchView")
		-- ViewManager.open("DutySuccessView")
	end)
	
    RedManager.register("V_DUTYUP", self.jinshen:getChildAutoType("img_red"))
    RedManager.register("V_DUTYDAIRY", self.getAwardBtn:getChildAutoType("img_red"))
	
    --属性显示
	self.proList:setItemRenderer(function (index,obj)
		   local tempIndex = index+ 1
		   local txt = obj:getChildAutoType("txt")
		   local val = obj:getChildAutoType("val")
		   txt:setText(self.proData[tempIndex].name)
		   val:setText("+"..self.proData[tempIndex].value)
    end)


    self.taskList:setItemRenderer(function (index,obj)
		local config = self.taskConfig[index+1]
		local title = obj:getChildAutoType("title")
		local rewardList = obj:getChildAutoType("rewardList")
		local targetBtn = obj:getChildAutoType("targetBtn") --前往
		local lingquBtn = obj:getChildAutoType("lingquBtn")
		local hadGetBtn = obj:getChildAutoType("hadGetBtn")
		local proVal = obj:getChildAutoType("proVal")
		local itemCellObj = obj:getChildAutoType("itemCell")
		local c1Ctrl = obj:getController("c1") --状态
		
		--增加红点对应关系
		local rewardData = config.reward
		title:setText(config.name)
		local acc = ModelManager.DutyModel:getACCValue(config.id,1)
		local curMax = config.count
		proVal:setText("("..acc.."/"..curMax..")")
		local status = ModelManager.DutyModel:getRewardStatus(config.id,1)
		c1Ctrl:setSelectedIndex(status)
		if status == 1 then
            lingquBtn:getChildAutoType("img_red"):setVisible(true)
		else
			lingquBtn:getChildAutoType("img_red"):setVisible(false)
		end
        targetBtn:removeClickListener(11)
		targetBtn:addClickListener(function( ... )
			 ModuleUtil.openModule( config.windowId , true )
		end,11)
		lingquBtn:removeClickListener(12)
		lingquBtn:addClickListener(function( ... )
			print(1,"领取奖励",config.id)
			local params = {}
	 		params.id = config.id
	 		params.onSuccess = function (res )
	 		   DutyModel:setData(res.data)
	 		end
	 		RPCReq.Duty_RecvTaskReward(params, params.onSuccess)
		end,12)
		
		--奖励显示
        local itemcell = BindManager.bindItemCell(itemCellObj)
        local itemData = ItemsUtil.createItemData({data = rewardData[1]})
		itemcell:setItemData(itemData)
    end)
    self.taskList:setVirtual()
    
    self.dutyHisList:setVirtual()
    self.dutyHisList:setItemRenderer(function (index,obj)
		obj:setName(index)
    	local curDutyIndex = DutyModel:getCurDutyIndex()
		local tempIndex = index + 1
		local config = self.allConfig[tempIndex]
		local proShowCtrl = obj:getController("proShowCtrl")
		local hadItemCtrl = obj:getController("hadItemCtrl")
		local statusCtrl = obj:getController("statusCtrl")
		local itemCellObj = obj:getChildAutoType("itemCell")
		local itemNum = obj:getChildAutoType("itemNum")
		local name = obj:getChildAutoType("name")
		local hasGetCtrl = obj:getController("hasGet")
		name:setText(config.dutyName)
        
		if tempIndex == 1 then --最左
		   if curDutyIndex==tempIndex then
		   	  proShowCtrl:setSelectedIndex(8)
		   elseif curDutyIndex>tempIndex then
		   	  proShowCtrl:setSelectedIndex(7)
		   end
		elseif tempIndex == #self.allConfig then
			if curDutyIndex == tempIndex then
				proShowCtrl:setSelectedIndex(0)
			elseif curDutyIndex < tempIndex then
				proShowCtrl:setSelectedIndex(3)
			end
		else
			if curDutyIndex == tempIndex then
				proShowCtrl:setSelectedIndex(2)
			elseif curDutyIndex< tempIndex then
				proShowCtrl:setSelectedIndex(5)
			elseif curDutyIndex> tempIndex then
				proShowCtrl:setSelectedIndex(1)
			end
			
		end

		if #config.showItem>0 then
			hadItemCtrl:setSelectedIndex(1)
	        local itemcell = BindManager.bindItemCell(itemCellObj)
	        local itemData = ItemsUtil.createItemData({data = config.showItem[1]})
	        if config.showItem[1].amount<=1 then --小于1不要数量
	        	itemcell:setAmountVisible(false)
	        end
	        itemNum:setText(itemData:getItemAmount())
	        itemcell:setAmountVisible(false)
			itemcell:setItemData(itemData)
		else
			hadItemCtrl:setSelectedIndex(0)
			hasGetCtrl:setSelectedIndex(0)
		end
		if curDutyIndex>tempIndex then
			statusCtrl:setSelectedIndex(2)
			hasGetCtrl:setSelectedIndex(1)
		elseif curDutyIndex< tempIndex then
			-- statusCtrl:setSelectedIndex(1) --问号样式说不需要了
			statusCtrl:setSelectedIndex(2)
			hasGetCtrl:setSelectedIndex(0)
		else
			statusCtrl:setSelectedIndex(1)
			hasGetCtrl:setSelectedIndex(1)
		end


    end)

    local function doSpecialEffect( context )
		local index = (self.dutyHisList:getFirstChildInView())%self.dutyHisList:getNumItems()
        if index==0 then
        	self.leftJianTou:setVisible(false)
        	self.rightJianTou:setVisible(true)
        elseif index==self.dutyHisList:getNumItems()-5 then
        	self.leftJianTou:setVisible(true)
        	self.rightJianTou:setVisible(false)
        else
        	self.leftJianTou:setVisible(true)
        	self.rightJianTou:setVisible(true)
        end
	end

    self.dutyHisList:addEventListener(FUIEventType.Scroll,doSpecialEffect)

    self.jinshen:removeClickListener(100)
    self.jinshen:addClickListener(function( ... )
    	local params = {}
 		params.onSuccess = function (res )
 		   DutyModel:setData( res.data )
 		   ViewManager.open("DutySuccessView")
 		end
 		RPCReq.Duty_UpLevel(params, params.onSuccess)
    end,100)
    
    self.awardTipBtn:removeClickListener(100)
    self.awardTipBtn:addClickListener(function( ... )
    	if not self.tipShowFlag then
    		self.tipsCtrl:setSelectedIndex(1)
    		self.tipShowFlag = true
    	else
    		self.tipsCtrl:setSelectedIndex(0)
    		self.tipShowFlag = false
    	end
    end,100)
    
    self.btn_closeTips:removeClickListener(100)
    self.btn_closeTips:addClickListener(function ( ... )
    	if not self.tipShowFlag then
    		self.tipsCtrl:setSelectedIndex(1)
    		self.tipShowFlag = true
    	else
    		self.tipsCtrl:setSelectedIndex(0)
    		self.tipShowFlag = false
    	end
    end,100)


    self.dailyTipsList:setItemRenderer(function (index,obj)
	    local itemcell = BindManager.bindItemCell(obj)
        local itemData = ItemsUtil.createItemData({data = self.curConfig.reward[index+1]})

		itemcell:setItemData(itemData)
	end)

    self.dailyAwardList:setItemRenderer(function (index,obj)
	    local itemcell = BindManager.bindItemCell(obj)
        local itemData = ItemsUtil.createItemData({data = self.curConfig.dailyReward[index+1]})
		itemcell:setItemData(itemData)
	end)


    self:updatePanel()
end

function DutyView:update_dutyShow( ... )
	self:updatePanel()
end

function DutyView:updatePanel()
    local curDutyIndex = DutyModel:getCurDutyIndex()
    self.curConfig = DutyModel:getCurDutyConfig()
    self.dutyName:setText(self.curConfig.dutyName)
    self.dailyTipsName:setText(self.curConfig.dutyName)

    self.proData = {}
    self.proData[1] = {}
    self.proData[1].name = Desc.common_fightAttr1
    self.proData[1].value = self.curConfig.hp
    self.proData[2] = {}
    self.proData[2].name = Desc.common_fightAttr2
    self.proData[2].value = self.curConfig.attack
    self.proData[3] = {}
    self.proData[3].name = Desc.common_fightAttr4
    self.proData[3].value = self.curConfig.magic
    self.proData[4] = {}
    self.proData[4].name = Desc.common_fightAttr3
    self.proData[4].value = self.curConfig.defense
    self.proData[5] = {}
    self.proData[5].name = Desc.common_fightAttr5
    self.proData[5].value = self.curConfig.magicDefense
    self.proData[6] = {}
    self.proData[6].name = Desc.common_fightAttr6
    self.proData[6].value = self.curConfig.speed
    self.proList:setNumItems(#self.proData)
   
    
    if PlayerModel.level>= 4 then
    	local isRecv = DutyModel:getCurIsResv(  )
    	if isRecv then
    		self.dairyCtrl:setSelectedIndex(0)
        else
        	self.dairyCtrl:setSelectedIndex(1)
        	self.getAwardBtn:removeClickListener(100)
        	self.getAwardBtn:addClickListener(function( ... )
        		local params = {}
		 		params.onSuccess = function (res )
		 		   DutyModel:setData( res.data )
					if tolua.isnull(self.view) then return end
		 		   self.dairyCtrl:setSelectedIndex(0)
		 		end
		 		RPCReq.Duty_RecvDailyReward(params, params.onSuccess)
        	end,100)
        end
    else
    	self.dairyCtrl:setSelectedIndex(0)
    end
 
    self.dutyLoader:setURL(PathConfiger.getDutyIcon(curDutyIndex))
    
    --任务数据
    self.taskConfig = DutyModel:getTaskConfig(curDutyIndex )
    self.taskList:setData(self.taskConfig)


	local count,max = DutyModel:getCurProgressStatus( )
	print(2233, count, max);
	if max == 0 then
		self.yuanProgress:setValue(0)
    	self.dutyprogress:setValue(100)
    	self.statusCtrl:setSelectedIndex(0)
    	RedManager.updateValue("V_DUTYUP", false)
	else
		self.yuanProgress:setMax(max)
		self.yuanProgress:setValue(count)
	    self.dutyprogress:setValue(count/max*100)
	    if count>=max then
			self.statusCtrl:setSelectedIndex(1)
			RedManager.updateValue("V_DUTYUP", true)
			--点击按钮上增加特效
		   if not self.jinshen.skeletonNode then
		   	   self.jinshen.skeletonNode = SpineUtil.createSpineObj(self.jinshen, vertex2(self.jinshen:getWidth()/2,self.jinshen:getHeight()/2+5), "jinsheng_anniu_loop", "Spine/ui/duty", "Ef_zhiji", "Ef_zhiji",true)
		   end
		   if not self.yuanProgress.skeletonNode1 then
		   	   self.yuanProgress.skeletonNode1 = SpineUtil.createSpineObj(self.yuanProgress, vertex2(self.yuanProgress:getWidth()/2,self.yuanProgress:getHeight()/2+5), "jindutiao", "Spine/ui/duty", "Ef_zhiji", "Ef_zhiji",true)
		   end  
		   if not self.yuanProgress.skeletonNode2 then
		   	   self.yuanProgress.skeletonNode2 = SpineUtil.createSpineObj(self.yuanProgress, vertex2(self.yuanProgress:getWidth()/2,self.yuanProgress:getHeight()/2+5), "jinsheng_zhongyuankuang", "Spine/ui/duty", "Ef_zhiji", "Ef_zhiji",true)
		   end  
		else
			if self.jinshen.skeletonNode then
				self.jinshen.skeletonNode:removeFromParent()
				self.jinshen.skeletonNode = nil
			end
			
			if self.yuanProgress.skeletonNode1 then
				self.yuanProgress.skeletonNode1:removeFromParent()
				self.yuanProgress.skeletonNode1 = nil
			end
			
			if self.yuanProgress.skeletonNode2 then
				self.yuanProgress.skeletonNode2:removeFromParent()
				self.yuanProgress.skeletonNode2 = nil
			end
			self.statusCtrl:setSelectedIndex(0)
			RedManager.updateValue("V_DUTYUP", false)
		end
    end

	self.allConfig = DutyModel:getAllDutyConfig()
	self.dutyHisList:setData(self.allConfig)
	--默认滚动位置
	if curDutyIndex>3 then
		self.dutyHisList:scrollToView(curDutyIndex-3,true)
	elseif curDutyIndex <=3 then
		self.dutyHisList:getScrollPane():setPosX(30,false)
	end
	

    if curDutyIndex>= #self.allConfig then
    	self.hightLevelCtrl:setSelectedIndex(1)
    else
    	self.hightLevelCtrl:setSelectedIndex(0)
    end



	self.dailyTipsList:setData(self.curConfig.reward)
	self.dailyAwardList:setData(self.curConfig.dailyReward)
end



return DutyView