--Name : EDEnemyView.lua
--Author : generated by FairyGUI
--Date : 2020-5-15
--Desc : 

local EDEnemyView,Super = class("EDEnemyView", Window)

function EDEnemyView:ctor()
	--LuaLog("EDEnemyView ctor")
	self._packName = "Expedition"
	self._compName = "EDEnemyView"
	self._rootDepth = LayerDepth.PopWindow
	
	self.isSend = false
end

function EDEnemyView:_initEvent( )
	
end

function EDEnemyView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Expedition.EDEnemyView
		vmRoot.enemyList = viewNode:getChildAutoType("$enemyList")--list
		vmRoot.rewardList = viewNode:getChildAutoType("$rewardList")--list
		vmRoot.heroList = viewNode:getChildAutoType("$heroList")--list
		vmRoot.closeButton = viewNode:getChildAutoType("$closeButton")--Label
		vmRoot.play = viewNode:getChildAutoType("$play")--Button
		vmRoot.xzList = viewNode:getChildAutoType("$xzList")--list
	--{vmFieldsEnd}:Expedition.EDEnemyView
	--Do not modify above code-------------
end

function EDEnemyView:_initUI( )
	self:_initVM()
	
	
	self.closeButton:addClickListener(function ()
			self:closeView()
		end)
	
	self.xzList:setItemRenderer(function(index,obj)
			obj:setIcon(self._args.xzcion[index+1])
		end)

	self.xzList:setNumItems(#self._args.xzcion)
	
	self.enemyList:setItemRenderer(function(index,child)
			local data=	ExpeditionModel.enemyArray[index+1]
			local heroCell = BindManager.bindHeroCell(child)
			--local heroInfo=DynamicConfigData.t_hero[data.code]
			
			heroCell:setData(data)
			heroCell:showNp(data.rage)
		end)
	TableUtil.sortByMap(ExpeditionModel.enemyArray, {{key="level",asc=true},{key="star",asc=true},{key="combat",asc=true}})
	self.enemyList:setData(ExpeditionModel.enemyArray)
	self.heroList:setVirtual()
	self.heroList:setItemRenderer(function(index,child)
			local data=	ExpeditionModel.heroArray[index+1]
			local heroCell = BindManager.bindHeroCell(child)
			--local heroInfo=DynamicConfigData.t_hero[data.code]
			heroCell:setData(data)
			heroCell:showNp(data.rage)

		end)
	local rewardData =	nil
	if self._args.eventData.eventType == 1 then
		rewardData = self._args.reward.comMonRewardPre
	else
		rewardData = self._args.reward.eliteMonRewardPre
	end
	self.rewardList:setItemRenderer(function(index,child)
			
			local data = rewardData[index+1]
			local itemCell = BindManager.bindItemCell(child)
			--local heroInfo=DynamicConfigData.t_hero[data.code]
			itemCell:setData(data.code,data.amount,data.type)
		end)
	self.rewardList:setData(rewardData)
	
	local objCtrl = self.view:getController("state")
	
	if ExpeditionModel.heroArray and #ExpeditionModel.heroArray > 0 then
		objCtrl:setSelectedIndex(0)
		--[[for k, v in pairs(ExpeditionModel.heroArray) do
			v.hpBaifenbi = v.hp/v.maxHp
			if v.hpBaifenbi > 1 then
				v.hpBaifenbi = 1
			end
			v.heroId = CardLibModel:getHeroByUid(v.uuid).heroId
		end
		TableUtil.sortByMap(ExpeditionModel.heroArray, {{key="hpBaifenbi",asc=false},{key="level",asc=true},{key="star",asc=true},{key="combat",asc=true},{key="heroId",asc=true}})--]]
		TableUtil.sortByMap(ExpeditionModel.heroArray, {{key="level",asc=true},{key="star",asc=true},{key="combat",asc=true}})
		self.heroList:setData(ExpeditionModel.heroArray)
	else
		objCtrl:setSelectedIndex(1)
	end
	local eventConfig = DynamicConfigData.t_endlessRoadEvent[self._args.eventData.eventType]
	self.play:getChildAutoType("cost"):setText(eventConfig.costPoint)
	self.play:addClickListener(function ()
		--self:playEvent(self._args.eventData,self._args.index)
		Dispatcher.dispatchEvent(EventType.expedition_fightEvent,self._args.eventData,self._args.index)
		self:closeView();
	end)
end


return EDEnemyView