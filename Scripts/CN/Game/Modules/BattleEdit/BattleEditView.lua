--Name : GuideEditView.lua
--Author : generated by FairyGUI
--Date : 2020-7-16
--Desc : 

local BattleEditView,Super = class("BattleEditView", Window)

local battle_Config = false


function BattleEditView:ctor()
	--LuaLog("GuideEditView ctor")
	self._packName = "BattleEdit"
	self._compName = "BattleEditView"
	self._rootDepth = LayerDepth.Guide
	self.luaFile = GMModel.currentAssets .."Scripts/CN/Configs/Generate/FightConfig.lua"
	self.luaFile2 = GMModel.currentAssets .."Scripts/CN/Configs/Generate/FightConfig"
	self.curData = false
	self.step = false
	self.index = false
	
	self.updateFunc = false
	self.addFunc = false
	self.firtGuideData = false
	self.treeRootNode = false
	self.createitem = false
	
	self.templates = false
	
	self.winRectTitle = false
end

function BattleEditView:_initEvent( )
	
end

function BattleEditView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:BattleEdit.BattleEditView
	local listContent = viewNode:getChildAutoType("$listContent")--
	vmRoot.listContent = listContent
	listContent.createbt = viewNode:getChildAutoType("$listContent/$createbt")--Button
	listContent.savebt = viewNode:getChildAutoType("$listContent/$savebt")--Button
	listContent.hide = viewNode:getChildAutoType("$listContent/$hide")--Button
	listContent.getTextbt = viewNode:getChildAutoType("$listContent/$getTextbt")--Button
	listContent.guideData = viewNode:getChildAutoType("$listContent/$guideData")--ComboBox
	listContent.tuodong = viewNode:getChildAutoType("$listContent/$tuodong")--graph
	listContent.input = viewNode:getChildAutoType("$listContent/$input")--text
	listContent.treeList = viewNode:getChildAutoType("$listContent/$treeList")--list
	--{vmFieldsEnd}:BattleEdit.BattleEditView
	--Do not modify above code-------------
end

function BattleEditView:_initUI( )
	self:_initVM()

	local allData = {}
	battle_Config = loadstring(io.readfile(self.luaFile))()

	allData["fightConfig"] = battle_Config
	for i = 2, 100 do
		local strings = io.readfile(self.luaFile2..i..".lua")
		if strings then
			allData["fightConfig"..i] = loadstring(strings)()
		else
			break
		end
	end
	
	
	local showData = {}
	for k,v in pairs(allData) do
		table.insert(showData,k)
	end
	
	self.listContent.tuodong:setDraggable(true)
	self.listContent.guideData:setTitle("battleConfig1")
	self.listContent.guideData:setItems(showData)
	self.listContent.guideData:addEventListener(FUIEventType.Changed,function(data)
			--self.listContent.guideData:setT
			--printTable(33,"data = ",data)
			local key =  self.listContent.guideData:getTitle()
			battle_Config = allData[key]
			self:initList()
		end)
	
	self.listContent.getTextbt:addClickListener(function()
			Dispatcher.dispatchEvent(EventType.Battle_playEditBattle,{fightID=DynamicConfigData.t_endlessRoadConst[1].fightId,configType=GameDef.BattleArrayType.EndlessRoad},battle_Config)
		self:closeView()
		end,33)
	
	self:initList()
end

function BattleEditView:initList()
	--printTable(33,"initList",data)

	self.listContent.treeList:getRootNode():removeChildren()
	local saveData = {}

	local function createitem(rootNode,p,k,v,t)

		if t and type(v) == "table" then
			local topNode = fgui.GTreeNode:create(true);
			print(33,"createitem",tostring(v[1]))
			--topNode:setData({p=p,k=k,v=v});
			saveData[tostring(topNode)] = {n=topNode,p=p,k=k,v=v}
			rootNode:addChild(topNode);
			for s,z in pairs(v)  do
				createitem(topNode,tostring(topNode),s,z,t)
			end

			return topNode
		else
			local topNode = fgui.GTreeNode:create(false);
			--topNode:setData({p=p,k=k,v=v});
			saveData[tostring(topNode)] = {n=topNode,p=p,k=k,v=v}
			rootNode:addChild(topNode);
			return topNode
		end
	end
	self.createitem = createitem
	local treeRootNode = self.listContent.treeList:getRootNode()
	self.treeRootNode = treeRootNode
	self.listContent.treeList:setVisible(true)
	self.listContent.treeList:setTreeNodeRender(function(node,obj)
			local n_data = saveData[tostring(node)]
			if node:isFolder() then
				obj:setTitle("[color=#66AACC]"..n_data.k)
			else
				if type(n_data.v)=="table" then
					if n_data.v.text and n_data.v.text ~="" and (not n_data.v.textRect or n_data.v.textRect == "")then
						RollTips.show(Desc.battleEdit_error..n_data.k)
					end
					obj:setTitle("[color=#66AACC]"..tostring(n_data.k).."="..tostring(n_data.v).."[/color]")
				else
					obj:setTitle("[color=#66AACC]"..tostring(n_data.k).."[/color]")
				end
				
			end

			obj:getChildAutoType("rename"):addClickListener(function(context)


				end,33)
			obj:getChildAutoType("edit"):addClickListener(function(context)
					context:stopPropagation()
					if node:isFolder() then
						self.index = #n_data.v+1
						self.step  = n_data.k
						self:addItem( n_data,saveData,node,obj )
					else
						self.index = n_data.k
						self.step  = saveData[n_data.p].k
						self:updateCanshu( n_data.v ,function()
								local level = n_data.v.level or 1
								local endPoint = (n_data.v.ed and " [color=#ff0000]["..level.."][/color]" or "")
								local desc = n_data.v.desc or ""
								obj:setTitle("[color=#66AACC]"..tostring(n_data.k).."=["..desc.."][/color]")

							end)


					end
				end,33)
			obj:getChildAutoType("del"):addClickListener(function(context)
					context:stopPropagation()
					print(33,"del")
					local info = {}
					info.text = Desc.battleEdit_delete
					info.type = "yes_no"
					info.onYes = function()
						if node:isFolder() then
							battle_Config[n_data.k] = nil
							treeRootNode:removeChild(node)
						else
							local p_data = saveData[n_data.p]
							table.remove(p_data.v,n_data.k)

							treeRootNode:removeChild(node:getParent())
							local nnode = createitem(treeRootNode,battle_Config,p_data.k,p_data.v,true)
							nnode:setExpaned(true)
						end
					end
					Alert.show(info)

				end,33)
			obj:getChildAutoType("refesh"):addClickListener(function(context)
					context:stopPropagation()
					self.canshu:setVisible(false)
					treeRootNode:removeChild(node)
					local nnode = createitem(treeRootNode,battle_Config,n_data.k,n_data.v,true)
					nnode:setExpaned(true)
				end,33)
			obj:getChildAutoType("play"):addClickListener(function(context)
					context:stopPropagation()
					GuideModel.guide_AllConfig = self.allData
					local guideName = self.listContent.guideData:getTitle()
					if node:isFolder() then
						print(33,"1 play->",guideName,n_data.k)
						Dispatcher.dispatchEvent(EventType.guide_open,{guideName = guideName,guideStep = n_data.k})
					else
						print(33,"2 play->",guideName,saveData[n_data.p].k,n_data.k-1)
						Dispatcher.dispatchEvent(EventType.guide_open,{guideName = guideName,guideStep = saveData[n_data.p].k,guideIndex = n_data.k-1,})
					end

				end,33)
		end)




	saveData[tostring(treeRootNode)] = {n=treeRootNode,v=battle_Config}
	for k,v in pairs(battle_Config) do
		createitem(treeRootNode,tostring(treeRootNode),k,v,true)
	end


	self.listContent.hide:addClickListener(function (context)
			local info = {}
			info.text = Desc.battleEdit_close

			info.type = "yes_no"
			info._rootDepth = self._rootDepth
			info.onYes = function()
				self:closeView()
			end

			Alert.show(info)

		end)
end


return BattleEditView