--Date :2020-12-30
--Author : generated by FairyGUI
--Desc :

local GodMarketMineListView, Super = class("GodMarketMineListView", Window)

function GodMarketMineListView:ctor()
    --LuaLog("GodMarketMineListView ctor")
    self._packName = "GodMarket"
    self._compName = "GodMarketMineListView"
    self._rootDepth = LayerDepth.PopWindow
    self.calltimer = false
end

function GodMarketMineListView:_initEvent()
end

function GodMarketMineListView:_initVM()
    local viewNode = self.view
    ---Do not modify following code--------
    --{autoFields}:ExtraordinarylevelPvP.GodMarketMineListView
	self.List_reward = viewNode:getChildAutoType('$List_reward')--GList
	self.img_banner = viewNode:getChildAutoType('$img_banner')--GButton
	self.btn_help = viewNode:getChildAutoType('btn_help')--GButton
	self.btn_play = viewNode:getChildAutoType('btn_play')--Component16
		self.btn_play.img_duanwei = viewNode:getChildAutoType('btn_play/img_duanwei')--GLoader
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.txt_countdowm = viewNode:getChildAutoType('txt_countdowm')--GTextField
	self.txt_desc = viewNode:getChildAutoType('txt_desc')--GRichTextField
 --{autoFieldsEnd}:ExtraordinarylevelPvP.GodMarketMineListView
    --Do not modify above code-------------
end

function GodMarketMineListView:_initUI()
    self:_initVM()
    self.lihuiDisplay = BindManager.bindLihuiDisplay(self.img_banner)
    self.lihuiDisplay:setData(34002, nil, true,nil)
    --local winNum = GodMarketModel.serverData.actionScore or 0
    --self.txt_desc:setText(string.format("达到指定行动积分可解锁丰厚奖励(当前行动积分:%s)", ColorUtil.formatColorString1(winNum, "#6AFF60")))
    --self.starInfo = GodMarketModel:getMineListConfigInfo(true)
    self.List_reward:setVirtual()
    self:showActiveTime()
    self:isshowPlayBtn()
    self.List_reward:setItemRenderer(
        function(index, obj)
            local winNum = GodMarketModel.serverData.actionScore or 0
			local lingquMap = GodMarketModel.mineRewardState or {}
            local itemInfo = self.starInfo[index + 1]
            local txt_shengcahng = obj:getChildAutoType("txt_shengcahng")
            txt_shengcahng:setText(string.format(Desc.godmarket_desc19, itemInfo.actionValue)) --godmarket_desc19="达到%s分"
            local gCtr1 = obj:getController("c1")
            local info = lingquMap[itemInfo.id] or {}
            local putongindex = info.state or false
             local speciaIndex = info.buyState or false
   
            local hasMoneyBuy = false
            if GodMarketModel.hasBuyMine == true then
                hasMoneyBuy = true
            end
            if winNum < itemInfo.actionValue then
                gCtr1:setSelectedIndex(0)
            else
                if hasMoneyBuy==false then
                    if putongindex == true and speciaIndex == true then
                        gCtr1:setSelectedIndex(3)
                    elseif putongindex == false and speciaIndex == true then
                        gCtr1:setSelectedIndex(2)
                    elseif putongindex == false and speciaIndex == false then
                        gCtr1:setSelectedIndex(1)
                    end
                else
                    if putongindex == true and speciaIndex == true then
                        gCtr1:setSelectedIndex(3)
                    elseif putongindex == false and speciaIndex == true then
                        gCtr1:setSelectedIndex(1)
                    elseif putongindex == false and speciaIndex == false then
                        gCtr1:setSelectedIndex(1)
                    end
                end
            end
            local list_ordinary = obj:getChildAutoType("list_ordinary")
            local list_specia = obj:getChildAutoType("list_specia")
            list_ordinary:setItemRenderer(
                function(index, rewardObj)
                    local reewardItemC = rewardObj:getController("c1")
                    if putongindex then
                        reewardItemC:setSelectedIndex(1)
                    else
                        reewardItemC:setSelectedIndex(0)
                    end
                    rewardObj:removeClickListener(100)
                    --池子里面原来的事件注销掉
                    local itemMode = rewardObj:getChildAutoType("itemCell")
                    local itemcell = BindManager.bindItemCell(itemMode)
                    local award = itemInfo.freeReward[index + 1]
                    itemcell:setData(award.code, award.amount, award.type)
                end
            )
            list_ordinary:setNumItems(#itemInfo.freeReward)
            list_specia:setItemRenderer(
                function(index, rewardObj)
                    local reewardItemC = rewardObj:getController("c1")
                    if speciaIndex then
                        reewardItemC:setSelectedIndex(1)
                    else
                        reewardItemC:setSelectedIndex(0)
                    end
                    rewardObj:removeClickListener(100)
                    --池子里面原来的事件注销掉
                    local itemMode = rewardObj:getChildAutoType("itemCell")
                    local itemcell1 = BindManager.bindItemCell(itemMode)
                    local award = itemInfo.payitem[index + 1]
                    itemcell1:setData(award.code, award.amount, award.type)
                end
            )
            list_specia:setNumItems(#itemInfo.payitem)

        
            local btn_ordinary = obj:getChildAutoType("btn_ordinary")
            local btn_specia = obj:getChildAutoType("btn_specia")
            if hasMoneyBuy==false then
                btn_ordinary:removeClickListener(100)
                btn_ordinary:addClickListener(
                    function(context)
                        if winNum < itemInfo.actionValue then
                            RollTips.show(Desc.activity_txt8)
                        else
							GodMarketModel:getMineListReward(itemInfo.id)
                        end
                    end,
                    100
                )
                btn_specia:removeClickListener(100)
                btn_specia:addClickListener(
                    function(context)
                        if hasMoneyBuy == false and speciaIndex == true then
                            ViewManager.open("ExtraordinaryKingbountyView")
                        elseif hasMoneyBuy == true and speciaIndex == true then
							GodMarketModel:getMineListReward(itemInfo.id)
                        end
                    end,
                    100
                )
            else
                btn_ordinary:removeClickListener(100)
                btn_ordinary:addClickListener(
                    function(context)
                        if winNum < itemInfo.actionValue then
                            RollTips.show(Desc.activity_txt8)
                        else
							GodMarketModel:getMineListReward(itemInfo.id)
                        end
                    end,
                    100
                )
            end
        end
    )
	self:moveTitleToTop()
    self:godmarket_mineRewardStateChange()
	GodMarketModel:getMineInfos()
end

-- 倒计时
function GodMarketMineListView:showActiveTime()
    if self.isEnd then return end
    local actData = ModelManager.ActivityModel:getActityByType(GameDef.ActivityType.GodMarket)
    if not actData then return end
    local actId   = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then return end
    if status == 2 and addtime == -1 then
        self.isEnd = false
		
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = math.floor(addtime / 1000)
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if not tolua.isnull(self.txt_countdowm) then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
            end
            local function onCountDown(time)
                if not tolua.isnull(self.txt_countdowm) then
                    self.isEnd = false
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
            end
            local function onEnd(...)
                self.isEnd = true
                if not tolua.isnull(self.txt_countdowm) then
                    --  self.activityEnable = true
                    self.txt_countdowm:setText(Desc.activity_txt18)
                end
            end
            if self.timer then
                TimeLib.clearCountDown(self.timer)
            end
            self.timer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
        end
    end
end

--事件初始化
function GodMarketMineListView:_initEvent(...)
    self.btn_play:addClickListener(
        function(...)
            ViewManager.open("GodMarketMineView")
        end
    )

    self.btn_help:addClickListener(
        function(...)
			RollTips.showHelp(Desc["help_StrTitleWzzz"], Desc["help_StrDescWzzz"])
        end
    )
end

function GodMarketMineListView:godmarket_mineRewardStateChange()
    self.starInfo = GodMarketModel:getMineListConfigInfo(true)
    self.List_reward:setNumItems(#self.starInfo)
    self:isshowPlayBtn()
    local winNum = GodMarketModel.serverData.actionScore or 0
    self.txt_desc:setText(string.format(Desc.godmarket_desc20, ColorUtil.formatColorString1(winNum, "#6AFF60"))) --godmarket_desc20="达到指定行动积分可解锁丰厚奖励(当前行动积分:%s)"
end

function GodMarketMineListView:isshowPlayBtn()
    if GodMarketModel.hasBuyMine == true then
        self.btn_play:setVisible(false)
    else
        self.btn_play:setVisible(true)
    end
end

function GodMarketMineListView:_exit()
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end

return GodMarketMineListView
