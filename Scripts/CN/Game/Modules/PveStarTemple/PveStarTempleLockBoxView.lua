--Name : PveStarTempleLockBoxView.lua
--Author : generated by FairyGUI
--Date : 2020-7-31
--Desc : 

local PveStarTempleLockBoxView,Super = class("PveStarTempleLockBoxView", Window)

function PveStarTempleLockBoxView:ctor()
	--LuaLog("PveStarTempleLockBoxView ctor")
	self._packName = "PveStarTemple"
	self._compName = "PveStarTempleLockBoxView"
	self._rootDepth = LayerDepth.PopWindow
	self.areaID = self._args.areaID
	self.pos = self._args.pos
	self.configData = ModelManager.PveStarTempleModel:getEventConfig(1,5001)
end

function PveStarTempleLockBoxView:_initEvent( )
	
end

function PveStarTempleLockBoxView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:PveStarTemple.PveStarTempleLockBoxView
		--{vmFieldsEnd}:PveStarTemple.PveStarTempleLockBoxView
	--Do not modify above code-------------
end

function PveStarTempleLockBoxView:_initUI( )
	self:_initVM()
	self.rewardList = self.view:getChildAutoType("rewardList")
	self.txtCount = self.view:getChildAutoType("txtCount")
	self.itemIcon = self.view:getChildAutoType("itemIcon")
	self.btnOpen = self.view:getChildAutoType("btnOpen")
	self.itemIcon:setScale(0.3,0.3)
	self.rewardList:setItemRenderer(function(index,obj)
		self:rewardListRenderer(index,obj)
	end)

	self.btnOpen:addClickListener(function ()
		self:onBtnOpenClick()
	end,1)

	self.view:getChildAutoType("n10"):setURL(PathConfiger.getPveStarTempleBG("lockbox_frame"))
	self:updateRewardList()
	self:updateNeedItem()
end

function PveStarTempleLockBoxView:_exit()
	self.areaID = false
	self.pos = false
	self.configData = false
end

function PveStarTempleLockBoxView:updateRewardList()
	local num = #self.configData.itemShow
	self.rewardList:setNumItems(num)
	self.rewardList:resizeToFit(num <= 5 and num or 5)
end

function PveStarTempleLockBoxView:updateNeedItem()
	local configData = self.configData.needItem[1]
	local itemData = ItemsUtil.createItemData({data = configData})
	local itemConfig = DynamicConfigData.t_item[itemData:getItemCode()]
	local count = ModelManager.PackModel:getItemsFromAllPackByCode(itemData:getItemCode())

	self.itemIcon:setURL(PathConfiger.getItemIcon(itemConfig.icon))
	self.txtCount:setText(count)
end

function PveStarTempleLockBoxView:rewardListRenderer(index,obj)
	local itemCell = BindManager.bindItemCell(obj)
	local configData = self.configData.itemShow[index + 1]
	local itemConfigData = DynamicConfigData.t_item[configData.code]
	local itemData = ItemsUtil.createItemData({data = itemConfigData})

	itemCell:setItemData(itemData)
end

function PveStarTempleLockBoxView:onBtnOpenClick()
	local notEnoughList = {}
	for k,v in pairs(self.configData.needItem) do
		local count = ModelManager.PackModel:getItemsFromAllPackByCode(v.code)
		if count < v.amount then
			table.insert(notEnoughList,v.code)
		end
	end

	if #notEnoughList > 0 then
		local str = ""
		for i,v in ipairs(notEnoughList) do
			str = string.format("%s%s",str,DynamicConfigData.t_item[v].name)
			if i < #notEnoughList then
				str = str..","
			end
		end
		str = str..DescAuto[205] -- [205]="数量不足，继续探索"
		RollTips.show(str)
		return
	end

	Dispatcher.dispatchEvent(EventType.PveStarTemple_EevntUse,{areaID = self.areaID,pos = self.pos})
	self:closeView()
end

return PveStarTempleLockBoxView
