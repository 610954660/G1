--Name : PveStarTempleMedcineView.lua
--Author : generated by FairyGUI
--Date : 2020-7-28
--Desc : 

local PveStarTempleMedcineView,Super = class("PveStarTempleMedcineView", Window)

function PveStarTempleMedcineView:ctor()
	--LuaLog("PveStarTempleMedcineView ctor")
	self._packName = "PveStarTemple"
	self._compName = "PveStarTempleMedcineView"
	self._rootDepth = LayerDepth.PopWindow
	self.selectHeroData = false
	self.currSelectHeroIndex = false
end

function PveStarTempleMedcineView:_initEvent( )
	
end

function PveStarTempleMedcineView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:PveStarTemple.PveStarTempleMedcineView
		--{vmFieldsEnd}:PveStarTemple.PveStarTempleMedcineView
	--Do not modify above code-------------
end

function PveStarTempleMedcineView:_initUI( )
	self:_initVM()
	self.itemCell = BindManager.bindItemCell(self.view:getChildAutoType("itemCell"))
	self.txtItemName = self.view:getChildAutoType("txtItemName")
	self.txtItemDesc = self.view:getChildAutoType("txtItemDesc")
	self.txtRoundTime = self.view:getChildAutoType("txtRoundTime")
	self.txtItemCount = self.view:getChildAutoType("txtItemCount")
	self.heroList = self.view:getChildAutoType("heroList")

	self.heroList:setItemRenderer(function(index,obj)
		self:heroListRenderer(index,obj)
	end)

	self:updateHeroList(true)
	self:updateItemCell()
end

function PveStarTempleMedcineView:_exit()
	self.selectHeroData = false
	self.currSelectHeroIndex = false
end

function PveStarTempleMedcineView:updateHeroList(isSort)
	local list = ModelManager.PveStarTempleModel:getHPNotMaxHeroList()

	if #list < 1 then
		self:closeView()
		return
	end

	if isSort then
		table.sort(list,function(a,b)
			return a.hp < b.hp
		end)
		self.selectHeroData = list
	else
		for k,v in pairs(list) do
			for i,hero in ipairs(self.selectHeroData) do
				if hero.uuid == v.uuid then
					self.selectHeroData[i] = v
					break
				end
			end
		end
	end

	--if not self.currSelectHeroIndex then
	--	self.currSelectHeroIndex = 1
	--end
	self.heroList:setNumItems(#self.selectHeroData)
end

function PveStarTempleMedcineView:updateItemCell()
	local starTempleItem = DynamicConfigData.t_PveStarTempleItemConfig[3][1]
	local itemConfigData  = DynamicConfigData.t_item[starTempleItem.item[1].code]
	local amount = ModelManager.PackModel:getItemsFromAllPackByCode(starTempleItem.item[1].code)
	local useCount = ModelManager.PveStarTempleModel:getItemUseCount(itemConfigData.code)
	local useLimit = ModelManager.PveStarTempleModel:getItemUseLimit(itemConfigData.code)
	self.itemCell:setData(starTempleItem.item[1].code,starTempleItem.item[1].amount,starTempleItem.item[1].type)
	self.itemCell:setAmount(0)
	self.txtItemName:setText(itemConfigData.name)
	self.txtItemDesc:setText(itemConfigData.descStr)
	self.txtRoundTime:setText(useLimit - useCount)
	self.txtItemCount:setText(amount)
end

function PveStarTempleMedcineView:heroListRenderer(index,obj)
	obj:addEventListener(FUIEventType.Click,function (context)
		self:onHeroClick(index + 1)
	end,1)
	--obj:getController("state"):setSelectedPage(self.currSelectHeroIndex == index + 1 and "on" or "out")
	obj:getController("showName"):setSelectedPage(0)
	local heroCell = BindManager.bindHeroCell(obj:getChildAutoType("heroCell"))
	heroCell:showNp(0)
	heroCell:setData(self.selectHeroData[index+1])
end

function PveStarTempleMedcineView:onHeroClick(index)
	print(999,"英雄选择",index)

	if not index then
		RollTips.show(DescAuto[210]) -- [210]="请选择一个对象"
		return
	end

	local itemCode = DynamicConfigData.t_PveStarTempleItemConfig[3][1].item[1].code
	local amount = ModelManager.PackModel:getItemsFromAllPackByCode(itemCode)
	local pack = ModelManager.PackModel:getPackByType(GameDef.BagType.PveStarTemple):getItemsByCode(itemCode)
	local useCount = ModelManager.PveStarTempleModel:getItemUseCount(itemCode)
	local useLimit = ModelManager.PveStarTempleModel:getItemUseLimit(itemCode)

	if amount < 1 then
		RollTips.show(DescAuto[211]) -- [211]="没有获得该道具，继续探索"
		return
	end

	if useLimit - useCount < 1 then
		RollTips.show(DescAuto[212]) -- [212]="使用次数不足"
		return
	end

	local hero = self.selectHeroData[index]
	if hero.hp >= hero.maxHp then
		RollTips.show(DescAuto[213]) -- [213]="血量已满"
		return
	end

	ModelManager.PveStarTempleModel:updateItemUseList({code = itemCode,count = useCount + 1})
	Dispatcher.dispatchEvent(EventType.PveStarTemple_ItemUse,{itemID = pack[1].__data.id,amount = 1,strEx = hero.uuid})
end


return PveStarTempleMedcineView
