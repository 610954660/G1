--Name : PveStarTempleCardView.lua
--Author : generated by FairyGUI
--Date : 2020-7-29
--Desc : 

local PveStarTempleCardView,Super = class("PveStarTempleCardView", Window)

function PveStarTempleCardView:ctor()
	--LuaLog("PveStarTempleCardView ctor")
	self._packName = "PveStarTemple"
	self._compName = "PveStarTempleCardView"
	self._rootDepth = LayerDepth.PopWindow
	self.eventItemList = {}
	self.areaID = self._args.areaID
	self.pos = self._args.pos
	self.currEventIndex = false
	self.currItemIndex = false
	self.currConfigList = {}
end

function PveStarTempleCardView:_initEvent( )
	
end

function PveStarTempleCardView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:PveStarTemple.PveStarTempleCardView
		--{vmFieldsEnd}:PveStarTemple.PveStarTempleCardView
	--Do not modify above code-------------
end

function PveStarTempleCardView:_initUI( )
	self:_initVM()
	self.itemList = self.view:getChildAutoType("itemList")
	self.cardList = self.view:getChildAutoType("cardList")
	self.btnStart = self.view:getChildAutoType("btnStart")

	self.btnStart:addClickListener(function ()
		self:onBtnStartClick()
	end)

	self.cardList:setItemRenderer(function(index,obj)
		self:cardListRenderer(index,obj)
	end)

	self.itemList:setItemRenderer(function(index,obj)
		self:itemListRenderer(index,obj)
	end)

	self.view:getChildAutoType("n63"):setURL(PathConfiger.getPveStarTempleBG("card_frame"))

	self.currEventIndex = 1
	self:updateCardList()
	self:updateItemList()
	self.cardList:setSelectedIndex(0)
end

function PveStarTempleCardView:_exit()
	self.eventItemList = false
	self.areaID = false
	self.pos = false
	self.currEventIndex = false
	self.currItemIndex = false
	self.currConfigList = false
end

function PveStarTempleCardView:updateCardList()
	self.cardList:setNumItems(3)
end

function PveStarTempleCardView:updateItemList()
	self.currConfigList = {}
	for k,v in ipairs(DynamicConfigData.t_PveStarTempleEventConfig[7]) do
		if v.policyType == self.currEventIndex then
			table.insert(self.currConfigList,v)
		end
	end

	self.itemList:setNumItems(#self.currConfigList)
	--self.itemList:resizeToFit(num)
end

function PveStarTempleCardView:cardListRenderer(index,obj)
	obj:getController("type"):setSelectedIndex(index)
	obj:addClickListener(function()
		self:onCardItemClick(index + 1)
	end,1)
end

function PveStarTempleCardView:itemListRenderer(index,obj)
	local configData = self.currConfigList[index + 1].goods[1]
	local itemCell = BindManager.bindItemCell(obj)

	obj:addClickListener(function(context)
		self:onItemClick(index + 1)
	end,1)

	itemCell:setIsHook(self.currItemIndex == index + 1)
	itemCell:setData(configData.code,configData.amount,configData.type)
	itemCell:setClickable(false)
end

function PveStarTempleCardView:onCardItemClick(index)
	self.currItemIndex = false
	self.currEventIndex = index
	self:updateItemList()
end

function PveStarTempleCardView:onItemClick(index)
	self.currItemIndex = index
	self:updateItemList()
end

function PveStarTempleCardView:onBtnStartClick()
	if not self.currItemIndex then
		RollTips.show("请选择一种物资")
		return
	end

	if not self.currEventIndex then
		RollTips.show("请选择一种策略")
		return
	end

	local onlyId = self.currConfigList[self.currItemIndex].onlyId
	ModelManager.PveStarTempleModel:setCurrEventOnlyID(onlyId)
	Dispatcher.dispatchEvent(EventType.PveStarTemple_EevntUse,{areaID = self.areaID,pos = self.pos,param1 = onlyId})--,param2 = onlyId})
	self:closeView()
end

return PveStarTempleCardView