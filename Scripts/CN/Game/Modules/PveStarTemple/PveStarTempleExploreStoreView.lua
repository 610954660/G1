--Name : PveStarTempleExploreStoreView.lua
--Author : generated by FairyGUI
--Date : 2020-7-28
--Desc :

local PveStarTempleExploreStoreView,Super = class("PveStarTempleExploreStoreView", Window)

function PveStarTempleExploreStoreView:ctor()
	--LuaLog("PveStarTempleExploreStoreView ctor")
	self._packName = "PveStarTemple"
	self._compName = "PveStarTempleExploreStoreView"
	self._rootDepth = LayerDepth.PopWindow
	self.goodsData = false
	self.roundTime = false
	self.timer = false
	self.noData=false
end

function PveStarTempleExploreStoreView:_initEvent( )

end

function PveStarTempleExploreStoreView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:PveStarTemple.PveStarTempleExploreStoreView
	--{vmFieldsEnd}:PveStarTemple.PveStarTempleExploreStoreView
	--Do not modify above code-------------
end

function PveStarTempleExploreStoreView:_initUI( )
	self:_initVM()
	self.itemList = self.view:getChildAutoType("itemList")
	self.txtTime = self.view:getChildAutoType("txtTime")
	self.btnClose = self.view:getChildAutoType("n13")
	self.noData=self.view:getChildAutoType("noData")
	self.itemList:setItemRenderer(function(index,obj)
		self:itemListRenderer(index,obj)
	end)

	self.view:getChildAutoType("n6"):setURL(PathConfiger.getPveStarTempleBG("explore_frame"))

	self.btnClose:addClickListener(function()
		self:onBtnCloseClick()
	end,101)
	self:updateItemList()
	self:updateRoundTime()
end

function PveStarTempleExploreStoreView:_exit()
	if self.timer then
		TimeLib.clearCountDown(self.timer)
	end

	self.goodsData = false
	self.roundTime = false
	self.timer = false
end

function PveStarTempleExploreStoreView:updateItemList()
	self.goodsData = ModelManager.PveStarTempleModel:getExploreShop()
	self.itemList:setNumItems(#self.goodsData)
	if next(self.goodsData)~=nil then
		self.noData:setVisible(false)
	else
		self.noData:setVisible(true)
	end
end

function PveStarTempleExploreStoreView:updateRoundTime()
	self.roundTime = (ModelManager.PveStarTempleModel:getRoundTime() - ModelManager.ServerTimeModel:getServerTimeMS()/1000)
	self.txtTime:setText(TimeLib.GetTimeFormatDay1(self.roundTime))

	if self.timer then
		TimeLib.clearCountDown(self.timer)
	end

	self.timer = TimeLib.newCountDown(self.roundTime,function(time)
		self:onCountDown(time)
	end, nil, false, false,false)
end

function PveStarTempleExploreStoreView:onCountDown(time)
	self.txtTime:setText(TimeLib.GetTimeFormatDay1(time))
end

function PveStarTempleExploreStoreView:itemListRenderer(index,obj)
	local goodsID = self.goodsData[index + 1].goodsId
	local sellOut = self.goodsData[index + 1].buy == 1
	local config = DynamicConfigData.t_PveStarTempleMallConfig[6][goodsID]
	local itemConfigData  = DynamicConfigData.t_item[config.item[1].code]
	local itemCell = BindManager.bindItemCell(obj:getChildAutoType("itemCell"))
	local txtItemName = obj:getChildAutoType("txtItemName")
	local priceIcon = obj:getChildAutoType("priceIcon")
	local txtPrice = obj:getChildAutoType("txtPrice")

	itemCell:setData(config.item[1].code,config.item[1].amount,config.item[1].type)
	itemCell:setAmount(config.item[1].amount)
	txtItemName:setText(itemConfigData.name)
	priceIcon:setURL(PathConfiger.getMoneyIcon(config.price[1].code))
	txtPrice:setText(MathUtil.toSectionStr(config.price[1].amount))

	obj:getController("showRate"):setSelectedIndex(1)
	obj:getController("sellOut"):setSelectedIndex(sellOut and 1 or 0)
	obj:getChildAutoType("txtRate"):setText(string.format("%s折",config.rate/10))
	obj:addClickListener(function()
		self:onBtnBuyClick(index + 1)
	end,101)
end

function PveStarTempleExploreStoreView:onBtnBuyClick(index)
	if self.goodsData[index].buy == 1 then
		RollTips.show("商品已售完")
		return
	end

	local goodsID = self.goodsData[index].goodsId
	local config = DynamicConfigData.t_PveStarTempleMallConfig[6][goodsID]
	local priceItemData = ItemsUtil.createItemData({data = config.price[1]})
	local priceConfigData = DynamicConfigData.t_item[priceItemData:getItemCode()]
	local goodsItemData = DynamicConfigData.t_item[config.item[1].code]

	local info = {
		text = string.format("是否花费%s%s购买%s？", MathUtil.toSectionStr(config.price[1].amount),priceConfigData.name,goodsItemData.name),
		type="yes_no",
		onYes= function()
			Alert.closeAll()
			local money = ModelManager.PlayerModel:getMoneyByType(config.price[1].type)
			--if money < config.price[1].amount then
				--RollTips.show(string.format("%s不足",priceConfigData.name))
				--return
			--end
			self:onBuy(index)
		end,
	}
	Alert.show(info)
end

function PveStarTempleExploreStoreView:onBuy(index)
	local uuid = self.goodsData[index].uuid
	Dispatcher.dispatchEvent(EventType.PveStarTemple_BuyMall,uuid)
end

function PveStarTempleExploreStoreView:onBtnCloseClick()
	self:closeView()
end

return PveStarTempleExploreStoreView