--Name : UpGetCardActivityModel.lua
--Author : generated by FairyGUI
--Date : 2020-9-3
--Desc : 


local UpGetCardActivityModel = class("UpGetCardActivityModel", BaseModel)

function UpGetCardActivityModel:ctor()
    self.data = {}
end

function UpGetCardActivityModel:init()

end

function UpGetCardActivityModel:initData( params )
	self.data = params
	Dispatcher.dispatchEvent("update_upgetCard")
	self:checkRedDot()
end

function UpGetCardActivityModel:checkRedDot( ... )
	RedManager.addMap("V_ACTIVITY_"..GameDef.ActivityType.SpecialSummon,{"V_SUBACTIVITY_JY"})
    RedManager.updateValue("V_SUBACTIVITY_JY",false)
    local viewData = ActivityModel:getActityByType( GameDef.ActivityType.SpecialSummon )
	if viewData then
		printTable(1,"精英活动",viewData)
    	-- local lotteryIdList = viewData.showContent.lotteryIdList
    	local config = self:getAllConfig( viewData.showContent.countReward)
    	for k,v in pairs(config) do
    		if self.data.specialSummon and self.data.specialSummon.count>= v.num then
    			local flag = self:checkHadGetAward(v.id)
			    if not flag then
			    	RedManager.updateValue("V_SUBACTIVITY_JY",true)
                   return
			    end
    		end
    	end
    end
    if self.data.specialSummon.freeTimes>0 then
		RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.SpecialSummon,true)
	else
		RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.SpecialSummon,false)
	end
end

function UpGetCardActivityModel:getData( ... )
	return self.data.specialSummon
end

function UpGetCardActivityModel:getAllConfig( id )
	-- local type= DynamicConfigData.t_heroLottery[id].type
	return DynamicConfigData.t_LotteryTimesReward[id]
end

function UpGetCardActivityModel:getConfigByNextId( type,count)
	local config =  DynamicConfigData.t_LotteryTimesReward[type]
	local maxConfig = nil
	local maxCount = 0
	for i,v in ipairs(config) do
		if maxCount < v.num then
			maxCount = v.num
			maxConfig = v
		end
		if v.num>=count then
			return v
		end
	end
	return maxConfig
end

function UpGetCardActivityModel:checkHadGetAward( id)
	if self.data.specialSummon and self.data.specialSummon.rewardRecordMap then
		local tempData = self.data.specialSummon.rewardRecordMap
		for k,v in pairs(tempData) do
			if v.id == id then
				return true
			end
		end
	end
	return false
end

return UpGetCardActivityModel
