--Date :2021-01-21
--Author : generated by FairyGUI
--Desc :

local SurveyQuestionModel = class("TwistSpFestival", BaseModel)

function SurveyQuestionModel:ctor()
	self.activeData=false
	self.activeConfig=false
	self.moduleId=1
	self.hasOpen=false
	
end

function SurveyQuestionModel:init()
	
end


function SurveyQuestionModel:initData(data)
	if data and data.survey then
		self.activeData = data.survey or  {}
	end
	self:setSendWordActiveDataCfg()
	self.activeConfig=ActivityModel:getActityByType(GameDef.ActivityType.Survey)
	if self.activeConfig then
		--printTable(5656,self.activeConfig,"问卷调查配置")
		--self.moduleId=acConfig.showContent.moduleId or 1
	end
	self:redCheck()
	Dispatcher.dispatchEvent(EventType.activity_SurveyQuestionUpdate)
end


function SurveyQuestionModel:getAciveConfig()
	return self.activeConfig
end


function SurveyQuestionModel:getAciveData()
	return self.activeData
end


function SurveyQuestionModel:setSendWordActiveDataCfg()
	--if TableUtil.GetTableLen(self.activeConfig) == 0 then
		--self.activeConfig = DynamicConfigData.t_FestivalWishConfig[self.moduleId]
	--end
end





function SurveyQuestionModel:redCheck()
	GlobalUtil.delayCallOnce("SurveyQuestionModel:redCheck",function()
			self:updateRed()
		end, self, 0.1)
end




--提交寄语确认
function SurveyQuestionModel:showConfirmView(yesFunc)
	local info = {}
	info.title = "提示"
	info.text = "亲爱的探长，您的寄语将以弹幕的形式展示给其它玩家，且不可更改，确定提交吗？"
	info.yesText ="提交"
	info.noText = "取消"
	info.mask = true
	info.type = "yes_no"
	info.onYes = function()
		if yesFunc then
			yesFunc()
		end
	end
	info.onNo = function()

	end
	Alert.show(info)
end





--问卷调查投票
function SurveyQuestionModel:surveyGetActivityData(finished)

	local param={
		activityType=GameDef.ActivityType.Survey,
	}
	local function success(data)
		printTable(5656,"获取当前投票信息",data)
		if finished then
			finished(data)
		end
	end
	RPCReq.Activity_Survey_GetActivityData(param,success)
end




--问卷调查投票
function SurveyQuestionModel:surveyOnVote(choseId,finished)

	local param={
		activityType=GameDef.ActivityType.Survey,
		choseId=choseId,
	}
	local function success(data)
		printTable(5656,"问卷调查数据返回",data)
		if finished then
			finished(data)
		end
	end
	RPCReq.Activity_Survey_OnVote(param,success)
end







function SurveyQuestionModel:updateRed()
	RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.Survey,not self.activeData.choseId)
end



return SurveyQuestionModel
