--Date :2021-01-02
--Author : generated by FairyGUI
--Desc : 

local DevilRoadView,Super = class("DevilRoadView", Window)

function DevilRoadView:ctor()
	--LuaLog("DevilRoadView ctor")
	self._packName = "SealDevil"
	self._compName = "DevilRoadView"
	self._rootDepth = LayerDepth.PopWindow
	
end

function DevilRoadView:_initEvent( )
	
end

function DevilRoadView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:SealDevil.DevilRoadView
	self.helpBtn = viewNode:getChildAutoType('$helpBtn')--GButton
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.levelList = viewNode:getChildAutoType('levelList')--GList
	--{autoFieldsEnd}:SealDevil.DevilRoadView
	--Do not modify above code-------------
end

function DevilRoadView:_initListener( )
	self.helpBtn:addClickListener(function()
			RollTips.showHelp(Desc.help_StrTitle249, Desc.help_StrDesc249);
	end)
end

function DevilRoadView:_initUI( )
	self:_initVM()
	self:_initListener()
	self:setData()
	self:setBg("DevilEnter.png")
	SealDevilModel.haveShowRed=true
	SealDevilModel:updateRed()
	
	--local lihuiDisplay = BindManager.bindLihuiDisplay(self.lihuiDisplay)
	--lihuiDisplay:setData(15002,nil)
end


function DevilRoadView:setData( )
	local gateInfos=SealDevilModel.gateInfo
	
	local allGate=DynamicConfigData.t_DevilRoadGate
	local towerLayer = ModelManager.PataModel:getPataFloor(GameDef.GamePlayType.NormalTower)
	
    self.levelList:setItemRenderer(function(index, obj)
		local gateInfo=gateInfos[index+1]
		local gateConfig=allGate[index+1]
	    local levelName=obj:getChildAutoType("levelName")
		local rewardList=obj:getChildAutoType("rewardList")
		--local heroCardex=obj:getChildAutoType("heroCardex")	
		local lihuiObj=obj:getChildAutoType("lihuiMark/lihuiDisplay")
		local lihuiDisplay = BindManager.bindLihuiDisplay(lihuiObj)
		lihuiDisplay:setData(gateConfig.heroCardex,nil)	

		--heroCardex:setURL(PathConfiger.getHeroOfMonsterDex(gateConfig.heroCardex))
		levelName:setText(gateConfig.name)
		rewardList:setItemRenderer(function (index2,obj2)	
				local itemcell = BindManager.bindItemCell(obj2)
				local itemData = ItemsUtil.createItemData({data = gateConfig.reward[index2 + 1]})
				itemcell:setItemData(itemData)
		end)
			
			
		rewardList:setNumItems(table.nums(gateConfig.reward))
		
		local hadOpen=towerLayer>gateConfig.openCondt[1].level
		local noPassStr=""
		obj:getController("levelType"):setSelectedPage("unLock")	
		if not hadOpen then
			obj:getController("levelType"):setSelectedPage("lock")
			noPassStr=string.format(Desc.moduleOpen_tips5,gateConfig.openCondt[1].level)
		end
			
		if gateInfo and gateInfo.unLock then
			obj:addClickListener(function ()
					if not hadOpen then
						RollTips.show(noPassStr.."后开启")
						return 
					end
				    self:goIntoGate(index+1)
			end,1)
			if gateInfo.pass then
				obj:getController("levelType"):setSelectedPage("pass")	
		    end	
		else     	
				obj:getController("levelType"):setSelectedPage("lock")
				obj:addClickListener(function ()
						RollTips.show("通关"..allGate[index].name..noPassStr.."后开启")
				end,1)
		end
			
		
			
	end)
	
	self.levelList:setNumItems(#allGate)
end




function DevilRoadView:goIntoGate(gate)
	--DevilRoad_str4 = "当前正在挑战%s,若挑战%s则会重置%s的进度,确认是否要进行挑战？",
	local allGate=DynamicConfigData.t_DevilRoadGate
	local gateInfos=SealDevilModel.gateInfo
	if SealDevilModel.curGate~=gate  then
		local curName= allGate[SealDevilModel.curGate].name
		local chooseName= allGate[gate].name
		local showDes= string.format(Desc.DevilRoad_str4,curName,chooseName,curName)
		
		local info = {}
		info.text = showDes
		info.mask = true
		info.type = "yes_no"
		--info.check = true
		info.onYes = function(isCheck)
			--SealDevilModel.showTip=not isCheck
			ViewManager.open("SealDevilView",{gate=gate})
		end
		info.onNo = function(isCheck)
			--SealDevilModel.showTip=not isCheck
		end
		--info.onClose = function(isCheck)
			--SealDevilModel.showTip=not isCheck
		--end
		Alert.show(info)
	else
		ViewManager.open("SealDevilView",{gate=gate})
	end

	


end


function DevilRoadView:DevilRoad_unLockLevel()
	self:setData()
end
	




return DevilRoadView