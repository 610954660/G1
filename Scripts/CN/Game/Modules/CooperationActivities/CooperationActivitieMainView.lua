--Date :2021-01-18
--Author : generated by FairyGUI
--Desc :

local CooperationActivitieMainView, Super = class("CooperationActivitieMainView", Window)

function CooperationActivitieMainView:ctor()
    --LuaLog("CooperationActivitieMainView ctor")
    self._packName = "CooperationActivities"
    self._compName = "CooperationActivitieMainView"
    --self._rootDepth = LayerDepth.Window
    self.activeTag = GameDef.ActivityType.WorkTogetherAct
    self.calltimer = false
    --活动倒计时
    self.calltimer1 = false
    --boss刷新倒计时
    self.lihuiDisplayObj = false
    self.curBossInfo = false
    self.awardShowFlag = false
    self.skillInfo=false
end

function CooperationActivitieMainView:_initEvent()
end

function CooperationActivitieMainView:_initVM()
    local viewNode = self.view
    ---Do not modify following code--------
    --{autoFields}:CooperationActivities.CooperationActivitieMainView
	self.awardShowCtrl = viewNode:getController('awardShowCtrl')--Controller
	self.awardView = viewNode:getChildAutoType('awardView')--AwardNode
		self.awardView.list = viewNode:getChildAutoType('awardView/list')--GList
		self.awardView.viewCloseBtn = viewNode:getChildAutoType('awardView/viewCloseBtn')--GButton
	self.bar_1 = viewNode:getChildAutoType('bar_1')--GProgressBar
	self.bar_2 = viewNode:getChildAutoType('bar_2')--GProgressBar
	self.bar_3 = viewNode:getChildAutoType('bar_3')--GProgressBar
	self.bar_4 = viewNode:getChildAutoType('bar_4')--GProgressBar
	self.bar_5 = viewNode:getChildAutoType('bar_5')--GProgressBar
	self.btn_enter = viewNode:getChildAutoType('btn_enter')--GButton
	self.btn_help = viewNode:getChildAutoType('btn_help')--GButton
	self.btn_rank = viewNode:getChildAutoType('btn_rank')--com_btn_nil
		self.btn_rank.img_red = viewNode:getChildAutoType('btn_rank/img_red')--GImage
	self.btn_reward = viewNode:getChildAutoType('btn_reward')--com_btn_nil
		self.btn_reward.img_red = viewNode:getChildAutoType('btn_reward/img_red')--GImage
	self.btn_skill = viewNode:getChildAutoType('btn_skill')--GButton
	self.btn_zhuli = viewNode:getChildAutoType('btn_zhuli')--com_btn_nil
		self.btn_zhuli.img_red = viewNode:getChildAutoType('btn_zhuli/img_red')--GImage
	self.com_reward1 = viewNode:getChildAutoType('com_reward1')--Component2
		self.com_reward1.btn_kelingqu = viewNode:getChildAutoType('com_reward1/btn_kelingqu')--GButton
		self.com_reward1.btn_no = viewNode:getChildAutoType('com_reward1/btn_no')--GButton
		self.com_reward1.img_red = viewNode:getChildAutoType('com_reward1/img_red')--GImage
		self.com_reward1.itemCell = viewNode:getChildAutoType('com_reward1/itemCell')--GButton
		self.com_reward1.txt_amount = viewNode:getChildAutoType('com_reward1/txt_amount')--GRichTextField
		self.com_reward1.txt_jifen = viewNode:getChildAutoType('com_reward1/txt_jifen')--GRichTextField
	self.com_reward2 = viewNode:getChildAutoType('com_reward2')--Component2
		self.com_reward2.btn_kelingqu = viewNode:getChildAutoType('com_reward2/btn_kelingqu')--GButton
		self.com_reward2.btn_no = viewNode:getChildAutoType('com_reward2/btn_no')--GButton
		self.com_reward2.img_red = viewNode:getChildAutoType('com_reward2/img_red')--GImage
		self.com_reward2.itemCell = viewNode:getChildAutoType('com_reward2/itemCell')--GButton
		self.com_reward2.txt_amount = viewNode:getChildAutoType('com_reward2/txt_amount')--GRichTextField
		self.com_reward2.txt_jifen = viewNode:getChildAutoType('com_reward2/txt_jifen')--GRichTextField
	self.com_reward3 = viewNode:getChildAutoType('com_reward3')--Component2
		self.com_reward3.btn_kelingqu = viewNode:getChildAutoType('com_reward3/btn_kelingqu')--GButton
		self.com_reward3.btn_no = viewNode:getChildAutoType('com_reward3/btn_no')--GButton
		self.com_reward3.img_red = viewNode:getChildAutoType('com_reward3/img_red')--GImage
		self.com_reward3.itemCell = viewNode:getChildAutoType('com_reward3/itemCell')--GButton
		self.com_reward3.txt_amount = viewNode:getChildAutoType('com_reward3/txt_amount')--GRichTextField
		self.com_reward3.txt_jifen = viewNode:getChildAutoType('com_reward3/txt_jifen')--GRichTextField
	self.com_reward4 = viewNode:getChildAutoType('com_reward4')--Component2
		self.com_reward4.btn_kelingqu = viewNode:getChildAutoType('com_reward4/btn_kelingqu')--GButton
		self.com_reward4.btn_no = viewNode:getChildAutoType('com_reward4/btn_no')--GButton
		self.com_reward4.img_red = viewNode:getChildAutoType('com_reward4/img_red')--GImage
		self.com_reward4.itemCell = viewNode:getChildAutoType('com_reward4/itemCell')--GButton
		self.com_reward4.txt_amount = viewNode:getChildAutoType('com_reward4/txt_amount')--GRichTextField
		self.com_reward4.txt_jifen = viewNode:getChildAutoType('com_reward4/txt_jifen')--GRichTextField
	self.com_reward5 = viewNode:getChildAutoType('com_reward5')--Component2
		self.com_reward5.btn_kelingqu = viewNode:getChildAutoType('com_reward5/btn_kelingqu')--GButton
		self.com_reward5.btn_no = viewNode:getChildAutoType('com_reward5/btn_no')--GButton
		self.com_reward5.img_red = viewNode:getChildAutoType('com_reward5/img_red')--GImage
		self.com_reward5.itemCell = viewNode:getChildAutoType('com_reward5/itemCell')--GButton
		self.com_reward5.txt_amount = viewNode:getChildAutoType('com_reward5/txt_amount')--GRichTextField
		self.com_reward5.txt_jifen = viewNode:getChildAutoType('com_reward5/txt_jifen')--GRichTextField
	self.lihuiDisplay = viewNode:getChildAutoType('lihuiDisplay')--GButton
	self.list_boss = viewNode:getChildAutoType('list_boss')--GList
	self.txt_bossTime = viewNode:getChildAutoType('txt_bossTime')--GRichTextField
	self.txt_count = viewNode:getChildAutoType('txt_count')--GRichTextField
	self.txt_countdowm = viewNode:getChildAutoType('txt_countdowm')--GTextField
	self.txt_jifen = viewNode:getChildAutoType('txt_jifen')--GRichTextField
	self.txt_shuax = viewNode:getChildAutoType('txt_shuax')--GRichTextField
	self.txt_skilldesc = viewNode:getChildAutoType('txt_skilldesc')--GRichTextField
 --{autoFieldsEnd}:CooperationActivities.CooperationActivitieMainView
    --Do not modify above code-------------
end

--添加红点
function CooperationActivitieMainView:_addRed(...)
    RedManager.register("M_COOPERACHEATING",self.btn_zhuli.img_red, ModuleId.CooperationActivitieCheating.id)
end

function CooperationActivitieMainView:_initListener()
    self.btn_help:removeClickListener()
    self.btn_help:addClickListener(
        function()
            local info = {}
            info["title"] = Desc.help_StrTitle279
            info["desc"] = Desc.help_StrDesc279
            ViewManager.open("GetPublicHelpView", info)
        end
    )

    self.btn_skill:addClickListener(
        function()
            ViewManager.open("CooperationActivitieSkillView", {monsterId = self.skillInfo})
        end
    )

    self.btn_enter:addClickListener(
        --战斗
        function()
            local maininfo = CooperationActivitiesModel:getCooperationInfo(self.activeTag)
            local isallZhanling=true
            local zhanligngmap=maininfo.groupInfo.list or {}
            for key, value in pairs(zhanligngmap) do
                if value.num / 1000 ~= 100 then
                    isallZhanling=false
                end
            end
            local boosJindu = maininfo.groupInfo.list[self.curBossInfo.id]
            if not isallZhanling and boosJindu.num / 1000 == 100 then
                RollTips.show("已占领成功,请先挑战其他关卡")
                return 
            end
            local id = self.curBossInfo.id
            if maininfo and maininfo.challengeTimes and maininfo.challengeTimes > 0 then
                local groupId = CooperationActivitiesModel:getCurGroupId(self.activeTag)
                local function battleHandler(eventName)
                    if eventName == "begin" then
                        CooperationActivitiesModel:WorkTogetherChallenge(groupId, id)
                    elseif eventName == "end" then
                        ViewManager.open("CooperationEndLayerView")
                    end
                end
                local fightId = self.curBossInfo.fightId
                Dispatcher.dispatchEvent(
                    EventType.battle_requestFunc,
                    battleHandler,
                    {fightID = fightId, configType = GameDef.BattleArrayType.WorkTogether}
                )
            else
                RollTips.show("挑战次数不足")
            end
        end
    )

    self.btn_reward:addClickListener(
        function()
            ViewManager.open("CooperationRewardView")
        end
    )

    self.btn_rank:addClickListener(
        function()
            ViewManager.open("CooperationActivitieRankView", {type = GameDef.RankType.WorkTogetherScore})
        end
    )

    self.btn_zhuli:addClickListener(
        function()
            ViewManager.open("CooperationActivitieCheatingView")
        end
    )

    --奖励控制器
    self.awardCloseBtn:addClickListener(
        function(...)
            if self.awardShowFlag then
                self.awardShowCtrl:setSelectedIndex(0)
                self.awardShowFlag = false
            else
                self.awardShowFlag = true
                self.awardShowCtrl:setSelectedIndex(1)
            end
        end
    )
end

function CooperationActivitieMainView:_initUI()
    self:_initVM()
    self.awardView = self.view:getChildAutoType("awardView")
    self.awardViewBg = self.awardView:getChildAutoType("n0")
    self.awardViewList = self.awardView:getChildAutoType("list")
    self.awardCloseBtn = self.awardView:getChildAutoType("viewCloseBtn")
    self.awardShowCtrl = self.view:getController("awardShowCtrl")
    self.lihuiDisplayObj = BindManager.bindLihuiDisplay(self.lihuiDisplay)
    local dayStr = DateUtil.getOppostieDays()
    FileCacheManager.setBoolForKey("CooperationActivitieMainView_isShow" .. dayStr, true)
    CooperationActivitiesModel:setCooperationRed(self.activeTag)
    self:_initListener()
    self:showBossList()
    self:showCount()
    self:showReward()
    self:showCountTime()
    self:showBossRefreshCountTime()
    self.awardViewList:setItemRenderer(
        function(index, obj)
            local award = self.awardViewList._dataTemplate[index + 1]
            local itemcell = BindManager.bindItemCell(obj)
            itemcell:setData(award.code, award.amount, award.type)
        end
    )
end


function CooperationActivitieMainView:showBossList()
    local maininfo = CooperationActivitiesModel:getCooperationInfo(self.activeTag)
    local groupId = CooperationActivitiesModel:getCurGroupId(self.activeTag)
    local boosList = DynamicConfigData.t_CooperationBoss[groupId]
    self.list_boss:setItemRenderer(
        function(index, obj)
            local bossItem = boosList[index + 1]
            local bossImg = obj:getChildAutoType("img_boss")
            local img_jingyin = obj:getChildAutoType("img_jingyin")
            local bossUrl = PathConfiger.getHeroOfMonsterIcon(bossItem.show)
            bossImg:setURL(bossUrl)
            local touchId=1
            if self.curBossInfo then
                touchId=self.curBossInfo.id
            end
            if index + 1 == touchId then
                self.curBossInfo = bossItem
                self:showBossModel(bossItem)
                obj:setSelected(true)
            else
                obj:setSelected(false)
            end
            if index ==0 then
                img_jingyin:setVisible(true)
            else
                img_jingyin:setVisible(false)
            end
            obj:removeClickListener(100)
            obj:addClickListener(
                function()
                    self.curBossInfo = bossItem
                    self:showBossModel(bossItem)
                end,
                100
            )
            local boosJindu = maininfo.groupInfo.list[index + 1]
            local txt_zhanyoudu = obj:getChildAutoType("txt_zhanyoudu")
            txt_zhanyoudu:setText(string.format("占有度:%s",ColorUtil.formatColorString1(boosJindu.num / 1000, "#6AFF60")  ) .. ColorUtil.formatColorString1("%", "#6AFF60") )
            local c1 = obj:getController("c1")
            if boosJindu.num / 1000 == 100 then
                c1:setSelectedIndex(1)
            else
                c1:setSelectedIndex(0)
            end
        end
    )
    self.list_boss:setNumItems(#boosList)
end

function CooperationActivitieMainView:showReward()
    local maininfo = CooperationActivitiesModel:getCooperationInfo(self.activeTag)
    self.txt_jifen:setText(maininfo.score)
    local groupId = CooperationActivitiesModel:getActModuleId(GameDef.ActivityType.WorkTogetherAct)
    local configInfo = DynamicConfigData.t_CooperationPersonalAward[groupId]
    local lingquMap = maininfo.scoreRewardMark or 0
    for i = 1, 5, 1 do
        local rewardItem = configInfo[i].award
        local limitValue = configInfo[i].min
        local rewardObj = self.view:getChildAutoType("com_reward" .. i)
        local itemcell = rewardObj:getChildAutoType("itemCell")
        local bindItemCell = BindManager.bindItemCell(itemcell)
        bindItemCell:setAmountVisible(false)
        bindItemCell:setClickable(false)
        bindItemCell:setData(rewardItem[1].code, rewardItem[1].amount, rewardItem[1].type)
        local txt_amount = rewardObj:getChildAutoType("txt_amount")
        txt_amount:setText("X" .. rewardItem[1].amount)
        local txt_jifen = rewardObj:getChildAutoType("txt_jifen")
        txt_jifen:setText(limitValue)
        local c1 = rewardObj:getController("c1")
        local index = OperatingActivitiesModel:GetBitByIndex(lingquMap, configInfo[i].id)
        if maininfo.score < limitValue then
            c1:setSelectedIndex(0)
        elseif maininfo.score >= limitValue and index==0 then
            c1:setSelectedIndex(1)
        elseif maininfo.score >= limitValue and index~=0 then
            c1:setSelectedIndex(2)
        end
        local comBar = self.view:getChildAutoType("bar_" .. i)
        if maininfo.score >= limitValue then
            comBar:setMax(100)
            comBar:setValue(100)
        else
            local old=0
            if configInfo[i-1] then
                old=configInfo[i-1].min
            end
            comBar:setValue(maininfo.score-old)
            comBar:setMax(limitValue-old)
        end
        local btn_kelingqu = rewardObj:getChildAutoType("btn_kelingqu")
        btn_kelingqu:removeClickListener(100)
        btn_kelingqu:addClickListener(
            function()
                CooperationActivitiesModel:WorkTogetherGetScoreReward(self.activeTag, configInfo[i].id)
            end
        ,100)
        local btn_no = rewardObj:getChildAutoType("btn_no")
        btn_no:removeClickListener(100)
        btn_no:addClickListener(
            function()
                if self.awardShowFlag then
                    self.awardShowFlag = false
                    self.awardShowCtrl:setSelectedIndex(0)
                else
                    self.awardShowFlag = true
                    self.awardShowCtrl:setSelectedIndex(1)
                    local posx = rewardObj:getX()
                    local posy = rewardObj:getY()
                    self.awardViewList:setData(rewardItem)
                    self.awardViewList:setPivot(0.5, 0.5, true)
                    self.awardViewBg:setPivot(0.5, 0.5, true)
                    self.awardViewList:setX(posx + 10)
                    self.awardViewBg:setX(posx + 10)
                    self.awardViewList:setY(posy - 30)
                    self.awardViewBg:setY(posy - 25)
                    self.awardViewList:resizeToFit(#rewardItem)
                end
            end,
            100
        )
    end
end

function CooperationActivitieMainView:showCount()
    local maininfo = CooperationActivitiesModel:getCooperationInfo(self.activeTag)
    self.txt_count:setText(maininfo.challengeTimes)
end

function CooperationActivitieMainView:showBossModel(bossItem)
    local bossId = bossItem.show
 
    self.lihuiDisplayObj:setData(bossId)
    self.txt_skilldesc:setText("关卡考验:"..bossItem.buffDec)
    self.skillInfo=bossId
end

function CooperationActivitieMainView:showBossRefreshCountTime()
    local maininfo = CooperationActivitiesModel:getCooperationInfo(self.activeTag)
    local refreshTime = maininfo.groupInfo.refreshTime or 0
    if not refreshTime or refreshTime == 0 then
        self.txt_shuax:setVisible(false)
        self.txt_bossTime:setVisible(false)
    else
        self.txt_shuax:setVisible(true)
        self.txt_bossTime:setVisible(true)
    end
    local lastTime = (refreshTime - ServerTimeModel:getServerTimeMS()) /1000
    if lastTime > 0 then
        self.txt_bossTime:setText(TimeLib.GetTimeFormatDay1(lastTime))
        local function onCountDown(time)
           -- printTable(159,"aaaaaaaaaaa",time,TimeLib.formatTime(time,true,false))
            self.txt_bossTime:setText(TimeLib.GetTimeFormatDay1(time))
        end
        local function onEnd(...)
            self.txt_bossTime:setText("已刷新")
        end
        if self.calltimer1 then
            TimeLib.clearCountDown(self.calltimer1)
        end
        self.calltimer1 = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
    else
        self.txt_bossTime:setText("已刷新")
    end
end

function CooperationActivitieMainView:showCountTime()
    local actData = ModelManager.ActivityModel:getActityByType(self.activeTag)
    if not actData then
        return
    end
    local actId = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then
        return
    end
    if status == 2 and addtime == -1 then
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = addtime / 1000
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if lastTime > 0 then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
                local function onCountDown(time)
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
                local function onEnd(...)
                    self.txt_countdowm:setText(Desc.activity_txt13)
                end
                if self.calltimer then
                    TimeLib.clearCountDown(self.calltimer)
                end
                self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
            else
                self.txt_countdowm:setText(Desc.activity_txt13)
            end
        end
    end
end

function CooperationActivitieMainView:CooperationActivitie_refresh() --保存后刷新
    self:showBossList()
    self:showCount()
    self:showReward()
end

function CooperationActivitieMainView:CooperationActivitie_gerenReward() --领取奖励后刷新
    self:showReward()
end

function CooperationActivitieMainView:CooperationActivitie_timerefresh() --登录刷新
    self:showBossList()
    self:showCount()
    self:showReward()
    self:showCountTime()
    self:showBossRefreshCountTime()
end



function CooperationActivitieMainView:_exit()
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
    if self.calltimer1 then
        TimeLib.clearCountDown(self.calltimer1)
    end
end

return CooperationActivitieMainView
