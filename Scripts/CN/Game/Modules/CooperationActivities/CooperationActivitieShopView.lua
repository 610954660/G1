--Date :2021-01-18
--Author : generated by FairyGUI
--Desc :

local CooperationActivitieShopView, Super = class("CooperationActivitieShopView", Window)

function CooperationActivitieShopView:ctor()
    --LuaLog("CooperationActivitieShopView ctor")
    self._packName = "CooperationActivities"
    self._compName = "CooperationActivitieShopView"
    --self._rootDepth = LayerDepth.Window
    self.activeTag = GameDef.ActivityType.WorkTogetherExchange
    self.listInfo = {}
    self._itemCode = 0
    self.lihuiDisplayObj=false
end

function CooperationActivitieShopView:_initEvent()
end

function CooperationActivitieShopView:_initVM()
    local viewNode = self.view
    ---Do not modify following code--------
    --{autoFields}:CooperationActivities.CooperationActivitieShopView
	self.banner = viewNode:getChildAutoType('banner')--GLoader
	self.costItem = viewNode:getChildAutoType('costItem')--GComponent
	self.list_goods = viewNode:getChildAutoType('list_goods')--GList
	self.txt_countTitle = viewNode:getChildAutoType('txt_countTitle')--GTextField
	self.txt_countdowm = viewNode:getChildAutoType('txt_countdowm')--GTextField
	self.txt_integral = viewNode:getChildAutoType('txt_integral')--GRichTextField
 --{autoFieldsEnd}:CooperationActivities.CooperationActivitieShopView
    --Do not modify above code-------------
end

function CooperationActivitieShopView:_initListener()
end

function CooperationActivitieShopView:_initUI()
    self:_initVM()
    self:_initListener()
    self:showCountTime()
    self.banner:setURL("UI/TwistEgg/img_shop_banner.png")
    self.listInfo = CooperationActivitiesModel:getShopGoodsInfo(self.activeTag)
    if not next(self.listInfo) then
        return
    end
    self._itemCode = self.listInfo[1].price[1].code
    self:updateNum()
    self.list_goods:setItemRenderer(
        function(index, obj)
            local goumaiMap =CooperationActivitiesModel:getShopGoodsLingquList(self.activeTag)
            local itemInfo = self.listInfo[index + 1]
            local id = itemInfo.id
            local itemCell = obj:getChildAutoType("itemCell")
            local bindItemCell = BindManager.bindItemCell(itemCell)
            bindItemCell:setData(itemInfo.reward[1].code, itemInfo.reward[1].amount, itemInfo.reward[1].type, true)
            local soldCtrl = obj:getController("soldCtrl")
            local numList=goumaiMap[id] or {}
            local yigoumai = numList.num or 0
            local limtNum = itemInfo.limit
            if yigoumai >= limtNum then --已售罄
                soldCtrl:setSelectedIndex(1)
            else
                soldCtrl:setSelectedIndex(0)
            end
            local txt_name = obj:getChildAutoType("txt_name")
            txt_name:setText(string.format("剩余:%s", ColorUtil.formatColorString1(limtNum - yigoumai, "#08A513")))
            local costItem = obj:getChildAutoType("costItem")
            local costItmeObj = BindManager.bindCostItem(costItem)
            costItmeObj:setData(itemInfo.price[1].type, itemInfo.price[1].code, itemInfo.price[1].amount,true)
            local btn_touch = obj:getChildAutoType("btn_touch")
            btn_touch:removeClickListener(100)
            btn_touch:addClickListener(
                function()
                    if yigoumai >= limtNum then --已售罄
                        RollTips.show("已售罄")
                    else
                        local showData = {}
                        showData = itemInfo
                        showData["index"] = index + 1
                        showData["getRes"]  =itemInfo.reward[1]
                        showData["costRes"]  =itemInfo.price[1]  
                        ViewManager.open("CooperationActivitieshopBuyView", {showData = showData, buyTime = limtNum - yigoumai})
                    end
                end,
                100
            )
        end
    )
    self.list_goods:setNumItems(#self.listInfo)
end

function CooperationActivitieShopView:showCountTime()
    local actData = ModelManager.ActivityModel:getActityByType(self.activeTag)
    if not actData then
        return
    end
    local actId = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then
        return
    end
    if status == 2 and addtime == -1 then
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = addtime / 1000
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if lastTime > 0 then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
                local function onCountDown(time)
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
                local function onEnd(...)
                    self.txt_countdowm:setText(Desc.activity_txt13)
                end
                if self.calltimer then
                    TimeLib.clearCountDown(self.calltimer)
                end
                self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
            else
                self.txt_countdowm:setText(Desc.activity_txt13)
            end
        end
    end
end

function CooperationActivitieShopView:updateNum()
    local costItemCell = BindManager.bindCostItem(self.costItem)
    local hasItem = ModelManager.PackModel:getItemsFromAllPackByCode(self.listInfo[1].price[1].code)
    costItemCell:setData(self.listInfo[1].price[1].type, self.listInfo[1].price[1].code, hasItem, true)
end

function CooperationActivitieShopView:money_change(_, data)
    self:updateNum()
end

function CooperationActivitieShopView:pack_herocomp_change(_, data)
    if data[1].itemCode == self._itemCode then
        self:updateNum()
    end
end

function CooperationActivitieShopView:pack_item_change(_, data)
    if data[1].itemCode == self._itemCode then
        self:updateNum()
    end
end

function CooperationActivitieShopView:pack_equip_change(_, data)
    if data[1].itemCode == self._itemCode then
        self:updateNum()
    end
end

function CooperationActivitieShopView:pack_special_change(_, data)
    if data[1].itemCode == self._itemCode then
        self:updateNum()
    end
end

function CooperationActivitieShopView:CooperationActivitie_ShopRefresh(_, data)
    self.listInfo = CooperationActivitiesModel:getShopGoodsInfo(self.activeTag)
    if not next(self.listInfo) then
        return
    end
    self.list_goods:setNumItems(#self.listInfo)
end




function CooperationActivitieShopView:_exit(...)
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end
return CooperationActivitieShopView
