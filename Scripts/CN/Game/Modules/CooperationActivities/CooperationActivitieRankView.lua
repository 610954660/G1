--Name : CooperationActivitieRankView.lua
--Author : generated by FairyGUI
--Date : 2020-5-26
--Desc : 排行榜
local RankView = require "Game.Modules.Rank.RankView"
local CooperationActivitieRankView, Super = class("CooperationActivitieRankView", RankView)
function CooperationActivitieRankView:ctor()
    self._packName = "CooperationActivities"
    self._compName = "CooperationActivitieRankView"
    --self._rootDepth = LayerDepth.Window
end

function CooperationActivitieRankView:_initUI(...)
    Super._initUI(self, ...)
    self.list_rank = self.view:getChildAutoType("list_rank")
    self.c1 = self.view:getController("c1")
end

function CooperationActivitieRankView:updateRankInfo(rankType)
    --printTable(152,"PAHANGB",self._rankData)
    self.list_rank:setVirtual()
    self.list_rank:setItemRenderer(
        function(index, obj)
            local serverInfo = self._rankData[index + 1]
            local c1 = obj:getController("c1")
            if index <= 2 then
                c1:setSelectedIndex(index)
            else
                c1:setSelectedIndex(3)
            end
            local txt_order = obj:getChildAutoType("$txt_order")
            -- txt_order:setText(GMethodUtil.getSizeString(index+1,44)..GMethodUtil.getSizeString("强",44))
            txt_order:setText(index + 1)
            local txt_name = obj:getChildAutoType("txt_name")
            if serverInfo.name == nil then
                txt_name:setText("")
            else
                txt_name:setText(serverInfo.name .. "")
            end
            local txt_jifen = obj:getChildAutoType("txt_jifen")
            if serverInfo.value == nil then
                txt_jifen:setText("")
            else
                txt_jifen:setText(serverInfo.value .. "")
            end
            local playerHead = obj:getChildAutoType("headItem")
            local heroItem = BindManager.bindPlayerCell(playerHead)
            heroItem:setHead(serverInfo.head, serverInfo.level, nil, nil, serverInfo.headBorder)
            playerHead:removeClickListener(100)
            playerHead:addClickListener(
                function(...)
                    ViewManager.open("ViewPlayerView", {playerId = serverInfo.id, serverId = serverInfo.serverId})
                end,
                100
            )
        end
    )
    local count = 0
    if next(self._rankData) ~= nil then
        count = #self._rankData
    end
    if count == 0 then
        self.c1:setSelectedIndex(1)
    else
        self.c1:setSelectedIndex(0)
    end
    self.list_rank:setNumItems(count)
end

function CooperationActivitieRankView:updateMyRankItem(obj, rank, info, isMine)
    local serverInfo = rank
    local myRankItem = self.myRankItem
    local c1 = myRankItem:getController("c1")
    local c2 = myRankItem:getController("c2")
    local c3 = myRankItem:getController("c3")
    c2:setSelectedIndex(1)
    if rank.rank == 0 then
        c1:setSelectedIndex(3)
        c3:setSelectedIndex(1)
    elseif rank.rank > 0 and rank.rank <= 3 then
        c1:setSelectedIndex(rank.rank - 1)
        c3:setSelectedIndex(0)
    else
        c1:setSelectedIndex(3)
        c3:setSelectedIndex(0)
    end
    local txt_order = myRankItem:getChildAutoType("$txt_order")
    txt_order:setText(rank.rank)
    local txt_name = myRankItem:getChildAutoType("txt_name")
    if serverInfo.name == nil then
        txt_name:setText("")
    else
        txt_name:setText(ColorUtil.formatColorString1(serverInfo.name, "#FFFFFF") .. "")
    end
    local txt_jifen = myRankItem:getChildAutoType("myduanweidesc")
    if serverInfo.value == nil then
        txt_jifen:setText("")
    else
        txt_jifen:setText(serverInfo.value .. "")
    end
    local playerHead = myRankItem:getChildAutoType("headItem")
    local heroItem = BindManager.bindPlayerCell(playerHead)
    heroItem:setHead(serverInfo.head, serverInfo.level, nil, nil, serverInfo.headBorder)
    playerHead:removeClickListener(100)
    playerHead:addClickListener(
        function(...)
            ViewManager.open("ViewPlayerView", {playerId = serverInfo.id, serverId = serverInfo.serverId})
        end,
        100
    )
end

--这个方法给特殊排行榜继承后加需要特殊处理的内容
function CooperationActivitieRankView:updateItemSpec(obj, rank, info, isMine)
end

function CooperationActivitieRankView:updateItemBaseInfo(obj, rank, info, isMine)
end

function CooperationActivitieRankView:updateItemPlayerHead(obj, rank, info, isMine)
end

function CooperationActivitieRankView:updateItemHeroHead(obj, rank, info, isMine)
end

function CooperationActivitieRankView:updateItemAttr(obj, rank, info, isMine)
end

function CooperationActivitieRankView:_initEvent()
end

return CooperationActivitieRankView
