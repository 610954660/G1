--Name : ArenaRewardView.lua
--Author : generated by FairyGUI
--Date : 2020-3-6
--Desc :

local ArenaRewardView,Super = class("ArenaRewardView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"


function ArenaRewardView:ctor()
	--LuaLog("ArenaRewardView ctor")
	self._packName = "Arena"
	self._compName = "ArenaRewardView"

	self.rewardList=false
	self.pageList=false
	self._isFullScreen = true
	self._rootDepth = LayerDepth.PopWindow
	
	--self._reciveReaward=false
	self.scroeRewardPre=false

end

function ArenaRewardView:_initEvent( )

end

function ArenaRewardView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Arena.ArenaRewardView
		vmRoot.closeButton = viewNode:getChildAutoType("$closeButton")--Label
	--{vmFieldsEnd}:Arena.ArenaRewardView
	--Do not modify above code-------------
end



function ArenaRewardView:_initUI( )
	self:_initVM()
	self.rewardList =  self.view:getChildAutoType("rewardList")
	self.pageList   =  self.view:getChildAutoType("pageList")
	self.pageList:setSelectedIndex(0)
	self.pageList:regUnscrollItemClick(function (index,obj)
			self:updateView(index)
	end)
	--local imgRed3 = self.pageList:getChildAt(0):getChildAutoType("img_red")
	--RedManager.register( "V_ArenaScoreReward" , imgRed3 , self.view , ModuleId.Arena.id )
	self:updateView(0)
end

function ArenaRewardView:updateView(rewardType)
     --if rewardType==0 then
		--self:showScoreReward()
	 --else
		--self:showArenaRankReward(rewardType)
	 --end
	self:showArenaRankReward(rewardType)
end

function ArenaRewardView:Arena_updateScoreReward() 
	--self:updateView(0)
end



function ArenaRewardView:showArenaRankReward(rewardType)
	local arenaRankReward = DynamicConfigData.t_arenaRankReward
	local rewardPre={}
	for k, v in pairs(arenaRankReward) do
		rewardPre[#rewardPre+1]=v
	end
	self.rewardList:setVirtual()
	self.rewardList:setItemRenderer(function(index1,rewardItem)	
			local rewardInfo={}
			local score=rewardItem:getChildAutoType("score")
			local rank=rewardItem:getChildAutoType("rank")
			local rankIcon=rewardItem:getChildAutoType("loader_icon")
			local itemList=rewardItem:getChildAutoType("itemCellList")
			local rankReward=rewardPre[index1 + 1]
			local img_iconBg=rewardItem:getChildAutoType("img_iconBg")
			rankReward.clientShow= string.gsub(rankReward.clientShow,"\"","")
			score:setVisible(false)
			if rankReward.minRank<4 then
				rankIcon:setVisible(true)
				rank:setVisible(false)
				rankIcon:setURL(PathConfiger.getRankIcon(rankReward.minRank))
			else
				rankIcon:setVisible(false)
				rank:setVisible(true)
				rank:setText(rankReward.clientShow)
			end
			if rewardType==0 then
				rewardInfo=rankReward.dailyRewardPre
			else
				rewardInfo=rankReward.seasonRewardPre
			end
			local rewardCtr=rewardItem:getController("c1")
			rewardCtr:setSelectedPage("none")
			itemList:setItemRenderer(function (index,obj)
					local itemcell = BindManager.bindItemCell(obj)
					local itemData = ItemsUtil.createItemData({data = rewardInfo[index + 1]})
					printTable(4,{data = rewardInfo[index + 1]})
					itemcell:setItemData(itemData)
				end)
			
			itemList:setData(rewardInfo)
		end
	)
	self.rewardList:setData(arenaRankReward)
end


function ArenaRewardView:showScoreReward()
	
	local ArenaInfo=ModelManager.ArenaModel:getRankInfo()
	local myInfo=ArenaInfo.myInfo
	local haveReward,scroeRewardPre=ArenaModel:getAllScoreReward()
	self.scroeRewardPre=scroeRewardPre
	
	local reciveReaward=ArenaModel:getReciveReaward()
	self.rewardList:setVirtual()
	self.rewardList:setItemRenderer(function(index,rewardItem)
			local rewardInfo={}
			local score=rewardItem:getChildAutoType("score")
			local rank=rewardItem:getChildAutoType("rank")
			local rankIcon=rewardItem:getChildAutoType("loader_icon")
			local itemList=rewardItem:getChildAutoType("itemCellList")
			local btn_get=rewardItem:getChildAutoType("btn_get")
			local rankReward=self.scroeRewardPre[index + 1]
			rewardInfo=rankReward.reward
			score:setText("积分达到: "..rankReward.score)
			score:setVisible(true)
			rank:setVisible(false)
			rankIcon:setVisible(false)
			local rewardCtr=rewardItem:getController("c1")
			if rankReward.receiveRank==0 then
				rewardCtr:setSelectedPage("hadReceived")
			end
			if rankReward.receiveRank==1 then
				rewardCtr:setSelectedPage("lock")
			end
			if rankReward.receiveRank==2 then
				rewardCtr:setSelectedPage("canReceived")
			end
						
			btn_get:addEventListener(FUIEventType.Click,function()
					ArenaModel:getScoreReward(rankReward.id,function ()
							table.insert(reciveReaward,{id=rankReward.id})
							self:Arena_updateScoreReward()			
					end)
			end,1)	
			itemList:setItemRenderer(function (index,obj)
					local itemcell = BindManager.bindItemCell(obj)
					local itemData = ItemsUtil.createItemData({data = rewardInfo[index + 1]})
					itemcell:setItemData(itemData)
				end)
			itemList:setData(rewardInfo)
		end
	)
	self.rewardList:setData(self.scroeRewardPre)

end




return ArenaRewardView