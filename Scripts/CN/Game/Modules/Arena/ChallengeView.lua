--Name : ChallengeView.lua
--Author : generated by FairyGUI
--Date : 2020-3-5
--Desc : 

local ChallengeView,Super = class("ArenaView", Window)
--local PackBaseModel = require "Game.Modules.Pack.PackBaseModel"，
local PackModel = require "Game.Modules.Pack.PackModel"
function ChallengeView:ctor()
	--LuaLog("ArenaView ctor")
	self._packName = "Arena"
	self._compName = "ChallengeView"
	self._commonPackege="ui://common"
	
	self.challengeList=false
	self.refreshBtn=false
	self.ArenaInfo=false
	self.leftTicket=false
	self.tickCount=0
	self._isFullScreen = true
	self.addTicket=false
	self._rootDepth = LayerDepth.PopWindow
	self.skipArray=false
	self.skipToggle=false

	
	
	--self._rootDepth = LayerDepth.Window
	
end

function ChallengeView:_initEvent( )
	
end

function ChallengeView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Arena.ChallengeView
		vmRoot.closeButton = viewNode:getChildAutoType("$closeButton")--Label
	--{vmFieldsEnd}:Arena.ChallengeView
	--Do not modify above code-------------
	local arenaInfo=ArenaModel:getRankInfo()
	local desc=false
	local fightNum=arenaInfo.myInfo.fightNum
	local week=ServerTimeModel:getOpenWeek()
	local canskipFightNum=30
	if week>1 then
		canskipFightNum=10
	end
	if fightNum>=canskipFightNum then
		desc=false
	else
		desc = Desc.moduleOpen_tips13:format(canskipFightNum).."开启跳过战斗"
	end

	
	
	self.skipToggle=self.view:getChildAutoType("skipToggle")
	self.skipToggle:addClickListener(function ()
			arenaInfo=ArenaModel:getRankInfo()
			if arenaInfo.myInfo.fightNum<canskipFightNum then
				RollTips.show(desc)
				self.skipToggle:setSelected(false)
				return 
			end
			self.skipArray = self.skipToggle:isSelected()
			PataModel:saveSkipArray(GameDef.BattleArrayType.ArenaAck, self.skipArray)
	end)
	if PataModel:checkSkipArray(GameDef.BattleArrayType.ArenaAck) and not desc then
		self.skipToggle:setSelected(true)
		self.skipArray =true
	end
	--local isOpen,tips=ModuleUtil.skipOpen(GameDef.BattleArrayType.ArenaAck)

	
	--self.skipToggle:setVisible(tr)

end

function ChallengeView:_initUI( )
	self:_initVM()
	--fgui.EventContext:stopPropagation()
	self.challengeList=self.view:getChildAutoType("challengeList")
	self.refreshBtn=self.view:getChildAutoType("refreshBtn")
	self.leftTicket=self.view:getChildAutoType("leftTicket")
	self.addTicket=self.view:getChildAutoType("addTicket")
	self.refreshBtn:addClickListener(function ()
		ModelManager.ArenaModel:requestChallengeInfo(function()
			if not tolua.isnull(self.view) then
				self:setData()
			end
		end);
	end)
	self.ArenaInfo=ModelManager.ArenaModel:getRankInfo()
	self:setData()
	
	self.addTicket:addClickListener(function ()
			ModelManager.ArenaModel:getTicketLimitInfo(function()
					if ArenaModel:getCanByCount()==0 then
						RollTips.show(Desc.Arena_DetailsStr2)
					else
						ViewManager.open("ArenaShopView")
					end
			end)
	
	end)
	self.closeButton:addClickListener(function ()
		 ViewManager.close("ChallengeView")
	end)
	ArenaModel.challeHadOpen=true
	--ViewManager.open("ShopView")
end


function ChallengeView:setData()
	local challengeInfo=ModelManager.ArenaModel:getChallengeInfo().challengeList
	self:setChallengeList(challengeInfo)
	self.tickinfo=ModelManager.PackModel:getNormalBag():getItemsByCode(DynamicConfigData.t_arena[1].ticketCode)
	if next(self.tickinfo)==nil then
		self.leftTicket:setText(0)
		self.tickCount=0
	else
		self.leftTicket:setText(self.tickinfo[1].__data.amount)
		self.tickCount=self.tickinfo[1].__data.amount
	end
end

--查看门票
function ChallengeView:checkTicket()
	 if ArenaModel:getFreeTime()==0 and self.tickCount==0 then
		 if ArenaModel:getCanByCount()>0 then
			ViewManager.open("ArenaShopView")
		 else
			RollTips.show(Desc.Arena_DetailsStr1)
		 end
		 return false
	 else
		  return true
	 end 
end

--设置挑战列表
function ChallengeView:setChallengeList(challengeInfo)
	if tolua.isnull(self.challengeList) then return end
	self.challengeList:setItemRenderer(function(index,item)
			local heroInfo=challengeInfo[index+1]
			item:removeClickListener()--池子里面原来的事件注销掉
			item:addClickListener(function(context)
					Dispatcher.dispatchEvent(EventType.Friend_OpenInfoView,{playerId = heroInfo.playerId})
					--ViewManager.open("ViewPlayerView",{playerId = heroInfo.playerId})		
			end)
			local cosumBtn=item:getChildAutoType("cosumBtn")
			cosumBtn:removeEventListener(FUIEventType.Click,101)
			cosumBtn:addEventListener(FUIEventType.Click,function(context)
				 context:stopPropagation()--阻止事件冒泡
				 if self:checkTicket() then
					self:beginChallenge(heroInfo.playerId)
				 end
			end,101)
			if ArenaModel:getFreeTime()==0 then
				cosumBtn:setText("x1")
			end   
			
			local hero = BindManager.bindPlayerCell(item:getChildAutoType("heroCell"))
			hero:setHead(heroInfo.head, heroInfo.level,nil,nil,heroInfo.headBorder)	
			item:getChildAutoType("score"):setText(heroInfo.score)
			item:getChildAutoType("name"):setText(heroInfo.name)
			item:getChildAutoType("fightCap"):setText("战力："..StringUtil.transValue(heroInfo.fightCap))

		end)
	self.challengeList:setNumItems(#challengeInfo);
end


--开始挑战
function ChallengeView:beginChallenge(playerId)
	
	local callCount=0
	local function f()
		if callCount<2 then
			return 
		end
		local resultInfo= ModelManager.ArenaModel:getChallengeResult()
		if resultInfo then
			ViewManager.open("ReWardView",{page=1,isWin=resultInfo.win,showLose=true})
		end
	end
	local function battleHandler(eventName)
		if eventName == "begin" then
			ModelManager.ArenaModel:challenge(playerId,function ()
					callCount=callCount+1
					f()
			end)
			
		elseif eventName == "end" then
			ModelManager.ArenaModel:requestArenInfo(function()
					Dispatcher.dispatchEvent(EventType.Arena_battleEnd)
					ModelManager.ArenaModel:requestChallengeInfo(function()
							if not tolua.isnull(self.view) then
								self:setData()
							end
					end);
					ArenaModel:requestBattleRecordInfo()
					
			end);
			callCount=callCount+1
		    f()

		end
	end

	local cfg_arena= DynamicConfigData.t_arena[1]
	Dispatcher.dispatchEvent(EventType.battle_requestFunc,battleHandler,{fightID=cfg_arena.fightId,configType=GameDef.BattleArrayType.ArenaAck,playerId=playerId,skipBattle=self.skipArray})
end


--开始挑战
function ChallengeView:Arena_updateTickInfo()
	self:setData()
end






return ChallengeView