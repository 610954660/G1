---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/8/21 14:52
---

local NewServerGiftModel = class("NewServerGiftModel", BaseModel)

function NewServerGiftModel:ctor()
    self.gifts = {}
    self.allGiftIDs = {}
    for k,v in pairs(DynamicConfigData.t_SeverGift) do
        table.insert(self.allGiftIDs,v)
    end
    self:sortData()
    self:checkRed()
end

function NewServerGiftModel:getAllGift()
    return self.allGiftIDs
end

function NewServerGiftModel:setGifts(list)
    self.gifts = list
    self:sortData()
    self:checkRed()
end

function NewServerGiftModel:updateGift(data)
    self.gifts[data.id] = data
    self:sortData()
    self:checkRed()
end

function NewServerGiftModel:getBuyTime(id)
    if self.gifts[id] then
        return self.gifts[id].buyTime
    end

    return 0
end

function NewServerGiftModel:getGiftState(id)
    local buyTime = self:getBuyTime(id)
    local config = DynamicConfigData.t_SeverGift[id]
    local state = 1

    if config.buyTimes - buyTime <= 0 then
        state = 2
    elseif config.price == 0 then
        state = 0
    else
        state = 1
    end

    return state
end

function NewServerGiftModel:setHasOpen()
    self.hasOpen = true
end

function NewServerGiftModel:sortData()
    -- printTable(8848,">>>self.allGiftIDs>>",self.allGiftIDs)
    table.sort(self.allGiftIDs,function(a,b)
        local aBuyTime = self:getBuyTime(a.giftId)
        local bBuyTime = self:getBuyTime(b.giftId)
        if aBuyTime == bBuyTime then
            return a.price < b.price
        end
        return aBuyTime < bBuyTime
    end)
end

function NewServerGiftModel:checkRed()
    printTable(8848,">>>执行力")
    local dayStr = DateUtil.getOppostieDays()
	local isShow = FileCacheManager.getBoolForKey("NewServerGiftView_isShow" .. dayStr,false)
    local freeData = false
	local haveZero = false
	local keyArr = {}
	local giftData = DynamicConfigData.t_SeverGift
	for i=1,#giftData do
		local data = giftData[i]
		if data.price == 0 then
			haveZero = true
			table.insert(keyArr,"V_ACTIVITY_" ..GameDef.ActivityType.NewServerGift .. data.price)
			break
		end
	end
	RedManager.addMap("V_ACTIVITY_" .. GameDef.ActivityType.NewServerGift, keyArr)

    for i =1,#giftData do
		local data = giftData[i]
		if data.price == 0 then
            if self.gifts and self.gifts[data.giftId] and self.gifts[data.giftId].buyTime then
				freeData = self.gifts[data.giftId].buyTime >= data.buyTimes
			end
			RedManager.updateValue("V_ACTIVITY_" .. GameDef.ActivityType.NewServerGift .. data.price ,not freeData)
		else
			RedManager.updateValue("V_ACTIVITY_" .. GameDef.ActivityType.NewServerGift .. data.price ,false)
		end
	end
	RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.NewServerGift, (not isShow) or (not freeData and haveZero))
end

return NewServerGiftModel