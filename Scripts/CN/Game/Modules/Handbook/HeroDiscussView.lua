--Name : HeroDiscussView.lua
--Author : generated by FairyGUI
--Date : 2020-6-2
--Desc : 

local HeroDiscussView,Super = class("HeroDiscussView", Window)

function HeroDiscussView:ctor()
	--LuaLog("HeroDiscussView ctor")
	self._packName = "Handbook"
	self._compName = "HeroDiscussView"
	self._rootDepth = LayerDepth.PopWindow
	
	self.txt_input = false
	self.schedulerID = false
end

function HeroDiscussView:_initEvent( )
	
end

function HeroDiscussView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Handbook.HeroDiscussView
		vmRoot.discussList = viewNode:getChildAutoType("$discussList")--list
		vmRoot.zannum = viewNode:getChildAutoType("$zannum")--text
		vmRoot.btn_zan = viewNode:getChildAutoType("$btn_zan")--Button
		vmRoot.input = viewNode:getChildAutoType("$input")--text
		vmRoot.btn_send = viewNode:getChildAutoType("$btn_send")--Button
		vmRoot.blackbg = viewNode:getChildAutoType("$blackbg")--Label
	--{vmFieldsEnd}:Handbook.HeroDiscussView
	--Do not modify above code-------------
end

function HeroDiscussView:_initUI( )
	self:_initVM()
	
	self.txt_input = BindManager.bindTextInput(self.input)
	self.blackbg:addClickListener(function(  )
		self:closeView()
	end)
	local data = self._args.disData

	local listData = {}

	for k,v in pairs(data.evaluation) do
		table.insert(listData,v)
	end

	local function cmpSuppor(a,b)
		return a.suppor < b.suppor
	end

	table.sort(listData,cmpSuppor)

	local first = listData[#listData]
	listData[#listData] = nil
	local second = listData[#listData]
	listData[#listData] = nil

	self.listData = listData

	local function cmpTime(a,b)
		return a.timeMs > b.timeMs
	end

	table.sort(listData,cmpTime)

	table.insert(listData,1,second)
	table.insert(listData,1,first)

	self.zannum:setText(Desc.handbook_discuss4:format(data.heroSuppor.supportNumber) )


	--id 					0:integer #唯一id
	--content				1:integer #内容
	--playerName			2:string  #玩家名字
	--suppor 				3:integer #评论点赞数
	--timeMs				4:integer #评价时间
	--}
	self.discussList:setItemRenderer(function(index,obj)
		local info = listData[index + 1]
		local title = obj:getChildAutoType("n13")
		local desc = obj:getChildAutoType("desc")
		local name = obj:getChildAutoType("name")
		local zanbt = obj:getChildAutoType("zanbt")
		local zantext = obj:getChildAutoType("zantext")
		local tab = obj:getChildAutoType("tab")
		local c1 = obj:getController("c1")
		if index == 0 then
			--tab:setVisible(true)
			--title:setURL("ui://tcuxzqrsfomh60")
			c1:setSelectedIndex(2)
		elseif index == 2 then
			--tab:setVisible(true)
			--title:setURL("ui://tcuxzqrsfomh61")
			c1:setSelectedIndex(1)
		else
			--tab:setVisible(false)
			c1:setSelectedIndex(0)
		end
		desc:setText(info.content)
		name:setText(info.playerName..":")
		zantext:setText(info.suppor)
		local isZan = false
		for i = 1, #data.supportId do
			if data.supportId[i] == info.id then
				isZan = true
				break
			end
		end
		if isZan then
			zanbt:removeClickListener(33)
			zanbt:setGrayed(false)
			zanbt:setTouchable(false)
		else
			zanbt:setTouchable(true)
			zanbt:setGrayed(true)
			zantext:setGrayed(true)
			zanbt:addClickListener(function(  )
				RPCReq.HeroTotems_AddEvaluationSupport({heroCode = self._args.disData.heroCode,id=info.id}, function(agrs)
					if tolua.isnull(self.view) then return end
					--info = data.data.suppor
					if tolua.isnull(self.view) then return end
					info.suppor = agrs.data.suppor
					table.insert(data.supportId,info.id)
					zantext:setText(agrs.data.suppor)
					zanbt:setGrayed(false)
					zantext:setGrayed(false)
					zanbt:setTouchable(false)
				end)
			end,33)
		end

	end)
	self.discussList:setVirtual()
	self.discussList:setNumItems(#listData)


	self.btn_zan:addClickListener(function(  )
		RPCReq.HeroTotems_Support({heroCode = data.heroCode}, function(data)
			if tolua.isnull(self.view) then return end
					--data.supportId
			if tolua.isnull(self.view) then return end
			self.zannum:setText(data.data.supportNumber)
			self.btn_zan:setGrayed(false)
			self.btn_zan:setTouchable(false)
			Dispatcher.dispatchEvent(EventType.handbook_refresh_supportNumber,data.data)
		end)
	end)
	local day = TimeLib.getDay(data.heroSuppor.supportTime)
	local curDay = TimeLib.getDay(ServerTimeModel:getServerTimeMS())
	print(33,"local day = T ",day,curDay)
	if data.heroSuppor.supportTime >0 and day == curDay then
		self.btn_zan:setGrayed(false)
		self.btn_zan:setTouchable(false)
	else
		self.btn_zan:setGrayed(true)
	end
	--if self._args.disData.supportId

	self.btn_send:addClickListener(function(  )

		local content = self.txt_input:getText()
		if content == "" then
			RollTips.show(Desc.handbook_pinglun)
			return
		end
		if (StringUtil.isOnlyNumberOrCharacter(content)) then
			RollTips.show(Desc.input_tips2);
			return;
		end
		if self.schedulerID then
			RollTips.show(Desc.handbook_HeroDiscussCD)
			return
		end
		self.schedulerID = Scheduler.scheduleOnce(3,function()
				self.schedulerID = false
			end)
		local newText=StringUtil.filterString(content)
		if newText ~= content then  
			RollTips.show(Desc.input_tips3); 
			return 
		end
		content = newText
		RPCReq.HeroTotems_AddEvaluation({heroCode = data.heroCode,content = content}, function(data)
			if tolua.isnull(self.view) then return end
			if #listData < 3 then
				table.insert(listData,data.data)
			else
				table.insert(listData,3,data.data)
			end
			if tolua.isnull(self.view) then return end
			self.discussList:setNumItems(#listData)
		end)
		self.txt_input:setText("")
	end)

	
	self.heroConfig = DynamicConfigData.t_hero[data.heroCode]
	local carditem = BindManager.bindCardCell(self.view:getChildAutoType("cardItem"))
	carditem:setData({heroId = data.heroCode, heroStar=self.heroConfig.heroStar,level=1} , false)
	carditem:setProfessional(self.heroConfig.professional)
end

function HeroDiscussView:_exit()

	Scheduler.unschedule(self.schedulerID)

end


return HeroDiscussView