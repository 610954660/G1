--Name : HandbookTitleInfoView.lua
--Author : generated by FairyGUI
--Date : 2020-5-28
--Desc : 

local HandbookTitleInfoView,Super = class("HandbookTitleInfoView",Window)

function HandbookTitleInfoView:ctor(args)
	--LuaLog("HandbookTitleInfoView ctor")
	self._packName = "Handbook"
	self._compName = "HandbookTitleInfoView"
	self._rootDepth = LayerDepth.PopWindow
		
	self.list_reward = 0
	self.list_weekReward = 0
	self.txt_needPoint = false
	
	self.data = args
	self.id = args.id
	self.rewardShow = args.rewardShow
	self.weekReward = args.weekReward
	self.needPoint = args.needPoint
end

function HandbookTitleInfoView:_initUI( )
	self.list_reward = self.view:getChildAutoType("list_reward")
	self.list_weekReward = self.view:getChildAutoType("list_weekReward")
	local txt_needPoint = self.view:getChildAutoType("txt_needPoint")
	local txt_playerNum = self.view:getChildAutoType("txt_playerNum")
	local txt_name = self.view:getChildAutoType("txt_name")
	local titleIcon = self.view:getChildAutoType("titleIcon")
	
	local playerNum = ModelManager.HandbookModel.heroTabNum[self.id]
	if not playerNum then playerNum = 0 end
	
	titleIcon:setURL(PathConfiger.getHeroTitle(self.id))
	txt_needPoint:setText(ModelManager.HandbookModel.point.."/"..self.needPoint)
	txt_name:setText(self.data.name)
	
	self.list_reward:setVirtual()
	self.list_reward:setItemRenderer(
		function(index, obj) 
			local info = self.rewardShow[index + 1]
			local itemCell = BindManager.bindItemCell(obj)
			itemCell:setData(info.code, info.amount, info.type)
		end
	)
	self.list_reward:setNumItems(#self.rewardShow)
	
	self.list_weekReward:setVirtual()
	self.list_weekReward:setItemRenderer(
		function(index, obj) 
			local info = self.weekReward[index + 1]
			local itemCell = BindManager.bindItemCell(obj)
			itemCell:setData(info.code, info.amount, info.type)
		end
	)
	self.list_weekReward:setNumItems(#self.weekReward)
	self.view:getController("c1"):setSelectedIndex(#self.weekReward == 0 and 1 or 0)
	
	
	local params = {}
	params.titleId = self.id
	params.onSuccess = function (res )
		--printTable(1,res)
		if tolua.isnull(self.view) then return end
		txt_playerNum:setText(res.num)
	end
	RPCReq.HeroTotems_CompleteTitle(params, params.onSuccess)
	
	
end

function HandbookTitleInfoView:_initEvent( )
	
end





return HandbookTitleInfoView