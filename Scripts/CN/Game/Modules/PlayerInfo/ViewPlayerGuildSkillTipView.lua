--Date :2021-01-22
--Author : generated by FairyGUI
--Desc : 

local ViewPlayerGuildSkillTipView,Super = class("ViewPlayerGuildSkillTipView", Window)

function ViewPlayerGuildSkillTipView:ctor(args)
	--LuaLog("ViewPlayerGuildSkillTipView ctor")
	self._packName = "PlayerInfo"
	self._compName = "ViewPlayerGuildSkillTipView"
	self._rootDepth = LayerDepth.Tips
	
	self.data = args
	self.skillData = false
end

function ViewPlayerGuildSkillTipView:_initEvent( )
	
end

function ViewPlayerGuildSkillTipView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:PlayerInfo.ViewPlayerGuildSkillTipView
	self.blackbgAlpha = viewNode:getChildAutoType('blackbgAlpha')--GLabel
	self.iconLoader = viewNode:getChildAutoType('iconLoader')--skillIconLoader
		self.iconLoader.iconLoader = viewNode:getChildAutoType('iconLoader/iconLoader')--GLoader
	self.img_bg = viewNode:getChildAutoType('img_bg')--GImage
	self.list_attr = viewNode:getChildAutoType('list_attr')--GList
	self.list_skill = viewNode:getChildAutoType('list_skill')--GList
	self.txt_level = viewNode:getChildAutoType('txt_level')--GTextField
	self.txt_levelName = viewNode:getChildAutoType('txt_levelName')--GTextField
	self.txt_name = viewNode:getChildAutoType('txt_name')--GTextField
	self.txt_noSkill = viewNode:getChildAutoType('txt_noSkill')--GTextField
	--{autoFieldsEnd}:PlayerInfo.ViewPlayerGuildSkillTipView
	--Do not modify above code-------------
	
end

function ViewPlayerGuildSkillTipView:_initListener( )
	
	self.list_attr:setItemRenderer(function(index, obj)
		local curTxt = obj:getChildAutoType("txt_name")
		local addTxt = obj:getChildAutoType("txt_num")
		local value = self.attrData[index + 1]
		
        curTxt:setText(GMethodUtil:getFightAttrName(value.id))
        local attrValue=GMethodUtil:getFightAttrName(value.id,value.value)
        addTxt:setText(attrValue)
	end)

	self.list_skill:setItemRenderer(function(index, obj)
		local skillCell = obj:getChildAutoType("skillCell")
		local txt_level = obj:getChildAutoType("txt_level")
		local skillCellObj = BindManager.bindSkillCell(skillCell)
		local data = self.skillData[index + 1]
		skillCellObj:setData(data.skillId, true)
		local level = math.mod(data.skillId, 10)
		txt_level:setText("Lv."..level)
	end)

end

function ViewPlayerGuildSkillTipView:_initUI( )
	self:_initVM()
	self:_initListener()
	
	self.iconLoader.iconLoader:setURL(PathConfiger.getGuildTechnologyIcon(self.data.id))
	self.txt_name:setText(Desc["common_creer"..self.data.id])
	self.txt_level:setText(self.data.level)
	
	local skillData = {}
	local ConfigInfo=DynamicConfigData.t_guildSkill[self.data.id][self.data.level]
	local skillMap = ConfigInfo.skill
	for i = 1, #skillMap, 1 do
		local skillId=skillMap[i]
		if skillId ~= 0 then
			table.insert(skillData, {skillId = skillId, level = self.data.level})
		end
	end
	
	self.attrData = ConfigInfo.attribute
	self.list_attr:setData(self.attrData)
	self.skillData = skillData
	self.list_skill:setNumItems(#skillData);
	self.txt_noSkill:setVisible(#skillData == 0)
end




return ViewPlayerGuildSkillTipView