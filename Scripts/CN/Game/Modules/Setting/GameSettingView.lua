--Name : GameSettingView.lua
--Author : generated by FairyGUI
--Date : 2020-6-6
--Desc : 

local GameSettingView,Super = class("GameSettingView", View)

function GameSettingView:ctor()
	--LuaLog("GameSettingView ctor")
	self._packName = "Setting"
	self._compName = "GameSettingView"
	--self._rootDepth = LayerDepth.Window
	
end

function GameSettingView:_initEvent( )
	
end

function GameSettingView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Setting.GameSettingView
		vmRoot.moreList = viewNode:getChildAutoType("$moreList")--list
		vmRoot.displayList = viewNode:getChildAutoType("$displayList")--list
		vmRoot.dslider = viewNode:getChildAutoType("$dslider")--Slider
		vmRoot.openBt = viewNode:getChildAutoType("$openBt")--Button
		vmRoot.minMapBt = viewNode:getChildAutoType("$minMapBt")--Button
		vmRoot.btn_add = viewNode:getChildAutoType("$btn_add")--Button
		vmRoot.btn_back = viewNode:getChildAutoType("$btn_back")--Button
	--{vmFieldsEnd}:Setting.GameSettingView
	--Do not modify above code-------------
end

function GameSettingView:_initUI( )
	self:_initVM()

	
	self.displayList:setItemRenderer(function(index,obj)
		obj:addClickListener(function()
			SettingModel.data.zl = index
			SettingModel:updateZL()
		end,33)
	end)
	self.displayList:setNumItems(2)
	self.displayList:setSelectedIndex(SettingModel.data.zl)

	--self.openList:setItemRenderer(function(index,obj)
		--obj:addClickListener(function()
			--SettingModel.data.sd = index
			--self:updateSD()
		--end,33)
	--end)
	--self.openList:setNumItems(2)
	--self.openList:setSelectedIndex(SettingModel.data.sd)

	self.openBt:addClickListener(function()
			SettingModel.data.sd = SettingModel.data.sd + 1
			if SettingModel.data.sd >1 then
				SettingModel.data.sd = 0
				SettingModel.data.zl = 0
				self.displayList:setSelectedIndex(SettingModel.data.zl)
			end
			self.openBt:getController("state"):setSelectedIndex(SettingModel.data.sd)
			SettingModel:updateSD()
		end)
	self.openBt:getController("state"):setSelectedIndex(SettingModel.data.sd)
	
	self.minMapBt:addClickListener(function()
			SettingModel.data.minMap = SettingModel.data.minMap + 1
			if SettingModel.data.minMap >1 then
				SettingModel.data.minMap = 0
			end
			self.minMapBt:getController("state"):setSelectedIndex(SettingModel.data.minMap or 0)
		end)
	self.minMapBt:getController("state"):setSelectedIndex(SettingModel.data.minMap or 0)

	self.dslider:setValue(SettingModel.data.sp)
	self.dslider:getChildAutoType("num"):setText(SettingModel.data.sp)
	local function onChanged( ... )
		local value = math.floor(self.dslider:getValue()+0.5)
		SettingModel.data.sp = value
		self.dslider:getChildAutoType("num"):setText(SettingModel.data.sp)
		self:updateSP()
	end
	self.dslider:addEventListener(FUIEventType.Changed, onChanged);

	self.btn_add:addClickListener(function()
		SettingModel.data.sp = SettingModel.data.sp + 1
		if SettingModel.data.sp > 100 then
			SettingModel.data.sp = 100
		end
		self.dslider:setValue(SettingModel.data.sp)
		self.dslider:getChildAutoType("num"):setText(SettingModel.data.sp)
			self:updateSP()
	end)
	self.btn_back:addClickListener(function()
		SettingModel.data.sp = SettingModel.data.sp - 1
		if SettingModel.data.sp< 0 then
			SettingModel.data.sp = 0
		end
		self.dslider:setValue(SettingModel.data.sp)
		self.dslider:getChildAutoType("num"):setText(SettingModel.data.sp)
			self:updateSP()
	end)
	
	local buttonconfig = DynamicConfigData.t_Setting
	local btnData={}
	for i = 1, #buttonconfig, 1 do
        local configInfo= buttonconfig[i]    
        if configInfo.moduleId==ModuleId.GameNoticeView.id then
            local tips=ModuleUtil.moduleOpen(configInfo.moduleId,false)
            if tips==true then--前端开启了该功能
                table.insert( btnData, configInfo)
            end
        else
            table.insert( btnData, configInfo)
        end
    end
	self.moreList:setItemRenderer(function(index,obj)
			local data = btnData[index+1]
			obj:setTitle(data.name)
			self:addRed(obj,data.moduleId)
			obj:addClickListener(function()
					ModuleUtil.openModule(data.moduleId)
				end,33)
		end)
	self.moreList:setNumItems(#btnData)
end

function GameSettingView:addRed(obj,moduleId)
	local redKey="V_BASESETTING_"..moduleId
	local img_red= obj:getChild('img_red')
	RedManager.register(redKey,img_red , moduleId)
end


function GameSettingView:updateSP( )
	print(33,"updateSP",self._isFullScreen)
	if SettingModel.data.sp == 0 then
		self.btn_back:setGrayed(true)
		self.btn_back:setTouchable(false)
		self.btn_add:setGrayed(false)
		self.btn_add:setTouchable(true)
	elseif SettingModel.data.sp == 100 then
		self.btn_add:setGrayed(true)
		self.btn_back:setGrayed(false)
		self.btn_add:setTouchable(false)
		self.btn_back:setTouchable(true)
	else
		self.btn_add:setGrayed(false)
		self.btn_back:setGrayed(false)
		self.btn_add:setTouchable(true)
		self.btn_back:setTouchable(true)
	end
	self._parentWin:__fitToScreen()
end
return GameSettingView