--Name : PushMapTargetRewardView.lua
--Author : generated by FairyGUI
--Date : 2020-7-10
--Desc : 

local PushMapTargetRewardView,Super = class("PushMapTargetRewardView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
function PushMapTargetRewardView:ctor()
	--LuaLog("PushMapTargetRewardView ctor")
	self._packName = "PushMap"
	self._compName = "PushMapTargetRewardView"
	self._rootDepth = LayerDepth.PopWindow
	self.rewardArr={}
end

function PushMapTargetRewardView:_initEvent( )
	
end

function PushMapTargetRewardView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:PushMap.PushMapTargetRewardView
		vmRoot.list_reward = viewNode:getChildAutoType("$list_reward")--list
	--{vmFieldsEnd}:PushMap.PushMapTargetRewardView
	--Do not modify above code-------------
end

function PushMapTargetRewardView:_initUI( )
	self:_initVM()
	local passNum=PushMapModel:getTargetRewardGuankaNum()
	self.rewardArr=PushMapModel:getTargetRewardGuankaInfo(true);
	self.list_reward:setVirtual()
	self.list_reward:setItemRenderer(
        function(index, obj)
			
			local ItemInfo = self.rewardArr[index + 1]
			obj:setName(ItemInfo.reward[1].code)
			local txt_remine=obj:getChild("txt_remine")
			local clolr=ColorUtil.textColorStr.green
			local limit=ItemInfo.num
			if passNum<limit then
				clolr=ColorUtil.textColorStr.red
			end
			local str="("..passNum.."/"..limit..")"
			txt_remine:setText("通关"..limit.."关".. ColorUtil.formatColorString1(str,clolr))
			local rewardlist=obj:getChild('list_reward')
            self:showReward(rewardlist,ItemInfo.reward)
            local btn=obj:getChild('Btn_get')
			local lingqu =PushMapModel:getTargetRewardLingqu(ItemInfo.id)
            local c1= obj:getController("c1")
            if passNum<limit  then
                c1:setSelectedIndex(0)
            else
                if passNum>=limit and lingqu==false  then
                    c1:setSelectedIndex(1)
                else
                    c1:setSelectedIndex(2)
                end
            end
            btn:removeClickListener(5)
            btn:addClickListener(
				function(context)
					-- GlobalUtil.delayCallOnce("PushMapModel:receiveTargetReward", function()
			
					-- end, self, 0.15)
					PushMapModel:receiveTargetReward(ItemInfo.id)
				
                end,
                5
			)
			local Btn_no=obj:getChild('Btn_no')
			Btn_no:removeClickListener(5)
            Btn_no:addClickListener(
                function(context)
					PushMapModel:TargetRewardEnter()
                end,
                5
            )
        end
    )
    self.list_reward:setNumItems(#self.rewardArr)
end


--UI初始化
function PushMapTargetRewardView:showReward(list,rewardInfo)
    list:setItemRenderer(
        function(index, obj)
			obj:setName(index)
            obj:removeClickListener(100)
			local itemcell = BindManager.bindItemCell(obj)
        	local award = rewardInfo[index+1]
        	itemcell:setData(award.code, award.amount, award.type)
            itemcell:setFrameVisible(false)
            obj:addClickListener(function( ... )
            	itemcell:onClickCell()
			end,100)
        end
    )
    list:setNumItems(#rewardInfo)
end

	--事件初始化
	function PushMapTargetRewardView:pushMap_upTargetRewardRed(...)
		self.rewardArr= PushMapModel:getTargetRewardGuankaInfo(true)
		self.list_reward:setNumItems(#self.rewardArr);
	end
	
	
function PushMapTargetRewardView:scrollToListItem( index )--新手引导
	for k,v in pairs(self.rewardArr) do
		if v.reward[1].code == tonumber(index) then
			print(33,"PushMapTargetRewardView.rewardArr = ",k,v)
			self.list_reward:scrollToView(k-1)
			return
		end
	end
end


return PushMapTargetRewardView