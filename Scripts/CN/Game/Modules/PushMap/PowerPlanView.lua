--Date :2021-01-18
--Author : generated by FairyGUI
--Desc : 

local PowerPlanView,Super = class("PowerPlanView", Window)

function PowerPlanView:ctor()
	--LuaLog("PowerPlanView ctor")
	self._packName = "PushMap"
	self._compName = "PowerPlanView"
	--self._rootDepth = LayerDepth.Window
	self.curNodeId=1
	self.myInfo=false
	self.playerList=false
	self.calltimer=false
end

function PowerPlanView:_initEvent( )
	
end

function PowerPlanView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:PushMap.PowerPlanView
	self.boss1 = viewNode:getChildAutoType('boss1')--bossItem
		self.boss1.btn_Fight = viewNode:getChildAutoType('boss1/btn_Fight')--GButton
		self.boss1.point = viewNode:getChildAutoType('boss1/point')--GTextField
		self.boss1.seatItem = viewNode:getChildAutoType('boss1/seatItem')--GButton
	self.boss2 = viewNode:getChildAutoType('boss2')--bossItem
		self.boss2.btn_Fight = viewNode:getChildAutoType('boss2/btn_Fight')--GButton
		self.boss2.point = viewNode:getChildAutoType('boss2/point')--GTextField
		self.boss2.seatItem = viewNode:getChildAutoType('boss2/seatItem')--GButton
	self.boss3 = viewNode:getChildAutoType('boss3')--bossItem
		self.boss3.btn_Fight = viewNode:getChildAutoType('boss3/btn_Fight')--GButton
		self.boss3.point = viewNode:getChildAutoType('boss3/point')--GTextField
		self.boss3.seatItem = viewNode:getChildAutoType('boss3/seatItem')--GButton
	self.btn_help = viewNode:getChildAutoType('btn_help')--GButton
	self.curNodeInfo = viewNode:getChildAutoType('curNodeInfo')--GTextField
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.goWrap = viewNode:getChildAutoType('goWrap')--GGraph
	self.last_state = viewNode:getChildAutoType('last_state')--GButton
	self.leftCount = viewNode:getChildAutoType('leftCount')--GRichTextField
	self.nextUnLockTime = viewNode:getChildAutoType('nextUnLockTime')--GTextField
	self.next_state = viewNode:getChildAutoType('next_state')--GButton
	self.powerLevelInfo = viewNode:getChildAutoType('powerLevelInfo')--powerLevelInfo
		self.powerLevelInfo.btn_s = viewNode:getChildAutoType('powerLevelInfo/btn_s')--com_btn_nil
			self.powerLevelInfo.btn_s.iconGray = viewNode:getChildAutoType('powerLevelInfo/btn_s/iconGray')--GLoader
			self.powerLevelInfo.btn_s.img_red = viewNode:getChildAutoType('powerLevelInfo/btn_s/img_red')--GImage
		self.powerLevelInfo.rankList = viewNode:getChildAutoType('powerLevelInfo/rankList')--GList
	self.progressBar = viewNode:getChildAutoType('progressBar')--GProgressBar
	self.rankBtn = viewNode:getChildAutoType('rankBtn')--GButton
	self.rewardBtn = viewNode:getChildAutoType('rewardBtn')--GButton
	--{autoFieldsEnd}:PushMap.PowerPlanView
	--Do not modify above code-------------
end

function PowerPlanView:_initListener( )
	
	self.btn_help:addClickListener(function()

	end)
	self.rewardBtn:addClickListener(function()	
		 ViewManager.open("PowerRewardView")
	end)
	self.rankBtn:addClickListener(function()
			ViewManager.open("PublicRankView",{type = GameDef.RankType.PowerPlan,collectionId=self.curNodeId})
	end)

	self.last_state:addClickListener(function()
		self:jumpToNode(self.curNodeId-1)
	end)

	self.next_state:addClickListener(function()
        self:jumpToNode(self.curNodeId+1)
	end)
   
end

function PowerPlanView:_initUI( )
	self:_initVM()
	self:_initListener()
	self:setBg("Y-bg1.jpg")
    self:PowerPlan_updateData()
	local skeletonNode=SpineMnange.createSprineById(ModelManager.HandbookModel.heroOpertion,true,nil,nil,ModelManager.HandbookModel.fashionCode)--这是英雄
	if skeletonNode then
		self.goWrap:displayObject():addChild(skeletonNode)
		--self.goWrap:setScale(1.5,1.5)
		skeletonNode:setAnimation(0,"stand",true)
	end
	self.progressBar:setTitleType(0)
end



function PowerPlanView:initData(data)
	--nodeInfo 1:PPowerPlan_NodeInfo 		#当前关卡的信息
	--myInfo 	 2:PPowerPlan_PlayerInfo
	self.myInfo=data.myInfo
	local nodeInfo=data.nodeInfo
	self.playerList=nodeInfo.playerList
	
	
	local bossMaps={}
	for k, v in pairs(nodeInfo.bossMap) do
		table.insert(bossMaps,v)
	end
	
	local totalPoint=0
	local maxSuccessPt=0
	self.curNodeId=nodeInfo.nodeId
	local brokenC=0
    for i = 1, 3 do
		local bossItem=self["boss"..i]
		local bossSeatItem = BindManager.bindSeatItem(bossItem.seatItem)
		local bossInfo=bossMaps[i]
		local point=bossInfo.point
		totalPoint=totalPoint+point
		local levelInfo=DynamicConfigData.t_TalentProjectGame[self.curNodeId][bossInfo.bossId][i]
		printTable(5656,self["boss"..i],"self",bossInfo)
		local monsterInfo= PushMapModel:getMonsterByBossId(bossInfo.bossId,1)
		bossSeatItem:initItemCell(monsterInfo.code,monsterInfo.star,monsterInfo.level,2)
		bossSeatItem.goWrap:setScaleX(-1)
		bossItem.point:setText(point.."/"..levelInfo.successPt)	
		maxSuccessPt=maxSuccessPt+levelInfo.successPt
		
		bossItem.btn_Fight:addClickListener(function ()
				if point>=levelInfo.successPt then
					PushMapModel:checkBeginFight(function ()
							ViewManager.open("PowerFreakView",{nodeId=self.curNodeId,bossInfo=bossInfo,dayFightCount=self.myInfo.dayFightCount})
					end)
				else
					ViewManager.open("PowerFreakView",{nodeId=self.curNodeId,bossInfo=bossInfo,dayFightCount=self.myInfo.dayFightCount})
				end

		end,i)
		--self.powerLevelInfo["diff"..i]:setText(levelInfo.beatPt)
		
		if point>=levelInfo.successPt  then
			if self.curNodeId==PushMapModel.powerCurNodeId then		
				bossItem:getController("bossType"):setSelectedPage("brokenFight")
			else
				bossItem:getController("bossType"):setSelectedPage("broken")
			end
			brokenC=brokenC+1
		else
			bossItem:getController("bossType"):setSelectedPage("open")
		end
		
		
    end
	
	if nodeInfo.endMs then
		self.nextUnLockTime:setText("")
		if brokenC==3 and self.curNodeId<PushMapModel:getAllLevel() then	
			local seasonEndDt= nodeInfo.endMs
			seasonEndDt= (seasonEndDt-ServerTimeModel:getServerTimeMS())/1000
			local lastTime = seasonEndDt
			if not tolua.isnull(self.nextUnLockTime) then
				self.nextUnLockTime:setText(string.format(Desc.powerPlant_desc3,TimeLib.GetTimeFormatDay(lastTime, 2)))
			end
			local function onCountDown(time)
				if not tolua.isnull(self.nextUnLockTime) then
					--self.isEnd = false
					self.nextUnLockTime:setText(string.format(Desc.powerPlant_desc3,TimeLib.GetTimeFormatDay(time, 2)))
				end
			end
			local function onEnd(...)
				if not tolua.isnull(self.nextUnLockTime) then
					--self.nextUnLockTime:setText(Desc.activity_txt18)
					self.nextUnLockTime:setText("")
					self:PowerPlan_updateData()
				end
			end
			if self.calltimer then
				TimeLib.clearCountDown(self.calltimer)
			end
			self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
		else
			if self.curNodeId<PushMapModel:getAllLevel() then
				self.nextUnLockTime:setText(Desc.powerPlant_desc5)
			end
		end
		local leftc=PushMapModel:powerGetChallTimes()-self.myInfo.dayFightCount
		self.leftCount:setText(string.format(Desc.powerPlant_desc6,"("..leftc.."/"..PushMapModel:powerGetChallTimes()..")"))
		
	else
		Scheduler.unschedule(self.calltimer)
		self.calltimer=false
		self.nextUnLockTime:setText("")
		self.leftCount:setText("")
	end

	
	self.powerLevelInfo.rankList:setNumItems(0)
	PushMapModel:powerPlanGetRecords(self.curNodeId,function (playerData)
		self.powerLevelInfo.rankList:setItemRenderer(function(index, obj)
		     --local levelInfo=DynamicConfigData.t_TalentProjectGame[bossInfo.bossId][self.diff]
			 local rankData=playerData.rankData[index+1]
			 local point=obj:getChildAutoType("point")
			 local rank=obj:getChildAutoType("rank")
			 local playerName=obj:getChildAutoType("playerName")
			 point:setText(rankData.value)
			 playerName:setText(rankData.name)
			 rank:setText(index+1)
		end)
		if playerData.rankData then
			self.powerLevelInfo.rankList:setNumItems(#playerData.rankData)		
		end

	end)
	
	if self.curNodeId==PushMapModel.powerCurNodeId  then
		self.next_state:setVisible(false)
		self.goWrap:setVisible(true)
	else
		self.next_state:setVisible(true)
		self.goWrap:setVisible(false)
	end
	
	if self.curNodeId==1 then
		self.last_state:setVisible(false)
	else
		self.last_state:setVisible(true)
	end
	
	self.curNodeInfo:setText(string.format(Desc.powerPlant_desc2,self.curNodeId))
	self.progressBar:setMax(maxSuccessPt)
	self.progressBar:setValue(totalPoint)
	
end

--前往已击破关卡
function PowerPlanView:jumpToNode(nodeId)
	if nodeId==PushMapModel.powerCurNodeId then
		self:PowerPlan_updateData()
		return 
	end
    local configData={}
	local nodeInfo={}
	local bossMap={}
	local levelInfos=DynamicConfigData.t_TalentProjectGame[nodeId]
	for bossId, bossInfo in pairs(levelInfos) do
		local pData={}
		pData.point=bossInfo[1].successPt
		pData.bossId=bossId
		table.insert(bossMap,pData)
	end
	nodeInfo.bossMap=bossMap
	nodeInfo.nodeId=nodeId
	nodeInfo.playerList=self.playerList
	configData.nodeInfo=nodeInfo
	configData.myInfo=self.myInfo
	
	self:initData(configData)
end


function PowerPlanView:PowerPlan_updateData()
	PushMapModel:powerPlanGetInfo(function (data)
			if tolua.isnull(self.view) then
				return
			end
			self:initData(data)
	end)
end


--页面退出时执行
function PowerPlanView:_exit( ... )
	Scheduler.unschedule(self.calltimer)
	self.calltimer=false
end


return PowerPlanView