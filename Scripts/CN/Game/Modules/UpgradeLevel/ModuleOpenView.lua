--Name : ModuleOpenView.lua
--Author : generated by FairyGUI
--Date : 2020-6-29
--Desc : 

local ModuleOpenView,Super = class("ModuleOpenView", Window)

function ModuleOpenView:ctor()
	--LuaLog("ModuleOpenView ctor")
	self._packName = "UIPublic_Window"
	self._compName = "ModuleOpenView"
	self._rootDepth = LayerDepth.PopWindow
	
end

function ModuleOpenView:_initEvent( )
	
end

function ModuleOpenView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:UpgradeLevel.ModuleOpenView
	--	vmRoot.mask = viewNode:getChildAutoType("$mask")--graph
	--{vmFieldsEnd}:UpgradeLevel.ModuleOpenView
	--Do not modify above code-------------
end

function ModuleOpenView:_initUI( )
	self:_initVM()
	
	--self.mask:addClickListener(function()
	--		self:closeView()
	--	end)
	
	local data = self._args
	local openItem = self.view:getChildAutoType("openItem")
	local spineParentDown = self.view:getChildAutoType("spineParentDown")
	local spineParentUp = self.view:getChildAutoType("spineParentUp")
	local icon = openItem:getChildAutoType("icon")
	local desc = openItem:getChildAutoType("desc")
	local title = openItem:getChildAutoType("title")
	local btn_link = openItem:getChildAutoType("btn_link")
	
	
	local spineDown =  SpineUtil.createSpineObj(spineParentDown, vertex2(spineParentDown:getWidth()/2,spineParentDown:getHeight()/2), "gongnengjiesuo_down", "Spine/ui/jiesuan", "efx_gongnengjiesuo", "efx_gongnengjiesuo",true)
	local spineUp =  SpineUtil.createSpineObj(spineParentUp, vertex2(spineParentUp:getWidth()/2,spineParentUp:getHeight()/2), "gongnengjiesuo_up", "Spine/ui/jiesuan", "efx_gongnengjiesuo", "efx_gongnengjiesuo",true)
    spineDown:setCompleteListener(function( name )
    	--spine1:setAnimation(0,"gongnengjiesuo_up",true)
    end)

	icon:setURL(PathConfiger.getModuleIcon(data.picture))
	desc:setText(data.desc)
	title:setText(data.name)
	
	btn_link:addClickListener(function()
		if self._args.guide ~= "" then
			self:closeView()
		else
			self:closeView()
			ModuleUtil.openModule(self._args.moduleId)
		end
	end)
	
	local mInfo = ModuleUtil.getModuleIdView(self._args.moduleId)

    if mInfo and mInfo.view and mInfo.view ~= "" then
		btn_link:setVisible(true)
	else
		btn_link:setVisible(false)
	end
	
	--self.view:getTransition("enter"):play(function()
--
	--	end);
	
	self.view:getTransition("t0"):play(function( ... )
						  end);
end


function ModuleOpenView:_exit()
	if self._args.guide and self._args.guide~="" then
		--local GuideView=ViewManager.getView("GuideView")
		--if GuideView then GuideView:closeView() end
		
		Scheduler.scheduleNextFrame(function()
				ViewManager.backToMainView()
				Dispatcher.dispatchEvent(EventType.guide_open,{guideMode = 2,guideName = self._args.guide})
				
			end)
	else
		Scheduler.scheduleNextFrame(function()
			Dispatcher.dispatchEvent(EventType.module_open_hint)
		end)
	end
end

return ModuleOpenView