--Name : EquipmentView.lua
--Author : generated by FairyGUI
--Date : 2020-4-1
--Desc : 
local EquipmentView,Super = class("EquipmentView", MutiWindow)

--local EquipmentView,Super = class("EquipmentView", Window)

function EquipmentView:ctor()
	--LuaLog("EquipmentView ctor")
	self._packName = "Equipment"
	self._compName = "EquipmentView"
	self._isFullScreen = false
	self._rootDepth = LayerDepth.Window
	
	self._isFullScreen = false
	self.viewCtrlName = "base"
	self.clickPos = 1
	self.perEquip = false --专武对象
	-- self.spineNode = false;
end

function EquipmentView:_initEvent( )
	--self:addEventListener(EventType.equipment_refresheq,self)
end

function EquipmentView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Equipment.EquipmentView
		local EquipBtn4 = viewNode:getChildAutoType("$EquipBtn4")--Button
		vmRoot.EquipBtn4 = EquipBtn4
			local frame = viewNode:getChildAutoType("$EquipBtn4/$frame")--
			EquipBtn4.frame = frame
				frame.frame = viewNode:getChildAutoType("$EquipBtn4/$frame/$frame")--image
			EquipBtn4.item = viewNode:getChildAutoType("$EquipBtn4/$item")--Button
		vmRoot.OneKeyOnBtn = viewNode:getChildAutoType("$OneKeyOnBtn")--Button
		local EquipBtn3 = viewNode:getChildAutoType("$EquipBtn3")--Button
		vmRoot.EquipBtn3 = EquipBtn3
			local frame = viewNode:getChildAutoType("$EquipBtn3/$frame")--
			EquipBtn3.frame = frame
				frame.frame = viewNode:getChildAutoType("$EquipBtn3/$frame/$frame")--image
			EquipBtn3.item = viewNode:getChildAutoType("$EquipBtn3/$item")--Button
		vmRoot.needlevel = viewNode:getChildAutoType("$needlevel")--text
		vmRoot.equipInfo = viewNode:getChildAutoType("$equipInfo")--list
		local EquipBtn1 = viewNode:getChildAutoType("$EquipBtn1")--Button
		vmRoot.EquipBtn1 = EquipBtn1
			local frame = viewNode:getChildAutoType("$EquipBtn1/$frame")--
			EquipBtn1.frame = frame
				frame.frame = viewNode:getChildAutoType("$EquipBtn1/$frame/$frame")--image
			EquipBtn1.item = viewNode:getChildAutoType("$EquipBtn1/$item")--Button
		vmRoot.skillList = viewNode:getChildAutoType("$skillList")--list
		local EquipBtn2 = viewNode:getChildAutoType("$EquipBtn2")--Button
		vmRoot.EquipBtn2 = EquipBtn2
			local frame = viewNode:getChildAutoType("$EquipBtn2/$frame")--
			EquipBtn2.frame = frame
				frame.frame = viewNode:getChildAutoType("$EquipBtn2/$frame/$frame")--image
			EquipBtn2.item = viewNode:getChildAutoType("$EquipBtn2/$item")--Button
		vmRoot.OneKeyOffBtn = viewNode:getChildAutoType("$OneKeyOffBtn")--Button

		vmRoot.btn_jewelry1 = viewNode:getChildAutoType("btn_jewelry1"); -- 左边饰品槽位
		vmRoot.btn_jewelry2 = viewNode:getChildAutoType("btn_jewelry2"); -- 右边饰品槽位
		vmRoot.UniqueWeapon = viewNode:getChildAutoType("UniqueWeapon"); -- 右边饰品槽位
		-- vmRoot.miniRole = viewNode:getChildAutoType("miniRole"); -- 迷你人物
	--{vmFieldsEnd}:Equipment.EquipmentView
	--Do not modify above code-------------
	
	
	
	self.perEquip = BindManager.bindClass("Game.Modules.Equipment.UniqueWeaponItem", self.UniqueWeapon)
end

function EquipmentView:_initUI( )
	self:_initVM()
	
	
	if self._args.hid then
		EquipmentModel.hid = self._args.hid
	end
	

	self:initWearEqArea();

	self:_refresh( )
	
	--self.view:addClickListener(function ()
			--self.viewCtrl:setSelectedIndex(0)

		--end)
	
	--self.view:setSortingOrder(2)
	
	self.viewCtrl = self.view:getController("base")
	local condition = DynamicConfigData.t_module[18].condition
	local needLevel = 0
	for i = 1, #condition do
		if condition[i].type == 1 then
			needLevel = condition[i].val
			break
		end
	end
	if PlayerModel.level >= needLevel then
		self.viewCtrl:setSelectedIndex(0)
	else
		self.viewCtrl:setSelectedIndex(1)
		self.needlevel:setText(Desc.equipment_needlv:format(needLevel))
	end

	

end

function EquipmentView:cardView_updateInfo(_, data)
    self:_refresh()
end

--刷新
function EquipmentView:_refresh( )
	local HeroInfo = ModelManager.CardLibModel.curCardStepInfo
	if (not HeroInfo) then
		return;
	end
	
	self.perEquip:setData(HeroInfo)
	printTable(33,"_refresh",HeroInfo)
	EquipmentModel.hid = HeroInfo.uuid
	EquipmentModel.attType= HeroInfo.heroDataConfiger.attType
	JewelryModel:setHeroInfo(HeroInfo);
	self:equipment_refresheq()
	self:Jewelry_updateWear();
	-- RedManager.register("V_CardEquip"..HeroInfo.uuid, self.OneKeyOnBtn:getChild("img_red"))
	
	local red_img = self.OneKeyOnBtn:getChild("img_red");
	RedManager.register("V_CardEquipWear"..HeroInfo.uuid, red_img)
	
	RedManager.register("V_CardUniqueWeapon"..HeroInfo.uuid, self.UniqueWeapon:getChild("img_red"))
	

	for i = 1, 2 do
		RedManager.register("V_Jewelry"..HeroInfo.uuid..i, self["btn_jewelry"..i]:getChildAutoType("img_red"))
		--local flag = RedManager.getTips("V_Jewelry"..HeroInfo.uuid..i)
		--self["btn_jewelry"..i]:getChildAutoType("img_red"):setVisible(flag)
	end
end

--初始化当前穿戴的装备
function EquipmentView:initWearEqArea( )
	
	--一键脱掉
	self.OneKeyOffBtn:addClickListener(function ()
			for i = 1, 4 do
				local pos = i
				if EquipmentModel:getEqByPos(i) then
					RPCReq.Equipment_TakeOff({type = 1,pos = i,heroUuid = EquipmentModel.hid},function(args)
							printTable(33,"Equipment_TakeOff call back",args)
							if args.isSuccess then
								local downEquip = args.list[1]
								if downEquip then
									EquipmentModel:upBagEquip(downEquip)
									EquipmentModel:setSkillData(downEquip.uuid, downEquip)
									EquipmentModel:updateWearEqList(args.pos)
								end
							end
						end)
				end
			end

		end,33)

	--一键穿戴
	self.OneKeyOnBtn:addClickListener(function ()
			local heroInfo = ModelManager.CardLibModel:getHeroByUid(EquipmentModel.hid)
			local oldAttr = heroInfo.attrs
			local oldCombat = heroInfo.combat
			for i = 1, 4 do
				RPCReq.Equipment_Wear({type = 1,pos = i,heroUuid = EquipmentModel.hid},function(args)
						printTable(33,"Equipment_Wear call back",args)
						
						local downEquip = (args.oldList and #args.oldList > 0) and args.oldList[1] or nil;
						if (downEquip) then
							EquipmentModel:setSkillData(downEquip.uuid, downEquip)
							EquipmentModel:upBagEquip(downEquip)
						end
						EquipmentModel:updateWearEqList(args.pos,args.list[1])
						GlobalUtil.delayCallOnce("EquipmentCompareView:updateWearEqList",function()
							local heroData = ModelManager.CardLibModel:getHeroByUid(EquipmentModel.hid)
							local newAttr = heroData.attrs
							RollTips.showAttrTips(oldAttr, newAttr)
							local newCombat = heroData.combat
							local addNum = newCombat - oldCombat
							if addNum > 0 then
								RollTips.showAddFightPoint(addNum)
							end
						end, 0.2)
					end)
			end
		end,33)

	
	
	--已穿戴的装备
	for i=1,4 do
		
		self["EquipBtn"..i].item:getChildAutoType("checkMark"):setVisible(false)
		self["EquipBtn"..i].item:getChildAutoType("mask"):setVisible(false)
		self["EquipBtn"..i]:removeClickListener()
		self["EquipBtn"..i]:addClickListener(function (context)
				context:stopPropagation()
				local wearData = EquipmentModel:getEqByPos(i)
				if  wearData then
					local getinfo = {}
					table.insert(getinfo,wearData.uuid)
					EquipmentModel:reqSkillData(EquipmentModel.hid,getinfo,function(eqlist)
						if tolua.isnull(self.view) then return end
						local pos = self["EquipBtn"..i]:localToGlobal(Vector2.zero)
						--self.tiGroup:setVisible(true)
						local info = {
							eqtype = 1,
							node = self["EquipBtn"..i],
							eqdata = wearData,
							pos = i
						}
	
						ViewManager.open("EquipmentCompareView",info)
						end)
					
					--self.tiGroup:setPosition(pos.x,pos.y + self["EquipBtn"..i]:getHeight())
					self.clickPos = i
				else
					--self.tiGroup:setVisible(false)
					local info = {
						eqtype = 1,
						node = self["EquipBtn"..i],
						eqdata = wearData,
						pos = i
					}
					EquipmentModel.curPos = i
					ViewManager.open("EquiMentListView",info)
					--self.viewCtrl:setSelectedIndex(1,false)
					--self:onViewControllerChanged( )
				end
			end)
	end
	
	-- 饰品
	for i = 1, 2 do
		local item = self["btn_jewelry"..i]:getChildAutoType("$item");
		item:getChildAutoType("checkMark"):setVisible(false);
		item:getChildAutoType("mask"):setVisible(false);
		self["btn_jewelry"..i]:removeClickListener();
		self["btn_jewelry"..i]:addClickListener(function ()
			local lockState = JewelryModel:checkGirdStatus(i)
			local limit = i == 1 and JewelryModel.GirdLeftLimit or JewelryModel.GirdRightLimit;
			local lockTips = string.format(Desc["Jewelry_limitTip"..i], limit);
			if (lockState == 1) then
				RollTips.show(lockTips);
			elseif (lockState == 0) then
				ViewManager.open("JewelryChoseListView", {pos = i});
			else
				local data = {
					eqtype= 1,
					node=self["btn_jewelry"..i],
					pos = i,
					eqdata = lockState
				}
				ViewManager.open("JewelryCompareView",data)
			end
		end);
	end
end

--刷新技能模块
function EquipmentView:reFreshSkillModule( )
	local skillList = {}
	for k,v in pairs(EquipmentModel.eqData[EquipmentModel.hid]) do
		for m,n in pairs(v.skill) do
			table.insert(skillList,{pos = k,id = n})
			print(2233, "pos=", k, "  id=",n);
		end
	end
	-- 饰品
	for i = 1, 2 do
		local jeData = JewelryModel:checkGirdStatus(i);
		if (type(jeData) == 'table' and not jeData.percentageValue) then
			for _, id in pairs(jeData.skill) do
				table.insert(skillList, {pos = true, id = id})
				print(2233, "pos=", true, "  id=",id);
			end
		end
	end

	self.skillList:setItemRenderer(function(index,obj)
			local skillCell = BindManager.bindSkillCell(obj)
			local skillInfo = skillList[index+1] or {}
			if (skillInfo.pos == true) then
				skillCell:setJewelryData(skillInfo.id, true);
			else
				skillCell:setEquipmentData(skillInfo.id,skillInfo.pos)
			end
			skillCell.view:getChildAutoType("n29"):setVisible(false)
			
		end)
	self.skillList:setNumItems(12)
end

--监听控制器页面改变 重写父类函数
function EquipmentView:onViewControllerChanged( )

	Super.onViewControllerChanged( self )
end

--接收切页通知
function EquipmentView:equipment_changeCtl( _,index )
	self.viewCtrl:setSelectedIndex(index,false)
	self:onViewControllerChanged( )
end

--更新模块属性值之和
function EquipmentView:equipment_refresheq( )
	local data = EquipmentModel:getWearEqListByHero() or nil
	
	local reqinfo = {}
	for i=1,4 do
		local bt = self["EquipBtn"..i]
		bt.frame:setVisible(true)
		--bt.item:getChildAutoType("starBg"):setVisible(false)
		if not bt.item.itemcell then
			bt.item.itemcell = BindManager.bindItemCell(bt.item:getChildAutoType("itemCell"))
			bt.item.itemcell.view:removeClickListener()
			bt.item.itemcell:setIsBig(true)
			--bt.item.cardStar= BindManager.bindCardStar(bt.item:getChildAutoType("cardStar"))
		end
		bt.item.itemcell.view:setVisible(false)
		--bt.item.cardStar.view:setVisible(false)
		--bt.item:getChildAutoType("starList"):setNumItems(0)
		
		
		local wearData = EquipmentModel:getEqByPos(i)
		--printTable(33,"wearData = ",wearData)
		if  wearData then
			table.insert(reqinfo,wearData.uuid)
		end
		local equipInfo = wearData and DynamicConfigData.t_equipEquipment[wearData.code]
		-- 套装特效
		local suitInfo = EquipmentModel.newSuitData[EquipmentModel.hid]
		local colormap = {[4]= 6, [5]= 4, [6]= 5}  -- 特效的命名与实际品质不一样 这里做下对应
		local effect = bt:getChildAutoType("effect");
		if (effect.sp) then
			effect:displayObject():removeAllChildren();
			effect.sp = false;
		end
		local isInSuit = false
		if equipInfo and suitInfo then
			for _,v in pairs(suitInfo) do
				if equipInfo.color >= v.color and equipInfo.staramount >= v.star then
					isInSuit = true
					break
				end
			end
		end
		if isInSuit then --and suitInfo.color > 3
			local actionName = "animation_"..colormap[equipInfo.color];
			effect.sp = SpineUtil.createSpineObj(effect, vertex2(effect:getWidth()/2, effect:getHeight()/2), actionName, "Effect/UI", "efx_zhuangbeixitong", "efx_zhuangbeixitong", true);
		end
	end
	EquipmentModel:reqSkillData(EquipmentModel.hid,reqinfo,function(eqlist)
			if tolua.isnull(self.view) then return end
			self:reFreshSkillModule()
		end)
	
	--已穿戴的装备
	for k,v in pairs(data) do
		local bt = self["EquipBtn"..v.id]
		local info = EquipmentModel:getConfingByCode(v.code)
		bt.frame:setVisible(false)
		bt.item:setVisible(true)
		bt.item.itemcell.view:setVisible(true)
		--bt.item.cardStar.view:setVisible(true)
		bt.item.itemcell:setData(v.code,0,CodeType.ITEM)
		--bt.item.cardStar:setData(info.staramount)
	end
	self:upAttrPanel();
end

function EquipmentView: Jewelry_updateWear()
	for i = 1, 2 do
		local jeItem = self["btn_jewelry"..i]
		if (not tolua.isnull(jeItem)) then
			local frame = jeItem:getChildAutoType("$frame")
			local lockCtrl = frame:getController('c1');
			local item = jeItem:getChildAutoType("$item");
			local lockState = JewelryModel:checkGirdStatus(i);
			if (type(lockState) == "number") then
				frame:setVisible(true);
				item:setVisible(false);
				lockCtrl:setSelectedIndex(lockState);
			else
				frame:setVisible(false);
				item:setVisible(true);
				local itemCell = item.itemCell or BindManager.bindItemCell(item:getChildAutoType("itemCell"));
				itemCell:setIsBig(true);
				itemCell:setAmountVisible(false);
				itemCell:setClickable(false);
				itemCell:setData(lockState.code, 1, GameDef.GameResType.Item);
			end
		end
	end
	self:upAttrPanel();
	self:reFreshSkillModule();
end

-- 更新模块属性
function EquipmentView: upAttrPanel()
	local data = EquipmentModel:getWearEqListByHero() or nil
	local sx = {
		{name = Desc.equipment_sx1, value = 0},
		{name = Desc.equipment_sx2, value = 0},
		{name = Desc.equipment_sx3, value = 0},
		{name = Desc.equipment_sx4, value = 0},
		{name = Desc.equipment_sx5, value = 0},
		{name = Desc.equipment_sx6, value = 0}}

	--已穿戴的装备
	local eqConfig = DynamicConfigData.t_equipEquipment
	local addInfo = self:GetSuitAttr()
	printTable(33,"GetSuitAttr",addInfo)
	for k,v in pairs(data) do
		local configs = eqConfig[v.code]
		--local addnum = addInfo[k] and addInfo[k][1] or 0
		sx[1].value = sx[1].value + configs.hp--+math.ceil(configs.hp*(addnum/10000.0))
		--addnum = addInfo[k] and addInfo[k][2] or 0
		sx[2].value = sx[2].value + configs.attack--+math.ceil(configs.attack*(addnum/10000.0))
		--addnum = addInfo[k] and addInfo[k][3] or 0
		sx[3].value = sx[3].value + configs.defense--+math.ceil(configs.defense*(addnum/10000.0))
		--addnum = addInfo[k] and addInfo[k][4] or 0
		sx[4].value = sx[4].value + configs.magic--+math.ceil(configs.magic*(addnum/10000.0))
		--addnum = addInfo[k] and addInfo[k][5] or 0
		sx[5].value = sx[5].value + configs.magicDefense--+math.ceil(configs.magicDefense*(addnum/10000.0))
		--addnum = addInfo[k] and addInfo[k][6] or 0
		sx[6].value = sx[6].value + configs.speed--+math.ceil(configs.speed*(addnum/10000.0))
	end
	--local suitInfo = EquipmentModel.suitData[EquipmentModel.hid]
	
	

	for k,v in pairs(addInfo) do
		sx[k].value = sx[k].value + math.ceil(sx[k].value*(v/10000.0))
	end
	
	
	-- 已穿戴的饰品
	for i = 1, 2 do
		local jeData = JewelryModel:checkGirdStatus(i);
		if (type(jeData) == "table") then
			for _, d in pairs(jeData.attr) do
				if (sx[d.id]) then
					local percentageValue = jeData.percentageValue or 0;
					local addNum = math.ceil(d.value * percentageValue / 10000);
					sx[d.id].value = sx[d.id].value + d.value + addNum;
				end
			end
		end
	end
	
	self.equipInfo:setItemRenderer(function(index,obj)
		local name = obj:getChildAutoType("name")
		name:setText(sx[index+1].name)
		local value = obj:getChildAutoType("value")
		value:setText(sx[index+1].value)
		local iconLoader = obj:getChildAutoType("loader_attrIcon")
		iconLoader:setURL(PathConfiger.getFightAttrIcon(index + 1))
	end)

	self.equipInfo:setNumItems(#sx)
end


function EquipmentView:GetSuitAttr()
	local attr = {}
	local suitCount = {}
	local tmp = {}
	local suit = EquipmentModel.newSuitData[EquipmentModel.hid]
	if suit then
		for count, suitData in pairs(suit) do
			local sData = DynamicConfigData.t_equipsuit[suitData.color][suitData.star]
			for m,n in pairs(sData) do
				if n.count == count then
					for _, v in pairs(n.attr) do
						if not attr[v.type] then
							attr[v.type] = v.value
						else
							attr[v.type] = attr[v.type] + v.value
						end
					end
				end
			end
		end
	end
	return attr
end

return EquipmentView