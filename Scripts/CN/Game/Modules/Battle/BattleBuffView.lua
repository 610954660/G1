--Name : BattleBuffView.lua
--Author : generated by FairyGUI
--Date : 2020-3-30
--Desc : 

local BattleBuffView,Super = class("BattleBuffView", Window)

function BattleBuffView:ctor()
	--LuaLog("BattleBuffView ctor")
	self._packName = "Battle"
	self._compName = "BattleBuffView"
	
	self._rootDepth =LayerDepth.Alert
	--self._rootDepth = LayerDepth.Window
end

function BattleBuffView:_initEvent( )
	
end

function BattleBuffView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Battle.BattleBuffView
		vmRoot.heroLevel = viewNode:getChildAutoType("$heroLevel")--text
		vmRoot.buffList = viewNode:getChildAutoType("$buffList")--list
		vmRoot.heroName = viewNode:getChildAutoType("$heroName")--text
	--{vmFieldsEnd}:Battle.BattleBuffView
	--Do not modify above code-------------
	vmRoot.noneData = viewNode:getChildAutoType("$noneData")--text
	
end

function BattleBuffView:_initUI( )
	self:_initVM()
	self:initData()
	
end


function BattleBuffView:initData( )
	--self._args.heroId
	local ultSkill, passiveSkill ={},{}
	if self._args.isHero then
		local heroName=DynamicConfigData.t_hero[self._args.heroId].heroName
		 self.heroName:setText(heroName)
		 ultSkill, passiveSkill = ModelManager.CardLibModel:getSkillListbyUUid(2,self._args.heroId)
	else
		 local monster=DynamicConfigData.t_monster[self._args.heroId]
		 self.heroName:setText(monster.name)
		 ultSkill=monster.skill
	end
	self.heroLevel:setText(self._args.level.."级")


    --for k, v in pairs(passiveSkill) do
		 --table.insert(ultSkill,v)
	--end
	printTable(5210,ultSkill,"所有技能id")
	--self.skillList:setItemRenderer(function(index,skillItem)
			--local skillData=ultSkill[index+1]
			
			--local skillIcon = FGUIUtil.getChild(skillItem, "_Loader$icon", "GLoader")
			--local uiInfo = DynamicConfigData.t_skill[skillData]
			--if uiInfo then
				--local ultSkillurl = ModelManager.CardLibModel:getItemIconByskillId(uiInfo.icon)
				--skillIcon:setURL(ultSkillurl) --放了一张技能图片
			--end
			----skillItem:removeEventListener(FUIEventType.Click,1)
			----池子里面原来的事件注销掉
			--skillItem:addEventListener(FUIEventType.Click,
				--function(context)
					--self:setSillDetail(uiInfo)
					----点击查看技能详情
				--end,
				--1
			--)
			--if index==0 then
				--self:setSillDetail(uiInfo)
			--end		
	--end)
	--self.skillList:setNumItems(#ultSkill)
	--self.skillList:setSelectedIndex(0)
	
	local buffDatas={}
	local buffs = {}
	if self._args.buffData==nil then
		self._args.buffData={}
	end
	printTable(086,self._args.buffData,"test")
	for k, v in pairs(self._args.buffData) do	
		--print(086,v.buffIcon,"test")
		local buff=DynamicConfigData.t_buff[v.buffId]
		if buff and buff.buffIcon~="" then
			if buffs[v.buffId] == nil then
				table.insert(buffDatas,v)
			end
			local round = buffs[v.buffId]
			if round == nil then
				buffs[v.buffId] = v.round
			elseif
				v.round >= round then buffs[v.buffId] = v.round
			end
		end
	end
	self.noneData:setVisible(#buffDatas==0)
	self.buffList:setItemRenderer(function(index,buffItem)
			local data=buffDatas[index+1]
			local round = buffs[data.buffId]
			local buff=DynamicConfigData.t_buff[data.buffId]
			local addTips = ""
			if data.buffCount >1 then
				--addTips = "("..data.buffCount.."层)"
				buffItem:getChildAutoType("buffCount"):setText(data.buffCount)
			end
			buffItem:getChildAutoType("buffCount"):setVisible(data.buffCount>1)
			buffItem:getChildAutoType("buffName"):setText(buff.buffDescribe..addTips)
			if round>49 then
				buffItem:getChildAutoType("roundNum"):setText("永久")
				buffItem:getChildAutoType("roundNum"):setColor(ColorUtil.textColor.green)
			else
				buffItem:getChildAutoType("roundNum"):setText(round.."回合")
			end

			buffItem:setIcon(string.format("%s%s.png","skill/Icon/buff/",buff.buffIcon))
		end)
	self.buffList:setNumItems(#buffDatas)
	self.buffList:setVisible(not __LJJ_BattleTest__)
end


function BattleBuffView:setSillDetail(skillInfo)
	--self.skillName:setText(skillInfo.skillName)
	self.skillDetail:setText(skillInfo.showName)
	
end


function BattleBuffView:battle_end()
    print(0866,"BattleBuffView:battle_end")
	ViewManager.close("BattleBuffView")
end


function BattleBuffView:battle_Next()
	print(0866,"BattleBuffView:battle_Next")
	ViewManager.close("BattleBuffView")
end


function BattleBuffView:battle_close()
	print(0866,"BattleBuffView:battle_Next")
	ViewManager.close("BattleBuffView")
end




function BattleBuffView:battle_updateBuffList(name,heroId,buffData,isHero)
	self._args.buffData=buffData
	self._args.heroId=heroId
	self._args.isHero=isHero
	self:initData()
end



return BattleBuffView