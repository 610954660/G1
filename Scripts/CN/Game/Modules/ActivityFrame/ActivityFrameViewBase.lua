--Name : ActivityFrameViewBase.lua
--Author : generated by FairyGUI
--Date : 2020-5-9
--Desc : added by xhd UI框架模态4

local ActivityFrameViewBase,Super = class("ActivityFrameViewBase", MutiWindow)
local ActivityMap = require "Game.Modules.Activity.ActivityMap"
function ActivityFrameViewBase:ctor()
	self._packName = "ActivityFrame"
	self._compName = "ActivityFrame2View"
	self._args.regCtrl = 1
	self._moneyType = false
	
	self.titleText = false
	self.closeArrow = false
	self.closeBtn = false
	self.mainActiveId = self._args.mainActiveId
	self.viewData =self._args.viewData 
end

function ActivityFrameViewBase:_initEvent( )
end

function ActivityFrameViewBase:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	--printTable(12,'>>>>>>>>>//dsaf/a/fad/sf',self._args,self._prePage)
	---Do not modify following code--------
	--{vmFields}:ActivityFrame.ActivityFrameViewBase
		vmRoot._tabBar = viewNode:getChildAutoType("$_tabBar")--list
	--{vmFieldsEnd}:ActivityFrame.ActivityFrameViewBase
	--Do not modify above code-------------	 
	
	self:moveTitleToTop()
	self.titleText = viewNode:getChildAutoType("title")
	self.closeArrow = viewNode:getChildAutoType("close")
	self.closeBtn = viewNode:getChildAutoType("closeButton")
	self.closeBtn:addClickListener(function ( ... )
		self:closeView()
	end)
end

function ActivityFrameViewBase:onViewControllerChanged()
	Super.onViewControllerChanged(self);
	if tolua.isnull(self.view) then return end
	local frame= self.view:getChildAutoType('frame')
	local fullScreen=frame:getChildAutoType('fullScreen')
	local bgIcon=fullScreen:getChildAutoType('icon')
	-- printTable(1,'>>>>>>>>>//dsaf/a/fad/sf12',self._prePage,self._preIndex,self._args.viewData)
	 bgIcon:setURL(self._args.viewData[self._preIndex+1].activeBg) 
	 local childView=self.ctlView[self._prePage]
	 if childView and childView.setActType then
		childView:setActType(self._args.viewData[self._preIndex+1].actType)
	 end
	 self._tabBar:setSortingOrder(100)
	 local  img_tabgBg=self.view:getChildAutoType("img_tabgBg")
	 if img_tabgBg and not tolua.isnull(img_tabgBg) then
		img_tabgBg:setSortingOrder(90)
	 end
	if self.titleText then	self.titleText:setSortingOrder(101) end
	if self.closeArrow then	self.closeArrow:setSortingOrder(103) end
	if self.closeBtn then	self.closeBtn:setSortingOrder(102) end
end

function ActivityFrameViewBase:close_ActivityView( mainActiveId,actType)
	local inFlag = false
	local mid = 0 
	if mainActiveId then
		mid = mainActiveId
		inFlag = true
	else
		mid = self.mainActiveId
	end
	
	if (not mainActiveId) and actType then
		--确定当前关闭的活动在这个集合当中
		for i = 1, #self.viewData do
			if self.viewData[i].type == actType then
				inFlag = true
			end
		end
	end

	if not inFlag then --活动不在的框架  直接return
		return 
	end
	self:closeView()
	local viewData = ActivityModel:marketUIWinData(mid) 
	if not viewData then
		return
	end
    if (viewData and (#viewData > 0)) then
        ViewManager.open(self._viewName,{viewData =viewData,page = viewData[1].page})
    else
        RollTips.show(Desc.activity_txt1);
    end
end

function ActivityFrameViewBase:_initUI( )
	self:_initVM()
end


return ActivityFrameViewBase