--Name : ActivityFrameView.lua
--Author : generated by FairyGUI
--Date : 2020-5-9
--Desc : added by xhd UI框架模态1
--精彩活动固定活动集合框架
local ActivityFrameView,Super = class("ActivityFrameView", MutiWindow)
local ActivityMap = require "Game.Modules.Activity.ActivityMap"
function ActivityFrameView:ctor()
	self._packName = "ActivityFrame"
	self._compName = "ActivityFrameView"
	self._args.regCtrl = 1
	self._moneyType = false
	
	self.titleText = false
	self.closeArrow = false
	self.closeBtn = false
end

function ActivityFrameView:_initEvent( )
end

function ActivityFrameView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	--printTable(12,'>>>>>>>>>//dsaf/a/fad/sf',self._args,self._prePage)
	---Do not modify following code--------
	--{vmFields}:ActivityFrame.ActivityFrameView
		vmRoot._tabBar = viewNode:getChildAutoType("$_tabBar")--list
	--{vmFieldsEnd}:ActivityFrame.ActivityFrameView
	--Do not modify above code-------------	 
	
	self:moveTitleToTop()
	self.titleText = viewNode:getChildAutoType("title")
	self.closeArrow = viewNode:getChildAutoType("close")
	self.closeBtn = viewNode:getChildAutoType("closeButton")
	self.closeBtn:addClickListener(function ( ... )
		self:closeView()
	end)
end

function ActivityFrameView:onViewControllerChanged()
	Super.onViewControllerChanged(self);
	local frame= self.view:getChildAutoType('frame')
	local fullScreen=frame:getChildAutoType('fullScreen')
	local bgIcon=fullScreen:getChildAutoType('icon')
	printTable(32,'>>>>>>>>>//dsaf/a/fad/sf12',self._prePage,self._preIndex,self._args.viewData)
	 bgIcon:setURL(self._args.viewData[self._preIndex+1].activeBg) 
	 local childView=self.ctlView[self._prePage]
	 if childView and childView.setActType then
		childView:setActType(self._args.viewData[self._preIndex+1].actType)
	 end
	 self._tabBar:setSortingOrder(100)
	self.view:getChildAutoType("img_tabgBg"):setSortingOrder(90)
	if self.titleText then	self.titleText:setSortingOrder(101) end
	if self.closeArrow then	self.closeArrow:setSortingOrder(103) end
	if self.closeBtn then	self.closeBtn:setSortingOrder(102) end
end

function ActivityFrameView:close_ActivityView(  )
    ViewManager.close("ActivityFrameView")
    local mainActiveId = 1
	local winData = ActivityModel:marketUIWinData(mainActiveId) 
	if not winData then
		return
	end
    for k,v in pairs(winData) do
    	if v.actType == GameDef.ActivityType.SurpriseGift then
    		table.remove(winData,k)
    	end
    end
    if (winData and (#winData > 0)) then
        ViewManager.open(ActivityMap.ActivityFrame[mainActiveId],{viewData =winData,page = winData[1].page})
    else
        RollTips.show(Desc.activity_txt1);
    end
end

function ActivityFrameView:_initUI( )
	self:_initVM()
end


return ActivityFrameView