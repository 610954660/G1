--Name : WorldChallengeModel.lua
--Author : generated by FairyGUI
--Date : 2020-5-22
--Desc :

local WorldChallengeModel = class("WorldChallengeModel", BaseModel)

function WorldChallengeModel:ctor()
    self.ItemPos = {
        "3_1",
        "3_2",
        "3_3",
        "3_4",
        "3_5",
        "3_6",
        "3_7",
        "3_8",
        "2_1",
        "2_2",
        "2_3",
        "2_4",
        "1_1",
        "1_2",
        "0_1"
    }
    self.LinePos = {"2_1", "2_2", "2_3", "2_4", "1_1", "1_2", "1_3", "1_4", "0_1"}
    self.WorldChallengeGuessRed = {}
    self.hasChange = false
    self.hasChageRed = false
    self.WorldChallengeActiveTime = {}
    self.playerMap = {}
    self.WorldChallenInfo = {}
    self.guessInfo = {}
    --竞猜信息
    self.HonourInfo = {}
    --名人堂信息
    self.joinBattleInfo = {}
    --擂台赛我的对手信息
    --擂台赛首次登陆
    self.WorldChallenFirstLogin={}
    --擂台赛竞猜红点
    self.WorldChallenJingCaiRed=false
    self.matchMode = 0 -- 0 竞技场模式  1 天境赛模式  只读 --根据消息WorldArena_StateNotify确定
    self.guessIsRead = true
end

function WorldChallengeModel:init()
end

function WorldChallengeModel:setFirstLoginState(key)
    self.WorldChallenFirstLogin[key]=true
end

function WorldChallengeModel:getFirstLoginState(key)
    if self.WorldChallenFirstLogin[key]==nil then
        return false
    end
    return self.WorldChallenFirstLogin[key]
end

function WorldChallengeModel:getWorldChallengeShouzhiAnim(com, pos)
    local animation = false
    if not pos then
        pos = Vector2.zero
    end
    animation =
        SpineUtil.createSpineObj(
        com,
        {x = 0, y = 0},
        "ui_dianzan_loop",
        "Effect/UI",
        "efx_sijieleitaisai",
        "efx_sijieleitaisai",
        false
    )
    animation:setAnimation(0, "ui_dianzan_loop", true)
    return animation
end

function WorldChallengeModel:getWorldChallengeXiantiaoAnim(com, Tag, pos) --线条动效
    local animation = false
    if not pos then
        pos = Vector2.zero
    end
    local str = "ui_lianxian8_1_loop"
    if Tag == 1 then
        str = "ui_lianxian8_1_loop"
    elseif Tag == 2 then
        str = "ui_lianxian4_1_loop"
    elseif Tag == 3 then
        str = "ui_lianxian2_1_loop"
    end
    animation =
        SpineUtil.createSpineObj(
        com,
        {x = 0, y = 0},
        str,
        "Effect/UI",
        "efx_sijieleitaisai",
        "efx_sijieleitaisai",
        false
    )
    animation:setAnimation(0, str, true)
    return animation
end

function WorldChallengeModel:getWorldChallengeXiantiao(groupId, lineId, modeType)
    local model = modeType == 0 and self or WorldHighPvpModel;
    local isActive = model:isActiveIng()
    --在活动中
    if isActive == true then
        local map = model.WorldChallenInfo
        local stage = map.stage
        local xianArr, tagId = self:getXiantiaobyStage(stage)
        if table.indexof(xianArr, lineId) ~= false then
            if groupId == 0 and tagId == 0 then
                return true
            elseif groupId ~= 0 and tagId ~= 0 then
                return true
            end
        end
    end
    return false
    -- return true
end

function WorldChallengeModel:getXiantiaobyStage(stage)
    local xiantiaoArr = {}
    local tagId = 0
    if stage == GameDef.WorldArenaStageType.PromotionRound6 then
        xiantiaoArr = {"2_1", "2_2", "2_3", "2_4"}
        tagId = 1
    elseif stage == GameDef.WorldArenaStageType.PromotionRound5 then
        xiantiaoArr = {"1_1", "1_2", "1_3", "1_4"}
        tagId = 1
    elseif stage == GameDef.WorldArenaStageType.PromotionRound4 then
        xiantiaoArr = {"0_1"}
        tagId = 1
    elseif stage == GameDef.WorldArenaStageType.FinalRound3 then
        xiantiaoArr = {"2_1", "2_2", "2_3", "2_4"}
        tagId = 0
    elseif stage == GameDef.WorldArenaStageType.FinalRound2 then
        xiantiaoArr = {"1_1", "1_2", "1_3", "1_4"}
        tagId = 0
    elseif stage == GameDef.WorldArenaStageType.FinalRound1 then
        xiantiaoArr = {"0_1"}
        tagId = 0
    end
    return xiantiaoArr, tagId
end

function WorldChallengeModel:getXiantiaobyStageAnim(com, modeType)
    local model = modeType == 0 and self or WorldHighPvpModel
    local map = model.WorldChallenInfo
    local stage = map.stage
    local ani = false
    if stage == GameDef.WorldArenaStageType.PromotionRound6 or stage == GameDef.WorldArenaStageType.FinalRound3 then
        ani = self:getWorldChallengeXiantiaoAnim(com, 1)
    elseif stage == GameDef.WorldArenaStageType.PromotionRound5 or stage == GameDef.WorldArenaStageType.FinalRound2 then
        ani = self:getWorldChallengeXiantiaoAnim(com, 2)
    elseif stage == GameDef.WorldArenaStageType.PromotionRound4 or stage == GameDef.WorldArenaStageType.FinalRound1 then
        ani = self:getWorldChallengeXiantiaoAnim(com, 3)
    end
    return ani
end

-- End = 0,--结束阶段
-- 	Prepare = 1,--准备阶段可以竞猜和可以调整阵容
-- 	Wait = 2,--等待阶段可以竞猜不能调整阵容
-- 	Battle = 3,--战斗阶段不能竞猜和调整阵容
-- assignId                    1:integer       #跨服分组id
-- stage                       2:integer       #活动阶段
-- actState                    3:integer       #当前活动状态
-- nextBattleStamp             4:integer       #下一次战斗时间戳(如果活动状态是已结束或者是战斗状态, 则忽略吧)

-- promotionGroupInfo          5:*WorldArena_GroupInfo(groupId)    #晋级赛小组数据
-- finalsInfo                  6:WorldArena_MatchInfo              #决赛数据
-- battlePlayerInfo            7:*WorldArena_BattlePlayerInfo(playerId)    #对战玩家信息
-- guessInfo                   8:WorldArena_PlayerGuessInfo        #竞猜信息

-- #joinBattleInfo              *:WorldArena_JoinBattleInfo         #我的比赛信息
--ModelManager.PlayerModel.userid
function WorldChallengeModel:setWorldChallengeInfo(info)
    self.WorldChallenInfo = {}
    self.guessInfo = {}
    --printTable(150,"22222222222222",info.guessInfo)
    self.playerMap = {}
    self.joinBattleInfo = {}
    for key, value in pairs(info.battlePlayerInfo) do
        if value.playerId <= 0 then
            local configInfo = DynamicConfigData.t_ArenaRobot[math.abs(value.playerId)]
            if configInfo then
                value.name = configInfo.name
                value.level = configInfo.level
                value.head = configInfo.head
                local fightConf = DynamicConfigData.t_fight[configInfo.fightId];
                if (fightConf) then
                    value.combat = fightConf.monstercombat;
                else
                    value.combat=0
                end
            end
        end
    end
    self.playerMap = info.battlePlayerInfo
    self.guessInfo = info.guessInfo
    if (self.guessInfo.recordList) then
        local recordList = self.guessInfo.recordList
        if recordList and recordList[#recordList] and recordList[#recordList].record then
            if recordList[#recordList].record.isRead == false then
                self.guessIsRead = false;
            end
        end
    end
   --[[ self.guessInfo={
        guessInfo={
                guessInfo={
                        money=285120,
                        pos=1,
                        stage=5,
                        groupId=6,
                },
                playerInfo={
                        [1]={
                                playerId=-16,
                                support=0,
                                heroInfo={
                                        [22]={
                                                level=108,
                                                pos=22,
                                                code=35001,
                                                combat=6666,
                                                star=5,
                                        },
                                        [13]={
                                                level=103,
                                                pos=13,
                                                code=15001,
                                                combat=5333,
                                                star=5,
                                        },
                                        [12]={
                                                level=103,
                                                pos=12,
                                                code=44001,
                                                combat=5333,
                                                star=5,
                                        },
                                        [11]={
                                                level=103,
                                                pos=11,
                                                code=33001,
                                                combat=5333,
                                                star=5,
                                        },
                                        [23]={
                                                level=103,
                                                pos=23,
                                                code=44001,
                                                combat=5333,
                                                star=5,
                                        },
                                        [21]={
                                                level=103,
                                                pos=21,
                                                code=35002,
                                                combat=5333,
                                                star=5,
                                        },
                                },
                        },
                        [2]={
                                playerId=41054,
                                support=0,
                                heroInfo={
                                        [11]={
                                                level=11,
                                                pos=11,
                                                code=35006,
                                                combat=6048,
                                                star=4,
                                                stage=0,
                                        },
                                },
                        },
                },
        },
        recordList={
                [1]={
                        playerInfo={
                                [1]={
                                        playerId=-22,
                                        support=10000,
                                        heroInfo={
                                                [22]={
                                                        level=100,
                                                        pos=22,
                                                        code=44003,
                                                        combat=4606,
                                                        star=5,
                                                },
                                                [13]={
                                                        level=100,
                                                        pos=13,
                                                        code=44001,
                                                        combat=4606,
                                                        star=5,
                                                },
                                                [12]={
                                                        level=100,
                                                        pos=12,
                                                        code=44003,
                                                        combat=4606,
                                                        star=5,
                                                },
                                                [11]={
                                                        level=100,
                                                        pos=11,
                                                        code=45002,
                                                        combat=4606,
                                                        star=5,
                                                },
                                                [23]={
                                                        level=100,
                                                        pos=23,
                                                        code=44001,
                                                        combat=4606,
                                                        star=5,
                                                },
                                                [21]={
                                                        level=100,
                                                        pos=21,
                                                        code=44003,
                                                        combat=4606,
                                                        star=5,
                                                },
                                        },
                                },
                                [2]={
                                        playerId=-59,
                                        support=0,
                                        heroInfo={
                                                [22]={
                                                        level=68,
                                                        pos=22,
                                                        code=44001,
                                                        combat=1284,
                                                        star=5,
                                                },
                                                [13]={
                                                        level=68,
                                                        pos=13,
                                                        code=45002,
                                                        combat=1284,
                                                        star=5,
                                                },
                                                [12]={
                                                        level=68,
                                                        pos=12,
                                                        code=55001,
                                                        combat=1284,
                                                        star=5,
                                                },
                                                [11]={
                                                        level=71,
                                                        pos=11,
                                                        code=15002,
                                                        combat=1606,
                                                        star=5,
                                                },
                                                [23]={
                                                        level=68,
                                                        pos=23,
                                                        code=55005,
                                                        combat=1284,
                                                        star=5,
                                                },
                                                [21]={
                                                        level=68,
                                                        pos=21,
                                                        code=35001,
                                                        combat=1284,
                                                        star=5,
                                                },
                                        },
                                },
                        },
                        record={
                                pos=4,
                                stage=6,
                                groupId=6,
                                playerId=-22,
                                money=285120,
                                isRead=true,
                                result=1,
                        },
                },
        },
}]]
    printTable(155, "打印的竞猜理解士大夫士大夫", info.guessInfo)
    self.joinBattleInfo = info.joinBattleInfo or {}
    self:setHasMychallge()
    -- for key, value in pairs(info.battlePlayerInfo) do
    --    if value.playerId== then
    --      self.hasChange=true
    --    end
    -- end
    self.WorldChallenInfo["assignId"] = info.assignId
    self.WorldChallenInfo["stage"] = info.stage
    self.WorldChallenInfo["actState"] = info.actState
    self.WorldChallenInfo["nextBattleStamp"] = info.nextBattleStamp

    local promotionGroupInfo = info.promotionGroupInfo
    local finalsInfo = info.finalsInfo
    if promotionGroupInfo then
        for key, value in pairs(promotionGroupInfo) do
            local groupId = value.groupId
            local itemInfo = value.matchInfo
            for k1, v1 in pairs(itemInfo.playerInfo) do
                local v1key = self:getPoskey(100, groupId, v1.pos)
                self.WorldChallenInfo[v1key] = v1
            end
            if itemInfo.battleInfo then
                for k2, v2 in pairs(itemInfo.battleInfo) do
                    local stage = v2.stage
                    for k3, v3 in pairs(v2.battlePosInfoMap) do
                        local pos = v3.pos
                        local v3key = self:getPoskey(stage, groupId, pos)
                        if v3 and v3.winner and v3.winner ~= 0 then
                            v3["playerId"] = v3.winner
                            self.WorldChallenInfo[v3key] = v3
                        end
                    end
                end
            end
        end
    end

    if finalsInfo then
        local groupId = 0
        local itemInfo = finalsInfo
        for k1, v1 in pairs(itemInfo.playerInfo) do
            local v1key = self:getPoskey(100, groupId, v1.pos)
            self.WorldChallenInfo[v1key] = v1
        end
        for k2, v2 in pairs(itemInfo.battleInfo) do
            local stage = v2.stage
            for k3, v3 in pairs(v2.battlePosInfoMap) do
                local pos = v3.pos
                local v3key = self:getPoskey(stage, groupId, pos)
                if v3 and v3.winner and v3.winner ~= 0 then
                    v3["playerId"] = v3.winner
                    self.WorldChallenInfo[v3key] = v3
                end
            end
        end
    end
    local aaaaaaa = self.WorldChallenInfo
    printTable(31, "qqqqqqqqqqwerrrrrrrrrrrr", aaaaaaa)
end

function WorldChallengeModel:setHasMychallge()
    local has = false
    if next(self.joinBattleInfo) ~= nil then
        has = true
    end
    self.hasChange = has
end

function WorldChallengeModel:getPoskey(stage, groupId, pos)
    local itemKey = 3
    if stage == GameDef.WorldArenaStageType.PromotionRound6 then
        itemKey = 2
    elseif stage == GameDef.WorldArenaStageType.PromotionRound5 then
        itemKey = 1
    elseif stage == GameDef.WorldArenaStageType.PromotionRound4 then
        itemKey = 0
    elseif stage == GameDef.WorldArenaStageType.FinalRound3 then
        itemKey = 2
    elseif stage == GameDef.WorldArenaStageType.FinalRound2 then
        itemKey = 1
    elseif stage == GameDef.WorldArenaStageType.FinalRound1 then
        itemKey = 0
    end
    local key = groupId .. "_" .. itemKey .. "_" .. pos
    return key
end

function WorldChallengeModel:getPlayerItem(groupId, itemKey)
    local tag = 0 --0空白
    if not self.WorldChallenInfo then
        return tag
    end
    local arr = string.split(itemKey, "_")
    local key = tonumber(arr[1])
    local pos = tonumber(arr[2])
    local nextKey = self:getNextKey(key, pos)
    if itemKey == "2_4" then
        printTable(31, "qqqqqqqqqqwerrrrrrrrrrrr", arr)
    end
    local infoKey = groupId .. "_" .. itemKey
    local nextinfoKey = groupId .. "_" .. nextKey
    local itemInfo = self.WorldChallenInfo[infoKey]
    if not itemInfo then
        tag = 0
    else
        local nextArr1 = {"2_1", "1_1", "0_1"}
        local nextArr2 = {"2_2", "1_1", "0_1"}
        local nextArr3 = {"2_3", "1_2", "0_1"}
        local nextArr4 = {"2_4", "1_2", "0_1"}
        local winner = 0
        if table.indexof(nextArr1, nextKey) ~= false then
            local pos=table.indexof(nextArr1, nextKey)
            winner = self:getPlayerWiner(groupId, nextArr1,pos)
        elseif table.indexof(nextArr2, nextKey) ~= false then
            local pos=table.indexof(nextArr2, nextKey)
            winner = self:getPlayerWiner(groupId, nextArr2,pos)
        elseif table.indexof(nextArr3, nextKey) ~= false then
            local pos=table.indexof(nextArr3, nextKey)
            winner = self:getPlayerWiner(groupId, nextArr3,pos)
        elseif table.indexof(nextArr4, nextKey) ~= false then
            local pos=table.indexof(nextArr4, nextKey)
            winner = self:getPlayerWiner(groupId, nextArr4,pos)
        end
        if winner==0 then
            tag = 3
        elseif winner~=0 and itemInfo.playerId~=winner then
            tag = 2
        else
            tag = 3
        end
    end
    return tag
end

function WorldChallengeModel:getPlayerWiner(groupId, nextArr1,pos)
    local winner = 0
    for i = 1, #nextArr1, 1 do
        if i>=pos then
            local nextinfoKey = groupId .. "_" .. nextArr1[i]
            local nextInfo = self.WorldChallenInfo[nextinfoKey]
            if nextInfo then
                winner = nextInfo.winner
            end
        end
    end
    return winner
end

function WorldChallengeModel:getNextKey(key, pos)
    local nextSatge = key - 1
    local nextPos = 1
    nextPos = math.ceil(pos / 2)
    return nextSatge .. "_" .. nextPos
end

function WorldChallengeModel:getLineBarState(groupId, lineId)
    local arr = string.split(lineId, "_")
    local key = tonumber(arr[1])
    local pos = tonumber(arr[2])
    local oldKey = 1
    local oldPosshang = 1
    local oldPosXia = 2
    local isshuang = false
    local curKey = groupId .. "_" .. lineId
    if key == 2 then
        oldPosshang = pos * 2 - 1
        oldPosXia = pos * 2
        isshuang = true
    elseif key == 1 and pos >= 1 and pos <= 2 then
        oldPosshang = 1
        oldPosXia = 2
        curKey = groupId .. "_1_1"
    elseif key == 1 and pos >= 3 and pos <= 4 then
        oldPosshang = 3
        oldPosXia = 4
        curKey = groupId .. "_1_2"
    elseif key == 0 then
        oldPosshang = pos * 2 - 1
        oldPosXia = pos * 2
    end
    oldKey = key + 1
    local shangItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosshang
    local xiaItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosXia
    local curItem = self.WorldChallenInfo[curKey]
    if lineId == "1_2" then
    -- printTable(31, "111111111", curKey, shangItemkey, xiaItemkey, curItem)
    end
    local shangItem = self.WorldChallenInfo[shangItemkey]
    local xiaItem = self.WorldChallenInfo[xiaItemkey]
    if not curItem then
        return false
    end
    if isshuang and pos <= 2 then
        if curItem and shangItem and curItem.playerId == shangItem.playerId then
            return 1
        end
        if curItem and xiaItem and curItem.playerId == xiaItem.playerId then
            return 2
        end
    elseif isshuang and pos >= 2 and pos <= 4 then
        if curItem and shangItem and curItem.playerId == shangItem.playerId then
            return 2
        end
        if curItem and xiaItem and curItem.playerId == xiaItem.playerId then
            return 1
        end
    else
        if curItem and shangItem and curItem.playerId == shangItem.playerId and pos % 2 ~= 0 then
            return true
        end
        if curItem and xiaItem and curItem.playerId == xiaItem.playerId and pos % 2 == 0 then
            return true
        end
        if curItem and xiaItem and shangItem and key == 0 and pos == 1 then --最后一个
            return true
        end
    end
    return false
end

function WorldChallengeModel:getHasOpen()
    local isOpen = true
    if self.WorldChallenInfo.actState and self.WorldChallenInfo.actState == 4 then
        isOpen = false
    end
    return isOpen
end

function WorldChallengeModel:getPresentStageImgURL(stage) --# stage 比赛阶段  1决赛, 2 半决赛, 3 8强进4赛, 4 16强进8赛, 5 32强进16赛, 6 64强进32赛
    local stage = stage or self.WorldChallenInfo.stage
    local imgId = 32
    if stage == 6 then
        imgId = 32
    elseif stage == 5 then
        imgId = 16
    elseif stage == 4 then
        imgId = 8
    elseif stage == 3 then
        imgId = 4
    elseif stage == 2 then
        imgId = 2
    elseif stage == 1 then
        imgId = 1
    elseif stage == 0 then
        imgId = 1
    end
    return "UI/WorldChallenge/worldchallengeyisuzi" .. imgId .. ".png "
end

function WorldChallengeModel:getChallengeText(stage, id) --0晋级赛1冠军赛
    local num = 32
    if stage == 0 then
        if id >= 1 and id <= 8 then
            num = 64
        elseif id >= 9 and id <= 12 then
            num = 32
        elseif id >= 13 and id <= 14 then
            num = 16
        elseif id >= 15 then
            num = 8
        end
    else
        if id >= 1 and id <= 8 then
            num = 8
        elseif id >= 9 and id <= 12 then
            num = 4
        elseif id >= 13 and id <= 14 then
            num = 2
        elseif id >= 15 then
            return GMethodUtil.getSizeString(Desc.WorldChallenge_str9, 28)
        end
    end
    return GMethodUtil.getSizeString(num, 28) .. Desc.WorldChallenge_str10
end

-- function WorldChallengeModel:getChallengeIdex() --得到当前的分组
--     local index = self:getGuessinggroupId()
--     local indexTable = {}
--     index = math.min(6, math.max(1, index))
--     table.insert(indexTable, index)
--     table.insert(indexTable, index + 1)
--     table.insert(indexTable, index + 2)
--     return index, indexTable
-- end

function WorldChallengeModel:hasGuessingResult() --得到竞猜记录
    if not self.guessInfo then
        return false, nil
    end

    if not self.guessInfo.recordList then
        return false, nil
    end
    local recordList = self.guessInfo.recordList
    printTable(32, "111111111111111111111112222222222", recordList)
    if recordList and recordList[#recordList] and recordList[#recordList].record then
        printTable(32, "11111111111111111111113333333333", recordList[#recordList].record.isRead)
        if self.guessIsRead == false then
            return true, recordList[#recordList].record.result
        else
            return false, nil
        end
    end
    return false, nil
end

function WorldChallengeModel:hashuifangRecordId(itemKey) --得到录像id
    local itemPosKey = itemKey
    local has = false
    local recordId = 0
    local playerInfo = self.WorldChallenInfo[itemPosKey]
    --printTable(32,"战斗记录临时设施所所所所所所所所所所所所",itemKey,playerInfo)
    if playerInfo and playerInfo.battleResult and playerInfo.battleResult[1] and playerInfo.battleResult[1].recordId then
        has = true
        recordId = playerInfo.battleResult[1].recordId
    end
    return has, recordId
end

function WorldChallengeModel:hasGuessingRecord() --得到竞猜记录
    if not self.guessInfo then
        return false
    end

    if not self.guessInfo.recordList then
        return false
    end
    if not self.guessInfo.recordList[#self.guessInfo.recordList] then
        return false
    end
    local recordList = self.guessInfo.recordList[#self.guessInfo.recordList]
    return recordList
end

function WorldChallengeModel:getshangGuessingRecordId() --上一场竞猜战斗记录id
    if not self.guessInfo then
        return false
    end

    if not self.guessInfo.recordList then
        return false
    end
    if not self.guessInfo.recordList[#self.guessInfo.recordList] then
        return false
    end
    local recordList = self.guessInfo.recordList[#self.guessInfo.recordList]
    local guessInfo1 = recordList.record
    local pos = guessInfo1.pos
    local groupId = guessInfo1.groupId
    local stage = guessInfo1.stage
    local PlayerInfoKey = self:getPoskey(stage, groupId, pos)
    local has, recordId = self:hashuifangRecordId(PlayerInfoKey)
    if has then
        return recordId
    end
    return false
end

--获取竞猜战斗记录
function WorldChallengeModel:getGuessingRecordId(guessRecordInfo) --竞猜战斗记录id
	local guessInfo1 = guessRecordInfo
    local pos = guessInfo1.pos
    local groupId = guessInfo1.groupId
    local stage = guessInfo1.stage
	local PlayerInfoKey = self:getPoskey(stage, groupId, pos)
    local has, recordId = self:hashuifangRecordId(PlayerInfoKey)
	return has,recordId
end

function WorldChallengeModel:getGuessinggroupId() --得到竞猜分组
    local groupId = 0
    if self.guessInfo and self.guessInfo.guessInfo and self.guessInfo.guessInfo.guessInfo then
        groupId = self.guessInfo.guessInfo.guessInfo.groupId
    end
    return groupId
end

function WorldChallengeModel:getGuessinggroupPos(clientGroupId, i) --得到竞猜玩家位置
    local pos = 0
    --printTable(31,"sssssssssssssssssssssss",self.guessInfo)
    if self.guessInfo and self.guessInfo.guessInfo and self.guessInfo.guessInfo.guessInfo then
        local jingcaiinfo = self.guessInfo.guessInfo.guessInfo
        --后端这命名是真的服了字段名权全一样
        local stage = jingcaiinfo.stage
        local groupId = jingcaiinfo.groupId
        local serverPos = jingcaiinfo.pos
        if clientGroupId == groupId then
            local itemKey = 3
            if stage == GameDef.WorldArenaStageType.PromotionRound6 then
                itemKey = 2
            elseif stage == GameDef.WorldArenaStageType.PromotionRound5 then
                itemKey = 1
            elseif stage == GameDef.WorldArenaStageType.PromotionRound4 then
                itemKey = 0
            elseif stage == GameDef.WorldArenaStageType.FinalRound3 then
                itemKey = 2
            elseif stage == GameDef.WorldArenaStageType.FinalRound2 then
                itemKey = 1
            elseif stage == GameDef.WorldArenaStageType.FinalRound1 then
                itemKey = 0
            end
            local oldKey = 1
            local oldPosshang = 1
            local oldPosXia = 2
            oldKey = itemKey + 1
            oldPosshang = serverPos * 2 - 1
            oldPosXia = serverPos * 2
            local curKey = groupId .. "_" .. itemKey .. "_" .. serverPos
            local shangItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosshang
            local xiaItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosXia
            local curItem = self.WorldChallenInfo[curKey]
            local shangItem = self.WorldChallenInfo[shangItemkey]
            local xiaItem = self.WorldChallenInfo[xiaItemkey]
            local jingcaiId = self:getGuessingPlayer()
            if shangItem and jingcaiId == shangItem.playerId then
                pos = oldKey .. "_" .. oldPosshang
            end
            if xiaItem and jingcaiId == xiaItem.playerId then
                pos = oldKey .. "_" .. oldPosXia
            end
            -- if i == 1 then
            --     printTable(
            --         32,
            --         "111111111222222",
            --         stage,
            --         groupId,
            --         serverPos,
            --         clientGroupId,
            --         curKey,
            --         shangItemkey,
            --         xiaItemkey,
            --         jingcaiId,
            --         shangItem,
            --         xiaItem,
            --         pos
            --     )
            -- end
        end
    end
    -- printTable(31,"打印的试生产陈士大夫11111111111111111",pos)
    return pos
end

function WorldChallengeModel:getGuessingPlayer() --得到竞猜玩家id
    local playerId = 0
    if self.guessInfo and self.guessInfo.guessInfo and self.guessInfo.guessInfo.guessInfo then
        playerId = self.guessInfo.guessInfo.guessInfo.playerId
    end
    return playerId
end

function WorldChallengeModel:getGuessingTwoPlayer() --得到竞猜2个玩家
    return self.guessInfo.guessInfo.playerInfo
end

function WorldChallengeModel:getGuessing() --得到竞猜信息
    return self.guessInfo.guessInfo
end

function WorldChallengeModel:getCanGuessing() --0活动没开无法竞猜，1活动开了可以竞猜，2活动开了但已经在比赛中无法竞猜
    local can = 0
    local isActive = self:isActiveIng()
    local canGuess = self:isCanGuessIng()
    if isActive == false or not self.guessInfo.guessInfo then
        can = 0
    elseif isActive == true and canGuess == true then
        can = 1
    elseif isActive == true and canGuess == false then
        can = 2
    end
    return can
end

function WorldChallengeModel:isActiveIng() --在活动中
    local map = self.WorldChallenInfo
    if not map or not map.stage then
        return false
    end
    if map.stage and map.stage ~= GameDef.WorldArenaStageType.End or map.stage ~= GameDef.WorldArenaStageType.Closed then
        return true
    end
    return false
end

function WorldChallengeModel:isCanBattleArray() --在比赛中可换阵容
    local isActive = self:isActiveIng()
    local map = self.WorldChallenInfo
    if not map or not map.actState then
        return false
    end
    if isActive and map and map.actState and map.actState == GameDef.WorldArenaActStateType.Prepare then
        return true
    end
    return false
end

function WorldChallengeModel:isCanGuessIng() --在比赛中可竞猜
    local isActive = self:isActiveIng()
    local map = self.WorldChallenInfo
    if not map or not map.actState then
        return false
    end
    if
        isActive and map and map.actState and map.actState == GameDef.WorldArenaActStateType.Prepare or
            map.actState == GameDef.WorldArenaActStateType.Wait
     then
        return true
    end
    return false
end

function WorldChallengeModel:getcanChange() --自己是否参赛
    return self.hasChange
end

function WorldChallengeModel:getOpponentInfo() --擂台赛对手数据
    local temp = {}
    if self.joinBattleInfo and self.joinBattleInfo.enemyInfo and self.joinBattleInfo.enemyInfo.playerInfo then
        temp = self.joinBattleInfo.enemyInfo.playerInfo
        temp["heroInfo"] = self.joinBattleInfo.enemyInfo.heroInfo
    end
    return temp
end

function WorldChallengeModel:getMyopponentId() --擂台赛对手id
    local id = 0
    if self.joinBattleInfo and self.joinBattleInfo.enemyInfo and self.joinBattleInfo.enemyInfo.playerInfo then
        id = self.joinBattleInfo.enemyInfo.playerInfo.playerId
    end
    return id
end

function WorldChallengeModel:isOpenGuanjunSai()
    local map = self.WorldChallenInfo
    if not map or not map.stage then
        return false
    end
    if
        map.stage and map.stage ~= GameDef.WorldArenaStageType.PromotionRound6 and
            map.stage ~= GameDef.WorldArenaStageType.PromotionRound5 and
            map.stage ~= GameDef.WorldArenaStageType.PromotionRound4
     then
        return true
    end
    return false
end

--#获取跨服分组活动信息
function WorldChallengeModel:getWorldChallengeInfo()
    local function success(data)
        printTable(32, "获取跨服分组活动信息返回", data)
        if data and data.unitInfo then
            self:setWorldChallengeInfo(data.unitInfo)
        else
            self.WorldChallenInfo = {}
            self.guessInfo = {}
            self.playerMap = {}
            self.joinBattleInfo = {}
            printTable(150, "22222222222222", self.guessInfo)
        end
        Dispatcher.dispatchEvent(EventType.worldChallenge_daojishishuaxing)
    end
    local info = {}
    printTable(32, "获取跨服分组活动信息", info)
    RPCReq.WorldArena_GetUnitInfo(info, success)
end

--#竞猜请求
function WorldChallengeModel:GuessReq(stage, groupId, pos, supportId)
    local function success(data)
        printTable(31, "竞猜请求返回", data)
        if data.guessInfo then
            if not self.guessInfo.guessInfo then
                self.guessInfo.guessInfo = {}
            end
            self.guessInfo.guessInfo = data.guessInfo
        end
        self.WorldChallenJingCaiRed = false;
        RedManager.updateValue("V_WORLDCHALLENG_JINCAI", false)
        Dispatcher.dispatchEvent(EventType.worldChallenge_dianjijincai)
    end
    local info = {
        stage = stage, --1:integer
        groupId = groupId, --2:integer   #分组id
        pos = pos, --3:integer   #战斗编号
        supportId = supportId --4:integer   #投票的玩家id
    }
    printTable(16, "竞猜请求信息", info)
    RPCReq.WorldArena_GuessReq(info, success)
end

--#查看战斗记录
function WorldChallengeModel:seeCombatlog(recordId, gamePlayType)
    local function success(data)
        printTable(12, "查看战斗记录返回", data)
        --Dispatcher.dispatchEvent(EventType.cardView_activeSkillSuc,data);
    end
    local info = {
        recordId = recordId, --1:string			#战斗记录id
        gamePlayType = gamePlayType --2:integer			#玩法类型,某些特定玩法需要提供
    }
    printTable(12, "查看战斗记录", info)
	BattleModel:requestBattleRecord(recordId,nil,gamePlayType)
end

--#查看名人堂
function WorldChallengeModel:seeHalloffame()
    local function success(data)
        printTable(28, "查看名人堂返回", data)
        if data and data.honourInfo then
            self.HonourInfo = data.honourInfo
        end
        Dispatcher.dispatchEvent(EventType.worldChallenge_HonourInfoupdateInfo)
    end
    local info = {}
    printTable(13, "查看名人堂", info)
    RPCReq.WorldArena_GetHonourInfo(info, success)
end

--#获取当前分组指定玩家战斗阵容信息
function WorldChallengeModel:getBattlePlayerInfo(playerId)
    local function success(data)
        if data and data.playerInfo then
            self.joinBattleInfo["enemyInfo"] = data.playerInfo
        end
        -- if playerId>=0 then
        --     if data and data.playerInfo then
        --         self.joinBattleInfo["enemyInfo"] = data.playerInfo
        --     end
        -- else
        --     local arr=self:getAIEnemyInfos(playerId)
        -- end
        printTable(32, "获取当前分组指定玩家战斗阵容信息", data)
        Dispatcher.dispatchEvent(EventType.worldChallenge_dianjiwodebisaixiugaizhenrong)
    end
    local params = {
        playerId = playerId --1:integer       #玩家id
    }
    RPCReq.WorldArena_GetBattlePlayerInfo(params, success)
end

function WorldChallengeModel:getAIEnemyInfos(playerId)
	local data = CrossPVPModel:getRobotInfo(math.abs(playerId),DynamicConfigData.t_ArenaRobot)
	return data.arrayInfo
end

--#获取当前竞猜对阵玩家阵容信息
function WorldChallengeModel:GetGuessInfo()
    local function success(data)
        printTable(150, "获取当前竞猜对阵玩家阵容信息", data)
        if data.guessInfo then
            if not self.guessInfo.guessInfo then
                self.guessInfo.guessInfo = {}
            end
            self.guessInfo.guessInfo = data.guessInfo
        end
        Dispatcher.dispatchEvent(EventType.worldChallenge_dianjijincai)
    end
    local params = {}
    RPCReq.WorldArena_GetGuessInfo(params, success)
end

--#获取当前竞猜对阵玩家阵容信息
function WorldChallengeModel:setBattleArrayState()
    local function success(data)
    end
    local params = {}
    RPCReq.WorldArena_SetBattleArrayState(params, success)
end


-- 把我的比赛的敌人信息转化成战斗上阵用的数据结构
function WorldChallengeModel:getGuessEnemyInfoToBattle(enemyArr,type)
        local array =enemyArr
        local combat = 0;
        local heroInfos = {}
        if (array.heroInfo) then
            for _, info in pairs(array.heroInfo) do
                local d = {
                    code = info.code,
                    combat = info.combat,
                    id = info.pos,
                    level = info.level,
                    star = info.star,
                    type = 2
                }
                combat = combat + d.combat
                table.insert(heroInfos, d)
            end
            return {
                combat = combat,
                heroInfos = heroInfos
            }
        end
    return false
end


-- --#查看排行榜
-- function WorldChallengeModel:seeRank()
-- 	local function success(data)
-- 		printTable(13,"查看排行榜记录返回",data)
-- 		--Dispatcher.dispatchEvent(EventType.cardView_activeSkillSuc,data);
-- 	end
-- 	local params = {}
--     params.rankType =GameDef.RankType.WorldArenaPlayerScore
--     RPCReq.Rank_GetRankData(params,success)
-- end

function WorldChallengeModel:getModelByType(modeType)
    modeType = modeType == nil and self.matchMode or modeType
    if (modeType == 1) then
        return WorldHighPvpModel
    else
        return self
    end
end

return WorldChallengeModel
