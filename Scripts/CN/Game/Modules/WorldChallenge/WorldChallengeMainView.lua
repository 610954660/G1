--Name : WorldChallengeMainView.lua
--Author : generated by FairyGUI
--Date : 2020-5-22
--Desc : 擂台赛主界面

local WorldChallengeMainView, Super = class("WorldChallengeMainView", Window)

function WorldChallengeMainView:ctor()
    --LuaLog("WorldChallengeMainView ctor")
    self._packName = "WorldChallenge"
    self._compName = "WorldChallengeMainView"
    self._rootDepth = LayerDepth.Window
    self.curGroupId = 1
    self.annimation = false
    self.calltimer = false
    self.touchBtn = false
    self._updateTimeId = false
    self.addTag = 1
    self.addNum = 1
    self.addMap = {}
    self.shouzhiAnima = {}
    self.xiantiaoAnima = {}
    self.mode = WorldChallengeModel.matchMode
end

function WorldChallengeMainView:_initEvent()
end

function WorldChallengeMainView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:WorldChallenge.WorldChallengeMainView
    vmRoot.btn_choose1 = viewNode:getChildAutoType("$btn_choose1")
    --component
    vmRoot.btn_quiz = viewNode:getChildAutoType("$btn_quiz")
    --component
    vmRoot.btn_choose2 = viewNode:getChildAutoType("$btn_choose2")
    --component
    vmRoot.heroCell3 = viewNode:getChildAutoType("$heroCell3")
    --component
    vmRoot.heroCell5 = viewNode:getChildAutoType("$heroCell5")
    --component
    vmRoot.heroCell10 = viewNode:getChildAutoType("$heroCell10")
    --component
    vmRoot.heroCell1 = viewNode:getChildAutoType("$heroCell1")
    --component
    vmRoot.heroCell6 = viewNode:getChildAutoType("$heroCell6")
    --component
    vmRoot.heroCell9 = viewNode:getChildAutoType("$heroCell9")
    --component
    vmRoot.heroCell7 = viewNode:getChildAutoType("$heroCell7")
    --component
    vmRoot.heroCell13 = viewNode:getChildAutoType("$heroCell13")
    --component
    vmRoot.heroCell15 = viewNode:getChildAutoType("$heroCell15")
    --component
    vmRoot.bar_6 = viewNode:getChildAutoType("$bar_6")
    --component
    vmRoot.btn_championship = viewNode:getChildAutoType("$btn_championship")
    --component
    vmRoot.bar_3 = viewNode:getChildAutoType("$bar_3")
    --component
    vmRoot.bar_1 = viewNode:getChildAutoType("$bar_1")
    --component
    vmRoot.btn_left = viewNode:getChildAutoType("$btn_left")
    --component
    vmRoot.heroCell8 = viewNode:getChildAutoType("$heroCell8")
    --component
    vmRoot.bar_4 = viewNode:getChildAutoType("$bar_4")
    --component
    vmRoot.btn_second = viewNode:getChildAutoType("$btn_second")
    --component
    vmRoot.btn_choose3 = viewNode:getChildAutoType("$btn_choose3")
    --component
    vmRoot.btn_mymatch = viewNode:getChildAutoType("$btn_mymatch")
    --component
    vmRoot.bar_9 = viewNode:getChildAutoType("$bar_9")
    --component
    vmRoot.btn_halloffame = viewNode:getChildAutoType("$btn_halloffame")
    --component
    vmRoot.bar_5 = viewNode:getChildAutoType("$bar_5")
    --component
    vmRoot.heroCell2 = viewNode:getChildAutoType("$heroCell2")
    --component
    vmRoot.bar_7 = viewNode:getChildAutoType("$bar_7")
    --component
    vmRoot.img_stageNum = viewNode:getChildAutoType("$img_stageNum")
    --loader
    vmRoot.bar_2 = viewNode:getChildAutoType("$bar_2")
    --component
    vmRoot.heroCell12 = viewNode:getChildAutoType("$heroCell12")
    --component
    vmRoot.heroCell11 = viewNode:getChildAutoType("$heroCell11")
    --component
    vmRoot.btn_right = viewNode:getChildAutoType("$btn_right")
    --component
    vmRoot.countdown = viewNode:getChildAutoType("$countdown")
    --text
    vmRoot.heroCell14 = viewNode:getChildAutoType("$heroCell14")
    --component
    vmRoot.heroCell4 = viewNode:getChildAutoType("$heroCell4")
    --component
    vmRoot.bar_8 = viewNode:getChildAutoType("$bar_8")
    --component
    --{vmFieldsEnd}:WorldChallenge.WorldChallengeMainView
    --Do not modify above code-------------
end

function WorldChallengeMainView:_addRed()
    -- RedManager.register(
    --     "V_WORLDCHALLENG_JINCAI",
    --     self.btn_quiz:getChildAutoType("img_red"),
    --     ModuleId.WorldChallengeMainView.id
    -- )
    -- local x = RedManager.getTips("V_WORLDCHALLENG_JINCAI")
    
    -- RedManager.register(
    --     "V_WORLDCHALLENG_MYCHALL",
    --     self.btn_mymatch:getChildAutoType("img_red"),
    --     ModuleId.WorldChallengeMainView.id
    -- )
end

function WorldChallengeMainView:_initUI()
    local root = self
    local rootView = self.view
    root.btn_arrow = rootView:getChildAutoType("btn_arrow") -- 模式切换按钮
    root.txt_mode = rootView:getChildAutoType("txt_mode") -- 模式标题
    root.txt_mode:setText(Desc["WorldChallenge_mode"..self.mode])
    local ctrl = self.view:getController("arrowCtrl")
    ctrl:setSelectedIndex(1 - self.mode)
    self.flag_loader = self.view:getChildAutoType("flag_loader");
    self:_initVM()
    self.c1 = self.view:getController("c1")
    self:showBtn()
    self:upWorldViewInfo()
end

function WorldChallengeMainView:upWorldViewInfo()
    local model = WorldChallengeModel:getModelByType(self.mode)
    self:setBg(string.format("worldchallengeMian%d.png", self.mode))
    self.flag_loader:setIcon(string.format("UI/WorldChallenge/flag%s.png", self.mode))
    local countdown = model.WorldChallenInfo.nextBattleStamp or 0
    self:showCountDown(self.countdown, countdown)
    local isOpenBtn = model:isOpenGuanjunSai()
    self.btn_championship:setGrayed(not isOpenBtn)
    if isOpenBtn == false then
        self.btn_second:setSelected(true)
        self.btn_championship:setSelected(false)
        if model:getHasOpen() == false then --参赛人数不足
            self:showView(0, 2, 1)
        else
            self:showView(0, 0, self.curGroupId)
            self:showBtn()
        end
    else
        self.btn_second:setSelected(false)
        self.btn_championship:setSelected(true)
        -- local isOpenBtn = WorldChallengeModel:isOpenGuanjunSai()
        -- if isOpenBtn == true then
        if model:getHasOpen() == false then --参赛人数不足
            self:showView(1, 2, 0)
        else
            self:showView(1, 1, 0)
        end
        -- else
        --     RollTips.show(Desc.WorldChallenge_str1)
        -- end
    end
    if model:getcanChange() == true then
        self.btn_mymatch:setVisible(true)
    else
        self.btn_mymatch:setVisible(false)
    end

    -- if (self.mode == WorldChallengeModel.matchMode) then
    --     self.btn_quiz:setVisible(true)
    -- else
    --     self.btn_quiz:setVisible(false)
    -- end

    local img_red = self.btn_mymatch:getChildAutoType("img_red")
    img_red:setVisible(model.hasChageRed)
    local img_red2 = self.btn_quiz:getChildAutoType("img_red")
    img_red2:setVisible(model.WorldChallenJingCaiRed)
end

function WorldChallengeMainView:getBtnNum(type) --0减1加
    local flag = type == 0 and -1 or 1
    local curSelected = self:limitBtnNum(self.curGroupId + flag)
    self.curGroupId = curSelected
    if (not TableUtil.Exist(self.addMap, curSelected)) then
        local next1 = self:limitBtnNum(curSelected - flag)
        local next2 = self:limitBtnNum(curSelected - 2 * flag)
        if (type == 0) then
            self.addMap = {curSelected, next1, next2}
        else
            self.addMap = {next2, next1, curSelected}
        end
    end
    self:showBtn()

    -- self.addMap = {}
    -- local flag = type == 0 and -1 or 1
    -- local tag = self.addTag + 3 * flag
    -- tag = math.min(6, math.max(1, tag))
    -- for i = 0, 2 do
    --     table.insert(self.addMap, tag + i)
    -- end
    -- self.addTag = tag;
    -- self:showBtn()
end

function WorldChallengeMainView:limitBtnNum(num)
    local result = (num + 8) % 8
    return result == 0 and 8 or result
end


-- 小组赛切换按钮
function WorldChallengeMainView:showBtn()
    local model = WorldChallengeModel:getModelByType(self.mode)
    local guessId = model:getGuessinggroupId()
    if #self.addMap == 0 then
        local index = math.min(6, math.max(1, guessId))
        self.addTag = index
        self.curGroupId = math.min(8, math.max(1, guessId))
        -- self.addMap = {index, index + 1, index + 2}
        local next1 = self:limitBtnNum(self.curGroupId - 1)
        local next2 = self:limitBtnNum(self.curGroupId + 1)
        self.addMap = {next1, self.curGroupId, next2}
    end
    local seleInfo = self.curGroupId
    for i = 1, 3, 1 do
        local num = self.addMap[i]
        local key = "$btn_choose" .. i
        local btnItem = self.view:getChildAutoType(key)
        local c1 = btnItem:getController("c1")
        if num == guessId then
            c1:setSelectedIndex(1)
        else
            c1:setSelectedIndex(0)
        end
        if num == seleInfo then
            btnItem:setSelected(true)
            self.touchBtn = btnItem
            self:showView(0, 0, num)
        else
            btnItem:setSelected(false)
        end
        if num == nil then
            num = 1
        end
        btnItem:setTitle(string.format(Desc.WorldChallenge_str8, num))
        btnItem:removeClickListener(100)
        btnItem:addClickListener(
            function(context)
                if self.touchBtn then
                    self.touchBtn:setSelected(false)
                end
                btnItem:setSelected(true)
                self.touchBtn = btnItem
                self.curGroupId = num
                self:showView(0, 0, num)
            end,
            100
        )
    end
end

function WorldChallengeMainView:showView(state, seleIndex, groupId) --state=0晋级赛1冠军赛，seleIndex控制器id
    local model = WorldChallengeModel:getModelByType(self.mode)
    self.c1:setSelectedIndex(seleIndex)
    local stage = model.WorldChallenInfo.stage
    local stageStr = WorldChallengeModel:getPresentStageImgURL(stage)
    self.img_stageNum:setURL(stageStr)
    local ItemPosNum = WorldChallengeModel.ItemPos
    for i = 1, #ItemPosNum, 1 do
        local posKey = ItemPosNum[i]
        local key = "$heroCell" .. posKey
        local PlayerInfoKey = groupId .. "_" .. posKey
        local playerInfo = model.WorldChallenInfo[PlayerInfoKey]
        local item = self.view:getChildAutoType(key)
        local c1 = item:getController("c1")
        local c2 = item:getController("c2")
        local c3 = item:getController("c3")
        local txt_num = item:getChildAutoType("txt_num")
        local img_shouzhiani = item:getChildAutoType("img_shouzhiani")
        local itemPos = model:getGuessinggroupPos(groupId, i)
        local jingcaiwanjiaId = model:getGuessingPlayer()
        -- 竞猜手指
        if playerInfo and jingcaiwanjiaId ~= 0 and playerInfo.playerId == jingcaiwanjiaId and posKey == itemPos then
            c3:setSelectedIndex(1)
            if not self.shouzhiAnima[PlayerInfoKey] then
                self.shouzhiAnima[PlayerInfoKey] = WorldChallengeModel:getWorldChallengeShouzhiAnim(img_shouzhiani)
            end
        else
            c3:setSelectedIndex(0)
            if self.shouzhiAnima[PlayerInfoKey] then
                SpineUtil.clearEffect(self.shouzhiAnima[PlayerInfoKey])
            end
        end
        local playerHead = item:getChildAutoType("heroCell")
        if playerInfo == nil then --没有参赛人员显示几强
            c1:setSelectedIndex(0)
            c2:setSelectedIndex(0)
            local desc = WorldChallengeModel:getChallengeText(state, i)
            txt_num:setText(desc)
            playerHead:setGrayed(false)
        else
            local allplayerInfo = model.playerMap[playerInfo.playerId]
            local itemStateSele = model:getPlayerItem(groupId, posKey)
            c1:setSelectedIndex(itemStateSele)
            --差个竞猜玩家标志{}
            local heroItem = BindManager.bindPlayerCell(playerHead)
            if playerInfo.playerId < 0 then
                local RobotConfig = false
                if (self.mode == 1) then
                    RobotConfig = DynamicConfigData.t_HPvPRobot[playerInfo.playerId]
                else
                    RobotConfig = DynamicConfigData.t_ArenaRobot[math.abs(playerInfo.playerId)]
                end
                if RobotConfig then
                    heroItem:setHead(RobotConfig.head, RobotConfig.level, nil, nil, RobotConfig.headBorder)
                    local txt_playername = item:getChildAutoType("txt_playername")
                    txt_playername:setText(RobotConfig.name)
                end
            else
                if allplayerInfo and allplayerInfo.head and allplayerInfo.level then
                    heroItem:setHead(allplayerInfo.head, allplayerInfo.level, nil, nil, allplayerInfo.headBorder)
                    local txt_playername = item:getChildAutoType("txt_playername")
                    txt_playername:setText(allplayerInfo.name)
                end
            end
            if itemStateSele==2 then
                --heroItem:setGrayeded(1)
                playerHead:setGrayed(false)
                playerHead:setGrayed(true)
            else
                playerHead:setGrayed(false)
               -- playerHead:setGrayed(false)
            end
            playerHead:removeClickListener(100)
            playerHead:addClickListener(
                function(context)
                    local playId = allplayerInfo.playerId
                    local serverId = allplayerInfo.serverId
                    if (self.mode == 1) then
                        allplayerInfo.fromView = "worldChallenge"
                        ViewManager.open("HigherPvPPlayerInfoView", allplayerInfo)
                    else
                        ViewManager.open(
                            "ViewPlayerView",
                            {playerId = playId, serverId = serverId, arrayType = GameDef.BattleArrayType.WorldArena}
                        )
                    end
                end,
                100
            )
            --战斗记录
            local has, recordId = model:hashuifangRecordId(PlayerInfoKey)
            if has then
                c2:setSelectedIndex(1)
            else
                c2:setSelectedIndex(0)
            end
            local btn_video = item:getChildAutoType("$btn_video")
            btn_video:removeClickListener(100)
            btn_video:addClickListener(
                function(context)
                    local info = false
                    if (self.mode == 1) then
                        info = PlayerInfoKey
                    else
                        info = 4001
                    end
                    model:seeCombatlog(recordId, info)
                end,
                100
            )
        end
    end
    self:showLine(state, groupId)
end

function WorldChallengeMainView:showLine(state, groupId)
    local model = WorldChallengeModel:getModelByType(self.mode)
    local lineNum = WorldChallengeModel.LinePos
    for lineId = 1, #lineNum, 1 do
        local tiaoKey = lineNum[lineId]
        if (tiaoKey == "1_3") then
            local x = 0;
        end
        local lineKey = "$bar" .. tiaoKey
        local barItem = self.view:getChildAutoType(lineKey)
        local img = barItem:getChildAutoType("bar")
        local isShowAnim = WorldChallengeModel:getWorldChallengeXiantiao(groupId, tiaoKey, self.mode)
        local img_ani = self.view:getChildAutoType("img_ani" .. tiaoKey)
        if isShowAnim == true then
            if not self.xiantiaoAnima[tiaoKey] then
                self.xiantiaoAnima[tiaoKey] = self:getXiantiaoAnim(tiaoKey, img_ani)
            end
        else
            if self.xiantiaoAnima[tiaoKey] then
                SpineUtil.clearEffect(self.xiantiaoAnima[tiaoKey])
                self.xiantiaoAnima[tiaoKey] = false
            end
        end
        barItem:setMin(0)
        barItem:setMax(100)
        local isLine = model:getLineBarState(groupId, tiaoKey)
        if lineId == 4 then
            printTable(31, "打印的进度条", isLine, tiaoKey)
        end
        if isLine == 1 then
            img:setFillOrigin(0)
            barItem:setValue(54)
        elseif isLine == 2 then
            img:setFillOrigin(1)
            barItem:setValue(50)
        elseif isLine == true then
            barItem:setValue(100)
        elseif isLine == false then
            barItem:setValue(0)
        end
    end
end

function WorldChallengeMainView:getXiantiaoAnim(lineId, barImg)
    -- local model = WorldChallengeModel:getModelByType(self.mode)
    local ani = WorldChallengeModel:getXiantiaobyStageAnim(barImg, self.mode)
    if ani ~= false then
        local arr = string.split(lineId, "_")
        local key = tonumber(arr[1])
        local pos = tonumber(arr[2])
        if key == 2 and (pos == 3 or pos == 4) then
            ani:setScaleX(-1)
        elseif key == 1 and pos == 3 then
            ani:setScaleX(-1)
        elseif key == 1 and pos == 2 then
            ani:setScaleY(-1)
        elseif key == 1 and pos == 4 then
            ani:setScaleX(-1)
            ani:setScaleY(-1)

        end
    end
    return ani
end

function WorldChallengeMainView:showCountDown(txt_countdown, serverTime)
    local model = WorldChallengeModel:getModelByType(self.mode)
    local stage = model.WorldChallenInfo.stage
    local actState = model.WorldChallenInfo.actState
    printTable(28, "打印的倒计时.........1", stage, actState)
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
        self.calltimer = false
    end
    if stage == GameDef.WorldArenaStageType.End or stage == GameDef.WorldArenaStageType.Closed then
        txt_countdown:setText(Desc.WorldChallenge_countTitle4)
        return
    end
    if actState == GameDef.WorldArenaActStateType.Battle then
        txt_countdown:setText(Desc.WorldChallenge_countTitle5)
        return
    end
    local curServerTime = ServerTimeModel:getServerTime()
    local addtime = serverTime - curServerTime
    if addtime > 0 then
        txt_countdown:setText(TimeLib.formatTime(addtime, true))
        local function onCountDown(time)
            txt_countdown:setText(TimeLib.formatTime(time, true))
        end
        local function onEnd(...)
            txt_countdown:setText(Desc.WorldChallenge_countTitle4)
            self._updateTimeId =
                Scheduler.scheduleOnce(
                5.0,
                function()
                    local model = WorldChallengeModel:getModelByType(self.mode)
                    self._updateTimeId = false
                    printTable(32, "打印的掉阿斯顿发的说法是》》》》》》》》》1")
                    model:getWorldChallengeInfo()
                end
            )
        end
        if self.calltimer then
            TimeLib.clearCountDown(self.calltimer)
            self.calltimer = false
        end
        self.calltimer = TimeLib.newCountDown(addtime, onCountDown, onEnd, false, false, false)
    else
        txt_countdown:setText(Desc.WorldChallenge_countTitle4)
    end
    printTable(28, "打印的倒计时.........", stage, actState, addtime)
end

function WorldChallengeMainView:showguessView() --显示竞猜结果界面
    local model = WorldChallengeModel:getModelByType(self.mode)
    local hasOpen, win = model:hasGuessingResult()
    model.guessIsRead = true
    printTable(32, "显示竞猜结果界面>>>>>>>>>>", hasOpen, win)
    if hasOpen == true then
        self.annimation =
            Scheduler.scheduleOnce(
            0.5,
            function()
                self.annimation = false
                if win == 1 then
                    --竞猜成功
                    ViewManager.open("WorldChallengeQuizView", {quiz = 3, mode = self.mode})
                else
                    --竞猜失败
                    ViewManager.open("WorldChallengeQuizView", {quiz = 4, mode = self.mode})
                end
            end
        )
    -- Scheduler.unschedule(self.annimation)
    -- self.annimation =
    --     Scheduler.schedule(
    --     function()

    --     end,
    --     1.5,
    --     1
    -- )
    end
end

function WorldChallengeMainView:_initEvent()
    self.btn_mymatch:addClickListener(
        function(context) --我的比赛
            local model = WorldChallengeModel:getModelByType(self.mode)
            model:setBattleArrayState()
            RedManager.updateValue("V_WORLDCHALLENG_MYCHALL", false)
            local id = model:getMyopponentId()
            if id ~= 0 then
                model:getBattlePlayerInfo(id)
            end
            if model:getcanChange() == true then
                ViewManager.open("WorldChallengeQuizView", {quiz = 2, mode = self.mode})
                model.hasChageRed = false
                self:upWorldViewInfo()
            else
                RollTips.show(Desc.WorldChallenge_str2)
            end
        end
    )

    self.btn_quiz:addClickListener(
        function(context) --竞猜按钮
            local model = WorldChallengeModel:getModelByType(self.mode)
            local type = model:getCanGuessing()
            if type == 0 then
                RollTips.show(Desc.WorldChallenge_str3)
            elseif type == 1 then
                ViewManager.open("WorldChallengeQuizView", {quiz = 0, mode = self.mode})
            elseif type == 2 then
                RollTips.show(Desc.WorldChallenge_str4)
            end
        end
    )

    self.btn_halloffame:addClickListener(
        function(context) --名人堂
            ViewManager.open("WorldChallengeHallPlayerView", {mode = self.mode})
        end
    )

    self.btn_left:addClickListener(
        function(context) --减
            self:getBtnNum(0)
            --0减1加
        end
    )

    self.btn_right:addClickListener(
        function(context) --加
            self:getBtnNum(1)
            --0减1加
        end
    )

    self.btn_second:addClickListener(
        function(context) --晋级赛
            local model = WorldChallengeModel:getModelByType(self.mode)
            if model:getHasOpen() == false then --参赛人数不足
                self:showView(0, 2, 1)
            else
                self:showView(0, 0, self.curGroupId)
            end
            self:showBtn()
            self.btn_championship:setSelected(false)
        end
    )
    self.btn_championship:addClickListener(
        function(context) --冠军赛
            local model = WorldChallengeModel:getModelByType(self.mode)
            local isOpenBtn = model:isOpenGuanjunSai()
            if isOpenBtn == true then
                if model:getHasOpen() == false then --参赛人数不足
                    self:showView(1, 2, 0)
                else
                    self:showView(1, 1, 0)
                end
                self.btn_second:setSelected(false)
            else
                self.btn_second:setSelected(true)
                self.btn_championship:setSelected(false)
                RollTips.show(Desc.WorldChallenge_str1)
            end
        end
    )
    self.btn_arrow:addClickListener(function()
        self.mode = 1 - self.mode
        self.txt_mode:setText(Desc["WorldChallenge_mode"..self.mode])
        local ctrl = self.view:getController("arrowCtrl")
        ctrl:setSelectedIndex(1 - self.mode)
        self:showBtn()
        self:upWorldViewInfo()
    end)
end

function WorldChallengeMainView:worldChallenge_dianjijincai() --竞猜刷新显示竞猜标志
    self:upWorldViewInfo()
end

function WorldChallengeMainView:worldChallenge_daojishishuaxing()
    self:upWorldViewInfo()
    self:showguessView()
end

function WorldChallengeMainView:worldChallenge_wodebisaianniu()
    local model = WorldChallengeModel:getModelByType(self.mode)
    if model:getcanChange() == true then
        self.btn_mymatch:setVisible(true)
    else
        self.btn_mymatch:setVisible(false)
    end
end

function WorldChallengeMainView:_exit()
    SpineUtil.clearEffect(self.xiantiaoAnima)
    SpineUtil.clearEffect(self.shouzhiAnima)
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
    self.calltimer = false
    Scheduler.unschedule(self.annimation)
end

return WorldChallengeMainView
