--Name : WorldChallengeQuizView.lua
--Author : generated by FairyGUI
--Date : 2020-5-22
--Desc : 竞猜，我的比赛界面

local WorldChallengeQuizView, Super = class("WorldChallengeQuizView", Window)

function WorldChallengeQuizView:ctor()
    --LuaLog("WorldChallengeQuizView ctor")
    self._packName = "WorldChallenge"
    self._compName = "WorldChallengeQuizView"
    self._rootDepth = LayerDepth.Window
    self.skeletonNode = {}
    self.calltimer = false
    self.posInfo = {11, 12, 13, 21, 22, 23}
    self.mode = self._args.mode or WorldChallengeModel.matchMode
    self.curTeamType = 1
end

function WorldChallengeQuizView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:WorldChallenge.WorldChallengeQuizView
    vmRoot.n7 = viewNode:getChildAutoType("$n7")
    --text
    vmRoot.btn_lineup = viewNode:getChildAutoType("$btn_lineup")
    --component
    vmRoot.txt_countdown = viewNode:getChildAutoType("$txt_countdown")
    --richtext
    vmRoot.leftplayerLv = viewNode:getChildAutoType("$leftplayerLv")
    --text
    vmRoot.txt_daojishi = viewNode:getChildAutoType("$txt_daojishi")
    --richtext
    vmRoot.img_bg = viewNode:getChildAutoType("$img_bg")
    --loader
    vmRoot.txt_group = viewNode:getChildAutoType("$txt_group")
    --text
    vmRoot.rigth_cai = viewNode:getChildAutoType("$rigth_cai")
    --component
    vmRoot.img_stageNum = viewNode:getChildAutoType("$img_stageNum")
    --loader
    vmRoot.leftplayername = viewNode:getChildAutoType("$leftplayername")
    --text
    vmRoot.txt_leftzhici = viewNode:getChildAutoType("$txt_leftzhici")
    --text
    vmRoot.left_cai = viewNode:getChildAutoType("$left_cai")
    --component
    vmRoot.txt_rigthzhici = viewNode:getChildAutoType("$txt_rigthzhici")
    --text
    vmRoot.rigthplayername = viewNode:getChildAutoType("$rigthplayername")
    --text
    vmRoot.rigthplayerLv = viewNode:getChildAutoType("$rigthplayerLv")
    --text
    vmRoot.btn_record = viewNode:getChildAutoType("$btn_record")
    --text
    vmRoot.playerSubList = viewNode:getChildAutoType("$playerSubList")
    --text
    vmRoot.enemySubList = viewNode:getChildAutoType("$enemySubList")
    --text
    --{vmFieldsEnd}:WorldChallenge.WorldChallengeQuizView
    --Do not modify above code-------------
end

function WorldChallengeQuizView:_initUI()
    self.list_team = self.view:getChildAutoType("list_team")
    local ctrl = self.view:getController("teamCtrl")
    ctrl:setSelectedIndex(self.mode == 0 and 0 or 1)
    self.list_team:setSelectedIndex(0)

    self:_initVM()
    local url = "UI/WorldChallenge/worldchallengedengguanbg.png"
    self.img_bg:setURL(url)
    self.c1 = self.view:getController("c1")
    self.c2 = self.view:getController("c2")
    self.c3 = self.view:getController("c3")
    self.c2:setSelectedIndex(1)

    self.leftplayer_power = self.view:getChildAutoType("$leftplayer_power")
    self.rigthplayer_power = self.view:getChildAutoType("$rigthplayer_power")
    self.btn_right = self.view:getChildAutoType("btn_right")
    self.btn_left = self.view:getChildAutoType("btn_left")

    printTable(16, ">>>>>>>>wewerewr", self._args.quiz)
    self:showAllEquizView()
	
end

function WorldChallengeQuizView:showAllEquizView()
    if self._args.quiz == 0 then --竞猜开始
        self.c1:setSelectedIndex(0)
        self:showquizIng()
    elseif self._args.quiz == 2 then --调整阵容
        --0界面打开1刷新
        self.c1:setSelectedIndex(2)
        self:showChangeSquad(0)
    elseif self._args.quiz == 3 then --竞猜成功
        self.c1:setSelectedIndex(3)
        self:showSquadWin(true)
    elseif self._args.quiz == 4 then --竞猜失败
        self.c1:setSelectedIndex(4)
        self:showSquadWin(false)
    end
end

function WorldChallengeQuizView:setPlayerInfoBtn(playerInfo, isleft)
    if isleft == 1 then
        self.btn_left:removeClickListener(100)
        self.btn_left:addClickListener(
            function(context)
                if self.mode == 1 then
                    -- 打开天境赛玩家信
                    playerInfo.fromView = "worldChallenge"
                    ViewManager.open("HigherPvPPlayerInfoView",playerInfo)
                else
                    local playId = playerInfo.playerId
                    local serverId = playerInfo.serverId
                    ViewManager.open(
                        "ViewPlayerView",
                        {playerId = playId, serverId = serverId, arrayType = GameDef.BattleArrayType.WorldArena}
                    )
                end
            end,
            100
        )
    else
        self.btn_right:removeClickListener(100)
        self.btn_right:addClickListener(
            function(context)
                if self.mode == 1 then
                    -- 打开天境赛玩家信息
                    playerInfo.fromView = "worldChallenge"
                    ViewManager.open("HigherPvPPlayerInfoView",playerInfo)
                else
                    local playId = playerInfo.playerId
                    local serverId = playerInfo.serverId
                    ViewManager.open(
                        "ViewPlayerView",
                        {playerId = playId, serverId = serverId, arrayType = GameDef.BattleArrayType.WorldArena}
                    )
                end
            end,
            100
        )
    end
end

function WorldChallengeQuizView:showquizIng() -- flag
    local model = WorldChallengeModel:getModelByType(self.mode)
    local countdown = model.WorldChallenInfo.nextBattleStamp or 0
    self:showCountDown(self.txt_daojishi, countdown)
    local guessInfo = model:getGuessing()
    printTable(31, "打印的竞猜数据", guessInfo)
    local guessInfo1 = guessInfo.guessInfo
    local playerInfo = guessInfo.playerInfo
    if not playerInfo then
        return
    end
    local leftPlayer = playerInfo[1]
    local rigthPlayer = playerInfo[2]
    local leftplayerItem = model.playerMap[leftPlayer.playerId]
    self.leftplayername:setText(leftplayerItem.name.." Lv." .. leftplayerItem.level)
    -- self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
    self:setPlayerInfoBtn(leftplayerItem, 1)
    local rigthplayerItem = model.playerMap[rigthPlayer.playerId]
    if rigthplayerItem.name ~= nil then
        self.rigthplayername:setText(rigthplayerItem.name.." Lv." .. rigthplayerItem.level)
    end
    -- if not leftPlayer or not leftPlayer.heroInfo then
    --     leftPlayer = {heroInfo = {}}
    -- end
    if rigthplayerItem.level ~= nil then
        -- self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
        self:setPlayerInfoBtn(rigthplayerItem, 2)
    end
    printTable(30, "sadfffff", rigthplayerItem)

    -- 左边队伍
    local arrayLeft = self:getGuessArr(leftPlayer)
    self:showModel(arrayLeft, 1)
    local leftPower = self:getFightIngPower(arrayLeft)
    self.leftplayer_power:setText(StringUtil.transValue(leftPower))
    -- 右边队伍
    local arrayRight = self:getGuessArr(rigthPlayer)
    local haveArray = not rigthPlayer.heroInfo and not rigthPlayer.battleArrayInfo
    if not rigthPlayer and haveArray then
        self.c2:setSelectedIndex(1)
    elseif rigthPlayer and haveArray and rigthplayerItem.name ~= nil then
        self.c2:setSelectedIndex(2)
    else
        self.c2:setSelectedIndex(0)
        self:showModel(arrayRight, 2)
    end
    local rightPower = self:getFightIngPower(arrayRight)
    self.rigthplayer_power:setText(StringUtil.transValue(rightPower))

    local money = guessInfo1.money
    local lefttxt_money = self.left_cai:getChildAutoType("txt_money")
    local rigthtxt_money = self.rigth_cai:getChildAutoType("txt_money")
    if not guessInfo1.playerId then
        self.c1:setSelectedIndex(0)
        self.c3:setSelectedIndex(1)
        lefttxt_money:setText(MathUtil.toSectionStr(money))
        rigthtxt_money:setText(MathUtil.toSectionStr(money))
    else
        self.txt_leftzhici:setText(math.floor(leftPlayer.support / 100) .. "%")
        self.txt_rigthzhici:setText((100 - math.floor(leftPlayer.support / 100)) .. "%")
        self.c1:setSelectedIndex(1)
        if guessInfo1.playerId == leftPlayer.playerId then
            self.c3:setSelectedIndex(0)
        else
            self.c3:setSelectedIndex(1)
        end
    end

    self.left_cai:removeClickListener(100)
    self.left_cai:addClickListener(
        function(context)
            local model = WorldChallengeModel:getModelByType(self.mode)
            local info = {}
            info.text =string.format(Desc.WorldChallenge_str11, ColorUtil.formatColorString1(leftplayerItem.name, "#FFC35B"), GMethodUtil.getRichTextMoneyImgStr(3), money)
            info.type = "yes_no"
            info.mask = true
            info.onYes = function()
                local Enough = PlayerModel:isCostEnough({{type = 2, code = 1, amount = money}})
                if Enough then
                    model:GuessReq(
                        guessInfo1.stage,
                        guessInfo1.groupId,
                        guessInfo1.pos,
                        leftPlayer.playerId
                    )
                end
            end
            Alert.show(info)
        end,
        100
    )

    self.rigth_cai:removeClickListener(100)
    self.rigth_cai:addClickListener(
        function(context)
            local model = WorldChallengeModel:getModelByType(self.mode)
            local info = {}
            info.text =string.format(Desc.WorldChallenge_str11, ColorUtil.formatColorString1(rigthplayerItem.name, "#FFC35B"), GMethodUtil.getRichTextMoneyImgStr(3), money)
            info.type = "yes_no"
            info.mask = true
            info.onYes = function()
                local Enough = PlayerModel:isCostEnough({{type = 2, code = 1, amount = money}})
                if Enough then
                    model:GuessReq(
                        guessInfo1.stage,
                        guessInfo1.groupId,
                        guessInfo1.pos,
                        rigthPlayer.playerId
                    )
                end
            end
            Alert.show(info)
        end,
        100
    )
end

-- 改变阵容
function WorldChallengeQuizView:showChangeSquad(type)
    local model = WorldChallengeModel:getModelByType(self.mode)
    local stage = model.WorldChallenInfo.stage
    local stageStr = WorldChallengeModel:getPresentStageImgURL(stage)
    self.img_stageNum:setURL(stageStr)
    local countdown = model.joinBattleInfo.prepareEndStamp or 0
    self:showCountDown(self.txt_countdown, countdown)
    local leftplayerItem = ModelManager.PlayerModel
    self.leftplayername:setText(leftplayerItem.username.." Lv." .. leftplayerItem.level)
    -- self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
    local leftplayId = ModelManager.PlayerModel.userid
    local leftserverId = math.tointeger(LoginModel:getLoginServerInfo().unit_server)
    self:setPlayerInfoBtn(HigherPvPModel.selfInfo, 1)
    local rigthplayerItem = model:getOpponentInfo()
    printTable(31, "wwwwww2222222222222", rigthplayerItem)
    local isOpenBtn = model:isOpenGuanjunSai()
    if isOpenBtn then
        self.txt_group:setText("")
    else
        if model.joinBattleInfo and model.joinBattleInfo.groupId then
            self.txt_group:setText(string.format(Desc.WorldChallenge_str8, model.joinBattleInfo.groupId))
        else
            self.txt_group:setText(string.format(Desc.WorldChallenge_str8, "1"))
        end
    end
    if next(rigthplayerItem) ~= nil then
        self.rigthplayername:setText(rigthplayerItem.name.." Lv." .. rigthplayerItem.level)
        -- self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
        self:setPlayerInfoBtn(rigthplayerItem, 2)
        self.c2:setSelectedIndex(0)
        -- if not rigthplayerItem.heroInfo then
        --     rigthplayerItem.heroInfo = {}
        -- end
        -- if rigthplayerItem and rigthplayerItem.heroInfo then
            local arrayRight = self:getGuessArr(rigthplayerItem)
            self:showModel(arrayRight, 2)
        -- end
        local rightPower = self:getFightIngPower(arrayRight)
        self.rigthplayer_power:setText(StringUtil.transValue(rightPower))
    else
        if type == 0 then
            RollTips.show(Desc.WorldChallenge_str12)
        end
        self.c2:setSelectedIndex(1)
    end

    self:changeTeamShow()
    
end

-- 改变调整阵容下队伍显示
function WorldChallengeQuizView:changeTeamShow()
    local arrayType = GameDef.BattleArrayType.WorldArena
    local cardArr = BattleModel:getArrayInfo(arrayType, true)
    if (self.mode == 1) then
        arrayType = WorldHighPvpModel:getArrayTypeByIndex(self.curTeamType)
        cardArr = HigherPvPModel:getArrayByType(arrayType)
    end
    printTable(150, "111111111111111222222接键给的耳塞发送的", cardArr)
    local heroInfo = {}
    if cardArr.array then
        for i, v in pairs(cardArr.array) do --默认第一种战斗配置
            local hero = ModelManager.CardLibModel:getHeroByUid(v.uuid)
            heroInfo[v.id] = hero
            if hero == false then
                break
            end
        end
    end
    local leftPlayer = {heroInfo = heroInfo}
    printTable(13, "当前打印的阵容", leftPlayer)
    self:showModel(leftPlayer, 1)
    local myfight = self:getFightIngPower(leftPlayer)
    self.leftplayer_power:setText(StringUtil.transValue(myfight))
end

function WorldChallengeQuizView:showSquadWin(type)
    local model = WorldChallengeModel:getModelByType(self.mode)
    local guessInfo = model:hasGuessingRecord()
    --得到竞猜记录
    --printTable(32,"11111111111122222222222223342343245",guessInfo)
    -- 	guessInfo={
    --         playerInfo={
    --                 [1]={
    --                         playerId=24292,
    --                         support=6667,
    --                         heroInfo={
    --                                 [11]={
    --                                         level=1,
    --                                         pos=11,
    --                                         code=24002,
    --                                         combat=1392,
    --                                         star=4,
    --                                         stage=0,
    --                                 },
    --                         },
    --                 },
    --                 [2]={
    --                         playerId=24293,
    --                         support=3333,
    --                         heroInfo={
    --                                 [11]={
    --                                         level=1,
    --                                         pos=11,
    --                                         code=24002,
    --                                         combat=1530,
    --                                         star=4,
    --                                         stage=0,
    --                                 },
    --                         },
    --                 },
    --         },
    --         record={
    --                 pos=1,
    --                 stage=4,
    --                 groupId=2,
    --                 playerId=24292,
    --                 money=34560,
    --                 isRead=false,
    --                 result=0,
    --         },
    -- }
    if guessInfo == false then
        return
    end
    local guessInfo1 = guessInfo.record
    local playerInfo = guessInfo.playerInfo
    local leftPlayer = playerInfo[1]
    local rigthPlayer = playerInfo[2]
    local leftplayerItem = model.playerMap[leftPlayer.playerId]
    if not leftplayerItem then
        return
    end
    self.leftplayername:setText(leftplayerItem.name.." Lv." .. leftplayerItem.level)
    -- self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
    self:setPlayerInfoBtn(leftplayerItem, 1)
    local rigthplayerItem = model.playerMap[rigthPlayer.playerId]
    self.rigthplayername:setText(rigthplayerItem.name.." Lv." .. rigthplayerItem.level)
    -- self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
    self:setPlayerInfoBtn(rigthplayerItem, 2)
    local arrayRight = self:getGuessArr(leftPlayer)
    self:showModel(arrayRight, 1)
    local leftfight = self:getFightIngPower(arrayRight)
    self.leftplayer_power:setText(StringUtil.transValue(leftfight))
    
    local haveArray = not rigthPlayer.heroInfo and not rigthPlayer.battleArrayInfo
    if not rigthPlayer and haveArray then
        self.c2:setSelectedIndex(1)
    elseif rigthPlayer and haveArray and rigthplayerItem.name ~= nil then
        self.c2:setSelectedIndex(2)
    else
        self.c2:setSelectedIndex(0)
        local arrayRight = self:getGuessArr(rigthPlayer)
        self:showModel(arrayRight, 2)
        local rightPower = self:getFightIngPower(arrayRight)
        self.rigthplayer_power:setText(StringUtil.transValue(rightPower))
    end
    if type == true then
        self.c1:setSelectedIndex(3)
    else
        self.c1:setSelectedIndex(4)
    end
    self.txt_leftzhici:setText(math.floor(leftPlayer.support / 100) .. "%")
    self.txt_rigthzhici:setText((100 - math.floor(leftPlayer.support / 100)) .. "%")
    if guessInfo1.playerId == leftPlayer.playerId then
        self.c3:setSelectedIndex(0)
    else
        self.c3:setSelectedIndex(1)
    end
end

function WorldChallengeQuizView:showModel(leftPlayer, isleft)
    if not leftPlayer.heroInfo then
        return
    end
    local hasRePlace = false
    local leftReplaceArr = {}
    local rightReplaceArr = {}
    for seatId, heroInfo in pairs(leftPlayer.heroInfo) do
        if self:getSeatType(seatId) == "replace" then --替补位
            hasRePlace = true
            if isleft == 1 then
                table.insert(leftReplaceArr, heroInfo)
            else
                table.insert(rightReplaceArr, heroInfo)
            end
        end
    end
    if isleft == 1 then
        self.playerSubList:setVisible(hasRePlace)
        self:showReplaceItem(self.playerSubList, leftReplaceArr)
    else
        self.enemySubList:setVisible(hasRePlace)
        self:showReplaceItem(self.enemySubList, rightReplaceArr)
    end
    for i = 1, 6, 1 do
        local pos = self.posInfo[i]
        if not leftPlayer.heroInfo then
            break
        end
        local modeitemInfo = leftPlayer.heroInfo[pos]
        local modeKey = "model_" .. pos
        local aniKey = "1_" .. pos
        if isleft == 2 then
            modeKey = "rigthmodel_" .. pos
            aniKey = "2_" .. pos
            printTable(29, "wwwwwwwwwwwwwwwwwwww", modeitemInfo, pos)
        end
        local item = self.view:getChildAutoType(modeKey)
        local com_mode = item:getChildAutoType("com_mode")
        local img_type = item:getChildAutoType("img_type")
        local txt_level = item:getChildAutoType("txt_level")
        if not modeitemInfo then
            item:setVisible(false)
        else
            item:setVisible(true)
            local configItem = DynamicConfigData.t_hero[modeitemInfo.code]
            local modeId = configItem.model
            local skeletonNode = SpineMnange.createSprineById(modeId,nil,nil,nil, modeitemInfo.fashion)
            if not skeletonNode then
                LuaLogE(DescAuto[105] .. modeId) -- [105]="无当前spine"
                break
            end
            if i == 1 then
                printTable(13, ">>>>>>>>>>>??", modeId, skeletonNode, com_mode)
            end
            com_mode:displayObject():addChild(skeletonNode)
            skeletonNode:setAnimation(0, "stand", true)
            if isleft == 2 then
                skeletonNode:setScaleX(-1)
            end
            if self.skeletonNode[aniKey] then
                self.skeletonNode[aniKey]:removeFromParent()
            end
            self.skeletonNode[aniKey] = skeletonNode
            img_type:setURL(PathConfiger.getCardCategory(configItem.category))
            txt_level:setText(modeitemInfo.level .. Desc.itemtips_level2)
        end
    end
end

function WorldChallengeQuizView:getFightIngPower(leftPlayer)
    local power = 0
    if not leftPlayer.heroInfo then
        return power
    end
    for seatId, heroInfo in pairs(leftPlayer.heroInfo) do
        power = power + heroInfo.combat
    end
    return power
end

function WorldChallengeQuizView:showReplaceItem(list, hero)
    list:setItemRenderer(
        function(index, obj)
            local heroInfo = hero[index + 1]
            if not heroInfo then
                return
            end
            local heroId = heroInfo.code
            local configInfo = DynamicConfigData.t_hero[heroId]
            if not configInfo then
                return
            end
            local SubItem = BindManager.bindSubItem(obj)
            SubItem:initItemCell(heroId, heroInfo.star, heroInfo.level,nil,heroInfo.fashionId, heroInfo.uniqueWeaponLevel)
            -- local controller = obj:getController("state")
            -- controller:setSelectedIndex(1)
            -- local frame = obj:getChildAutoType("frame")
            -- frame:setURL(PathConfiger.getHeroFrame(heroInfo.star))
            -- local camp = obj:getChildAutoType("camp")
            -- camp:setURL(PathConfiger.getCardCategory(configInfo.category))
            -- local level = obj:getChildAutoType("level")
            -- level:setText(heroInfo.level .. "级")
            -- local img_quality = obj:getChildAutoType("img_quality")
            -- img_quality:setURL(PathConfiger.getHeroFrameLine(heroInfo.star))
            -- local starList = obj:getChildAutoType("starList")
            -- local cardStar = BindManager.bindCardStar(starList)
            -- cardStar:setData(heroInfo.star)
            -- local icon = obj:getChildAutoType("heroicon")
            --  --正常上阵英雄
            -- icon:setURL(PathConfiger.getHeroOfMonsterIcon(heroId))
        end
    )
    list:setNumItems(#hero)
end

function WorldChallengeQuizView:showCountDown(txt_countdown, serverTime)
    local model = WorldChallengeModel:getModelByType(self.mode)
    local stage = model.WorldChallenInfo.stage
    local actState = model.WorldChallenInfo.actState
    printTable(28, "打印的倒计时.........1", stage, actState)
    if stage == GameDef.WorldArenaStageType.End or stage == GameDef.WorldArenaStageType.Closed then
        txt_countdown:setText(Desc.WorldChallenge_str15)
        return
    end
    if actState == GameDef.WorldArenaActStateType.Battle then
        txt_countdown:setText(Desc.WorldChallenge_str16)
        return
    end
    local curServerTime = ServerTimeModel:getServerTime()
        local addtime = serverTime - curServerTime
        if (addtime > 0) then
        txt_countdown:setText(TimeLib.GetTimeFormatDay(addtime, 2))
        local function onCountDown(time)
            txt_countdown:setText(TimeLib.GetTimeFormatDay(time, 2))
        end
        local function onEnd(...)
        end
        if self.calltimer then
            TimeLib.clearCountDown(self.calltimer)
        end
        self.calltimer = TimeLib.newCountDown(addtime, onCountDown, onEnd, false, false, false)
    else
        txt_countdown:setText(Desc.WorldChallenge_str15)
    end
end

--根据座位id 获取座位类型
function WorldChallengeQuizView:getSeatType(id)
    for typeKey, typeList in pairs(ModelManager.BattleModel.SeatType) do
        for k, ranges in ipairs(typeList) do
            for seatId = ranges[1], ranges[2] do
                if seatId == id then
                    return typeKey
                end
            end
        end
    end
    return ""
end

function WorldChallengeQuizView:_initEvent()
    self.btn_lineup:addClickListener(
        function(context)
            local model = WorldChallengeModel:getModelByType(self.mode)
            if model:isCanBattleArray() == true then
                local playerId = 0
                local serverId = 0
                --ModelManager.PlayerModel.userid
                local rigthplayerItem = model:getOpponentInfo()
                printTable(31, "wwwwww2222222222222", rigthplayerItem)
                if next(rigthplayerItem) ~= nil then
                    playerId = rigthplayerItem.playerId
                    serverId = rigthplayerItem.serverId
                end
                self:beginChallenge(playerId, serverId)
            else
                RollTips.show(Desc.WorldChallenge_str13)
            end
        end
    )
    self.btn_record:addClickListener(
        function(context)
			ViewManager.open("WorldChallengeGuessRecordView")
            --[[local model = WorldChallengeModel:getModelByType(self.mode)
            local recordId = model:getshangGuessingRecordId()
            if recordId ~= false then
                local info = 4001
                if (self.mode == 1) then
                    local recordList = model:hasGuessingRecord()
                    local guessInfo1 = recordList.record
                    local pos = guessInfo1.pos
                    local groupId = guessInfo1.groupId
                    local stage = guessInfo1.stage
                    local PlayerInfoKey = WorldChallengeModel:getPoskey(stage, groupId, pos)
                    info = PlayerInfoKey
                end
                model:seeCombatlog(recordId, info)
            else
                RollTips.show(Desc.WorldChallenge_str14)
            end--]]
        end
    )
    self.list_team:addClickListener(function()
        self.curTeamType = self.list_team:getSelectedIndex() + 1
        if self._args.quiz == 0 then --竞猜开始
            self:showquizIng()
        elseif self._args.quiz == 2 then --调整阵容
            --0界面打开1刷新
            self:showChangeSquad(1)
        elseif self._args.quiz == 3 then --竞猜成功
            self:showSquadWin(true)
        elseif self._args.quiz == 4 then --竞猜失败
            self:showSquadWin(false)
        end
    end)
end

function WorldChallengeQuizView:worldChallenge_dianjijincai() --点击竞猜刷新
    self:showquizIng()
end

function WorldChallengeQuizView:squadtomodify_change() --点击修改阵容刷新
    self:showChangeSquad(1)
end

function WorldChallengeQuizView:worldChallenge_dianjiwodebisaixiugaizhenrong() --点击修改阵容刷新
    self:showChangeSquad(1)
end

--开始挑战
function WorldChallengeQuizView:beginChallenge(playerId, serverId)
    local function battleHandler(eventName)
        if (self.mode == 1 and eventName == "cancel") then
            HigherPvPModel:initTeamInfo();
        end
        if eventName == "begin" then
            ViewManager.close("BattlePrepareView")
        elseif eventName == "end" then
        end
    end
    local arrayType = GameDef.BattleArrayType.WorldArena
    if (self.mode == 1) then
        arrayType = WorldHighPvpModel:getArrayTypeByIndex(1)
        -- HigherPvPModel.heroInTeamMap[2] = {}
        HigherPvPModel.battleTeamType = 2
    end
    Dispatcher.dispatchEvent(
        EventType.battle_requestFunc,
        battleHandler,
        {fightID = 1, configType = arrayType, playerId = playerId, serverId = serverId}
    )
end

function WorldChallengeQuizView:getGuessArr(info)
    if (info.heroInfo) then
        return info
    end
    local arrInfo = {}
    if (self.mode == 1 and info.battleArrayInfo) then
        arrInfo = info.battleArrayInfo[self.curTeamType + 3000] or {}
    end
    return {
        heroInfo = arrInfo.posInfo or {},
    }
end

function WorldChallengeQuizView:_exit()
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
    self.calltimer = false
end

return WorldChallengeQuizView
