--Date :2020-11-10
--Author : generated by FairyGUI
--Desc : 

local CustomizedGiftsModel = class("CustomizedGifts", BaseModel)

function CustomizedGiftsModel:ctor()
	self.giftInfo = {}
	self.giftData = {}
end

function CustomizedGiftsModel:init()
	--self:initData({gift = {}})
end

function CustomizedGiftsModel:initData(data)
	local moduleId = self:getModuleId()
	self.giftInfo = data.gift or {}
	printTable(33,"CustomizedGiftsModel:initData(data)",data)
	--需要复制一份保存
	local giftData = clone(DynamicConfigData.t_CLGift[moduleId]) 
	for i = 1, #giftData do
		giftData[i].citem = {}
		for t = 1, #giftData[i].grade do
			local choseList = DynamicConfigData.t_CLGiftChonse[giftData[i].grade[t]]
			local infos = {type=0,code=0,amount=0,id = 0}
			for k,v in pairs(self.giftInfo) do
				if v.id == giftData[i].id then
					if v.chosenRewards[t] then
						infos = choseList[v.chosenRewards[t].chosenId].item[1]
						infos.id = v.chosenRewards[t].chosenId
					end
					giftData[i].curTimes = v.times
					break
				end
			end
			giftData[i].state = 0 -- 没卖完
			if giftData[i].curTimes and giftData[i].curTimes >= giftData[i].times then
				giftData[i].state = 1 -- 卖完了
			end
			table.insert(giftData[i].citem,infos)
		end
	end
	
	local keys = {
		{key = "state",asc=false},
		{key = "id",asc=false},
	}
	TableUtil.sortByMap(giftData,keys)
	
	self.giftData = giftData
	self:updateRed()
end

function CustomizedGiftsModel:getShopData()
	
	
	return self.giftData
end

-- 获取模板id
function CustomizedGiftsModel:getModuleId()
	local moduleId = 1
	local actData = ModelManager.ActivityModel:getActityByType(GameDef.ActivityType.CustomLimitGift)
	moduleId = actData and actData.showContent.moduleId or 1
	-- printTable(8848,">>actData>>",actData)
	return moduleId
end

-- 红点更新
function CustomizedGiftsModel:updateRed()
	local giftData = self:getShopData()
	local keyArr = {}
	for k,v in pairs(giftData) do
		if v.price == 0 then
			table.insert(keyArr, "V_ACTIVITY_"..GameDef.ActivityType.CustomLimitGift..v.id)
			break
		end
	end
	RedManager.addMap("V_ACTIVITY_"..GameDef.ActivityType.CustomLimitGift, keyArr)

	for k,v in pairs(giftData) do
		if v.price == 0 then
			RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.CustomLimitGift..v.id , v.state == 0 and v.citem and v.citem[1].id > 0)
			break
		end
	end
end

return CustomizedGiftsModel
