--Date :2020-11-10
--Author : generated by FairyGUI
--Desc :

local CustomizedGiftsView,Super = class("CustomizedGiftsView", View)

function CustomizedGiftsView:ctor()
	--LuaLog("CustomizedGiftsView ctor")
	self._packName = "CustomizedGifts"
	self._compName = "CustomizedGiftsView"
	self._rootDepth = LayerDepth.Window
	self.txt_countTitle = false     -- 倒计时标题
	self.txt_countTimer = false     -- 活动倒计时
	self.banner         = false     -- 宣传图
	self.list_gift      = false     -- 礼包列表
	self.timer          = false     -- 活动定时器
	self.isEnd          = false
end

function CustomizedGiftsView:_initEvent( )
	self:CustomizedGifts_refreshPanal()
end

function CustomizedGiftsView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:CustomizedGifts.CustomizedGiftsView
	self.banner = viewNode:getChildAutoType('banner')--GImage
	self.list_gift = viewNode:getChildAutoType('list_gift')--GList
	self.txt_countTimer = viewNode:getChildAutoType('txt_countTimer')--GTextField
	self.txt_countTitle = viewNode:getChildAutoType('txt_countTitle')--GTextField
	--{autoFieldsEnd}:CustomizedGifts.CustomizedGiftsView
	--Do not modify above code-------------
end

function CustomizedGiftsView:_initUI( )
	self:_initVM()

end


function CustomizedGiftsView:CustomizedGifts_refreshPanal()
	self:refreshPanal()
end

function CustomizedGiftsView:refreshPanal()
	ViewManager.close("CustomizedChoseView")
	self:setGiftList()
	self:updateCountTimer()
end

-- 设置礼包列表
function CustomizedGiftsView:setGiftList()
	local giftData = CustomizedGiftsModel:getShopData()
	
	self.list_gift:setItemRenderer(function(idx,obj)
			local index = idx + 1
			local data = giftData[index]
			local txt_name      = obj:getChildAutoType("txt_name")  -- 礼包名
			local list_reward   = obj:getChildAutoType("list_reward") -- 奖励列表
			local btn_free      = obj:getChildAutoType("btn_free")  -- 免费按钮
			local btn_dingzhi      = obj:getChildAutoType("btn_dingzhi")  -- 免费按钮
			local btn_buy       = obj:getChildAutoType("btn_buy")   -- 购买按钮
			local btn_soldout   = obj:getChildAutoType("btn_soldout")   -- 已售完按钮
			local txt_discount  = obj:getChildAutoType("txt_discount")  -- 折扣文本
			local txt_limitTimes= obj:getChildAutoType("txt_limitTimes")    -- 限购次数
			local buyCtrl       = obj:getController("buyCtrl")  -- 0 免费 1 花钱购买 2 已售完
			local discountCtrl  = obj:getController("discountCtrl")     -- 0不打折 1打折

			--discountCtrl:setSelectedIndex((data.discount==0) and 0 or 1)



			txt_name:setText(data.name)
			local rewardData = clone(data.item)
			for i = 1, #data.citem do
				table.insert(rewardData,data.citem[i])
			end
			printTable(33,"rewardData",rewardData)
			if CustomizedGiftsModel.giftInfo[data.id] then
				if data.curTimes >= data.times then
					buyCtrl:setSelectedIndex(2)
				elseif data.price == 0 then
					buyCtrl:setSelectedIndex(0)
					local img_red = btn_free:getChildAutoType("img_red")
					RedManager.register("V_ACTIVITY_"..GameDef.ActivityType.CustomLimitGift .. data.id, img_red)
				else
					buyCtrl:setSelectedIndex(1)
				end
			else
				buyCtrl:setSelectedIndex(3)
			end
			list_reward:setItemRenderer(function(idx2,obj2)
					local reward = rewardData[idx2+1]
					obj2:getController("c1"):setSelectedIndex(0)
					if reward.code ~= 0 then
						obj2:getController("state"):setSelectedIndex(1)
						obj2:getChildAutoType("select"):setVisible(false)
						local fresh = obj2:getChildAutoType("fresh")
						if idx2 == 0 or data.state == 1 then
							fresh:setVisible(false)
						end
						
						local itemCell = BindManager.bindItemCell(obj2:getChildAutoType("itemcell"))
						itemCell:setData(reward.code,reward.amount,reward.type)
						obj2:removeClickListener(33)
						fresh:addClickListener(function()
								ViewManager.open("CustomizedChoseView",{id = data.id,choseItem = data.citem,grade = data.grade,index = idx2})
							end,33)
					else
						obj2:getController("state"):setSelectedIndex(0)
						obj2:addClickListener(function()
							ViewManager.open("CustomizedChoseView",{id = data.id,choseItem = data.citem,grade = data.grade,index = idx2})
						end,33)
					end
				end)
			list_reward:setData(rewardData)

			--txt_discount:setText(string.format(Desc.TwistEggLimitGift_discount,data.discount))
			txt_limitTimes:setText(string.format(Desc.CustomizedGifts_limitTimes,data.times - (data.curTimes or 0),data.times))
			btn_dingzhi:removeClickListener(11)
			btn_dingzhi:addClickListener(function()
					ViewManager.open("CustomizedChoseView",{id = data.id,choseItem = data.citem,grade = data.grade})
				end,11)

			
			btn_free:removeClickListener(11)
			btn_free:addClickListener(function()
					local reqInfo = {
						activityType = GameDef.ActivityType.CustomLimitGift,
						id = data.id,
					}
					printTable(33,"reqInfo",reqInfo)
					RPCReq.Activity_LimitGift_Reward(reqInfo,function(params)

						end)
				end,11)

			btn_buy:removeClickListener(11)
			btn_buy:getChildAutoType("title"):setText(string.format(Desc.TwistEggLimitGift_price,data.price))
			btn_buy:addClickListener(function()
					if self.isEnd then
						RollTips.show(Desc.CollectThing_end)
						return
					end

					ModelManager.RechargeModel:directBuy(data.price,  GameDef.StatFuncType.SFT_CustomLimitGift, data.id,data.name,nil,data.showName1)
				end,11)

		end)
	self.list_gift:setData(giftData)
end

-- 倒计时
function CustomizedGiftsView:updateCountTimer()
	if self.isEnd then return end
	local actData = ModelManager.ActivityModel:getActityByType(GameDef.ActivityType.CustomLimitGift)
	if not actData then return end
	local actId   = actData.id
	local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
	if not addtime then return end

	if status == 2 and addtime == -1 then
		self.isEnd = false
		self.txt_countTimer:setText(Desc.activity_txt5)
	else
		local lastTime = addtime / 1000
		if lastTime == -1 then
			self.txt_countTimer:setText(Desc.activity_txt5)
		else
			if not tolua.isnull(self.txt_countTimer) then
				self.txt_countTimer:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
			end
			local function onCountDown(time)
				if not tolua.isnull(self.txt_countTimer) then
					self.isEnd = false
					self.txt_countTimer:setText(TimeLib.GetTimeFormatDay(time, 2))
				end
			end
			local function onEnd(...)
				self.isEnd = true
				if not tolua.isnull(self.txt_countTimer) then
					--  self.activityEnable = true
					self.txt_countTimer:setText(Desc.activity_txt18)
				end
			end
			if self.timer then
				TimeLib.clearCountDown(self.timer)
			end
			self.timer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
		end
	end
end


function CustomizedGiftsView:_exit()
	-- Scheduler.scheduleNextFrame(function()
	--     ModelManager.EquipTargetModel.jump = false
	-- end)
	TimeLib.clearCountDown(self.timer)
end



return CustomizedGiftsView