--Date :2021-01-28
--Author : generated by FairyGUI
--Desc : 

local GodMarketShopModel = class("GodMarketShop", BaseModel)

function GodMarketShopModel:ctor()
	self:initListeners()
	self.shopData = false
	self.activityType = GameDef.ActivityType.GodMarketShop
	self.config = DynamicConfigData.t_GodMarketStore
	self.cost = false
end

function GodMarketShopModel:init()

end

function GodMarketShopModel:Activity_UpdateData(_,params)
    if params.type == self.activityType then
        self.shopData = params.newHeroShop  or false
		self:redCheck()
    end
end

function GodMarketShopModel:getShopData()
    return self.shopData
end

function GodMarketShopModel:onViewOpen()
	if RedManager.getTips("V_ACTIVITY_" .. self.activityType) then
		local dayStr = DateUtil.getOppostieDays()
		local isShow = FileCacheManager.setBoolForKey("ShopRedFirst_isShow".. "_"..self.activityType.."_".. dayStr, false)
		self:redCheck()
	end
end

function GodMarketShopModel:pack_itemChange()
    return self.shopData
end


function GodMarketShopModel:redCheck() --活动出现红点
	local actData = ModelManager.ActivityModel:getActityByType(self.activityType)
	local moduleId = actData and actData.showContent.moduleId or 1
	local showData = self.config[moduleId]
	local showState = false
	for key,value in pairs(showData) do
		local count = 0
		if self.shopData and self.shopData.buyRecords and self.shopData.buyRecords[key] then
			count = self.shopData.buyRecords[key].count
		end
		local num = ModelManager.PlayerModel:getMoneyByType(value.price[1].code)
		if num > value.price[1].amount and value.reward[1].amount - count > 0 then
			showState = true
			break
		end
	end
	GlobalUtil.delayCallOnce(
	"ActivityShopModel:redCheck"..self.activityType,
	function()
		local dayStr = DateUtil.getOppostieDays()
		local isShow = FileCacheManager.getBoolForKey("ShopRedFirst_isShow".. "_"..self.activityType.."_".. dayStr, false)
		RedManager.updateValue("V_ACTIVITY_" .. self.activityType, not isShow and showState)
	end,self,0.1)
end


function GodMarketShopModel:initCost()
	if not self.cost then
		local actData = ModelManager.ActivityModel:getActityByType(self.activityType)
		local moduleId = actData and actData.showContent.moduleId or 1
		self.cost = self.config[moduleId][1].price
	end
end


--为了通用，只能加多个检测了
function GodMarketShopModel:money_change(_,data)
	self:initCost()
	if self.cost and self.cost[1].type == CodeType.MONEY then
		self:redCheck()
	end
end

function GodMarketShopModel:pack_herocomp_change(_,data)
	self:initCost()
	if self.cost and self.cost[1].type == CodeType.ITEM and self.cost[1].code == data[1].itemCode  then
		self:redCheck()
	end
end

function GodMarketShopModel:pack_item_change(_,data)
	self:initCost()
	if self.cost and self.cost[1].type == CodeType.ITEM and self.cost[1].code == data[1].itemCode  then
		self:redCheck()
	end
end

function GodMarketShopModel:pack_equip_change(_,data)
	self:initCost()
	if self.cost and self.cost[1].type == CodeType.ITEM and self.cost[1].code == data[1].itemCode  then
		self:redCheck()
	end
end

function GodMarketShopModel:pack_special_change(_,data)
	self:initCost()
	if self.cost and self.cost[1].type == CodeType.ITEM and self.cost[1].code == data[1].itemCode  then
		self:redCheck()
	end
end


return GodMarketShopModel
