--Date :2021-01-20
--Author : generated by FairyGUI
--Desc : 

local ActCommonBossResultView,Super = class("ActCommonBossResultView", Window)

function ActCommonBossResultView:ctor()
	--LuaLog("ActCommonBossResultView ctor")
	self._packName = "ActCommonBoss"
	self._compName = "ActCommonBossResultView"
	self._rootDepth = LayerDepth.PopWindow

	self.t_NewHeroBossReward = DynamicConfigData.t_NewHeroBossReward
	self.t_NewHeroActivity = DynamicConfigData.t_NewHeroActivity
	self.t_NewHeroShop = DynamicConfigData.t_NewHeroShop
	self.data = ActCommonBossModel:getBossResult(  )
	self.bossData = {}
	self.bossConfig = {}
end

function ActCommonBossResultView:_initEvent( )
	
end

function ActCommonBossResultView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:ActCommonBoss.ActCommonBossResultView
	self.blackBg = viewNode:getChildAutoType('blackBg')--GLabel
	self.btn_get = viewNode:getChildAutoType('btn_get')--GButton
	self.btn_rego = viewNode:getChildAutoType('btn_rego')--GButton
	self.icon = viewNode:getChildAutoType('icon')--GLoader
	self.icon2 = viewNode:getChildAutoType('icon2')--GLoader
	self.newCtrl = viewNode:getController('newCtrl')--Controller
	self.spineParent = viewNode:getChildAutoType('spineParent')--GLoader
	self.spineParentDown = viewNode:getChildAutoType('spineParentDown')--GLoader
	self.spineParentUp = viewNode:getChildAutoType('spineParentUp')--GLoader
	self.str_boxNum = viewNode:getChildAutoType('str_boxNum')--GRichTextField
	self.str_curboxNum = viewNode:getChildAutoType('str_curboxNum')--GRichTextField
	--{autoFieldsEnd}:ActCommonBoss.ActCommonBossResultView
	--Do not modify above code-------------
end

function ActCommonBossResultView:_initUI()
	self:_initVM()
	local spineDown =  SpineUtil.createSpineObj(self.spineParentDown,cc.p(0,0), "gongnengjiesuo_down", "Spine/ui/jiesuan", "efx_gongnengjiesuo", "efx_gongnengjiesuo",true)
	local spineUp =  SpineUtil.createSpineObj(self.spineParentUp,cc.p(0,0), "gongnengjiesuo_up", "Spine/ui/jiesuan", "efx_gongnengjiesuo", "efx_gongnengjiesuo",true)
	self.bossData = ActCommonBossModel:getData( )
	self.bossConfig = ActCommonBossModel:getBossConfig()
	local url = ItemConfiger.getItemIconByCode(self.bossConfig.item[1].code)
	self.icon:setURL(url)
	self.icon2:setURL(url)
	self.btn_get:addClickListener(function()
		ActCommonBossModel:reqSaveBossBattle(function()
			self:closeView()
		end)
	end)
	self.blackBg:addClickListener(function()
		-- self:closeView()
	end)
	self.btn_rego:addClickListener(function()
		local func = function()
			self:closeView()
			if self.bossData  and self.bossData.restTimes and self.bossData.restTimes>0 then --有次数
				local function battleHandler(eventName)
					if eventName == "begin" then
						ActCommonBossModel:reqBossBattle()
					elseif eventName == "end" then
						ViewManager.open("ActCommonBossResultView")
					end
				end
				local configType = GameDef.BattleArrayType.GuildDailyBoss
				Dispatcher.dispatchEvent(
					EventType.battle_requestFunc,
					battleHandler,
					{fightID = self.bossConfig.fightID, configType = GameDef.BattleArrayType.HolidayBoss}
				)
			else
				RollTips.show("今日挑战次数已经用完")
			end
		end
		local info = {}
		info.text = "重试将清除本次挑战记录，但不消耗挑战次数"
		info.type = "yes_no"
		info.onYes = func
		Alert.show(info);
	end)
	self.str_curboxNum:setText("X"..self.data.curNum)
	self.str_boxNum:setText("X"..self.data.maxNum)
	self.newCtrl:setSelectedIndex(0)
	if self.data.curNum > self.data.maxNum then
		self.newCtrl:setSelectedIndex(1)
	end
end

function ActCommonBossResultView:_exit()
end

return ActCommonBossResultView
