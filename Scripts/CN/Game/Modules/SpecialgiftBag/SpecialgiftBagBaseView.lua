--Name : SpecialgiftBagBaseView.lua
--Author : generated by FairyGUI
--Date : 2020-5-29
--Desc : 特惠礼包

local SpecialgiftBagBaseView, Super = class("SpecialgiftBagBaseView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
function SpecialgiftBagBaseView:ctor()
    --LuaLog("SpecialgiftBagBaseView ctor")
    self._packName = "OperatingActivities"
    self._compName = "SpecialgiftBagView"
    --self._rootDepth = LayerDepth.Window
    self.activeInfo = {}
    self.rewardInfo = {}
    self.activityEnded=false
	self.activityType = GameDef.ActivityType.PreferentialkGift
	self.statFuncType = GameDef.StatFuncType.SFT_Preferentialk
end

function SpecialgiftBagBaseView:_initEvent()
end

function SpecialgiftBagBaseView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:OperatingActivities.SpecialgiftBagBaseView
    vmRoot.txt_countdowm = viewNode:getChildAutoType("$txt_countdowm")
    --list
    vmRoot.List_reward = viewNode:getChildAutoType("$list_reward")
    --text
    --{vmFieldsEnd}:OperatingActivities.SpecialgiftBagBaseView
    --Do not modify above code-------------
end

function SpecialgiftBagBaseView:_initUI()
    self:_initVM()
    local dayStr = DateUtil.getOppostieDays()
	FileCacheManager.setBoolForKey("SpecialgiftBagView_isShow"..self.activityType.."_"..dayStr, true)
	SpecialgiftBagModel:SpecialgiftBagred(self.activityType)
    self.activeInfo = ModelManager.ActivityModel:getActityByType(self.activityType)
    if not self.activeInfo then
        return
    end
    self:showActiveTime()
    self:showRewardList()
end

function SpecialgiftBagBaseView:showRewardList()
    if self.activeInfo.showContent and self.activeInfo.showContent.data then
        self.rewardInfo = self.activeInfo.showContent.data
        self.List_reward:setVirtual()
        self.List_reward:setItemRenderer(
            function(index, obj)
                local itemMode = self.rewardInfo[index + 1]
                local gCtr1 = obj:getController("c1")
                local lingqu = self:getLingquState(itemMode.id, itemMode.times)
                if lingqu == true then
                    gCtr1:setSelectedIndex(1)
                else
                    gCtr1:setSelectedIndex(0)
                end
				local btn = obj:getChildAutoType("btn_ordinary")
				local img_red = btn:getChildAutoType("img_red")
				if itemMode.price == 0 then
					RedManager.register("V_ACTIVITY_"..self.activityType .. itemMode.id, img_red)
				else
					RedManager.register("", img_red)
				end
				
                
                btn:setTitle(itemMode.price ..Desc.SpecialgiftBagView_str112)
                local txt_zhe = obj:getChildAutoType("txt_zhe")
                txt_zhe:setText(itemMode.desc)
                local txt_yuanjia = obj:getChildAutoType("txt_yuanjia")
                txt_yuanjia:setText(string.format(Desc.activity_txt16,itemMode.oldPrice))
                local count = self:getLingquCount(itemMode.id)
                local txt_xiangou = obj:getChildAutoType("txt_xiangou")
                txt_xiangou:setText(Desc.activity_txt17..(itemMode.times-count))
				local txt_name = obj:getChildAutoType("txt_name")
                txt_name:setText(itemMode.name)
                local itemReward = itemMode.item
               -- printTable(152, "2333333333333", itemReward)
                local list_reward = obj:getChildAutoType("list_reward")
                list_reward:setItemRenderer(
                    function(itemIdex, rewardObj)
                        --池子里面原来的事件注销掉
                        local txt_num = rewardObj:getChildAutoType("txt_num")
                        local img_jia = rewardObj:getChildAutoType("img_jia")
                        local itemCell = rewardObj:getChildAutoType("itemCell")
                        local itemcell1 = BindManager.bindItemCell(itemCell)
                        local award = itemReward[itemIdex + 1]
                        itemcell1:setData(award.code, award.amount, award.type)
                        itemcell1:setAmount(0)
                        txt_num:setText("X" .. award.amount)
                        if itemIdex + 1 < #itemReward then
                            img_jia:setVisible(true)
                        else
                            img_jia:setVisible(false)
                        end
                    end
                )
                list_reward:setNumItems(#itemReward)
				local btn_ordinary=obj:getChildAutoType("btn_ordinary")
                btn_ordinary:removeClickListener(100)
                btn_ordinary:addClickListener(
                    function(context)
						if self.activityEnded then RollTips.show(Desc.activity_txt18); return end
						if itemMode.price == 0  then --取cost显示
							RPCReq.Activity_PreferentialkGift_Reward({activityType=self.activityType,id = itemMode.id,},function ( params )
								printTable(1,"购买成功",params)
							end)
						else
							ModelManager.RechargeModel:directBuy(itemMode.price,  self.statFuncType, itemMode.id, itemMode.name,nil,itemMode.showName1)
						end
                    end,
                    100
                )
            end
        )
        self.List_reward:setNumItems(#self.rewardInfo)
    end
end

function SpecialgiftBagBaseView:getLingquState(id, time)
    local lingqu = false
    local lingquList = SpecialgiftBagModel:getSpecialgiftBagActiveInfo(self.activityType)
    if not lingquList then
        return lingqu
    end
    local useTime = self:getLingquCount(id)
    if lingquList[id] and useTime >= time then
        lingqu = true
    --已售罄
    end
    return lingqu
end

function SpecialgiftBagBaseView:getLingquCount(id)
    local count = 0
    local lingquList = SpecialgiftBagModel:getSpecialgiftBagActiveInfo(self.activityType)
    if not lingquList then
        return count
    end
    if lingquList[id] then
        count = lingquList[id].times
    end
    return count
end

function SpecialgiftBagBaseView:showActiveTime()
    local actData = self.activeInfo
    if not actData then
        return
    end
    local actId = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then
        return
    end
    if status == 2 and addtime == -1 then
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = addtime / 1000
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if lastTime > 0 then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
                local function onCountDown(time)
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
                local function onEnd(...)
                    self.activityEnded = true
                    self.txt_countdowm:setText(Desc.activity_txt4)
                end
                if self.calltimer then
                    TimeLib.clearCountDown(self.calltimer)
                end
                self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
            else
                self.txt_countdowm:setText(Desc.activity_txt4)
            end
        end
    end
end

--事件初始化
function SpecialgiftBagBaseView:activity_SpecialgiftActiveUpdate(...)
    self.activeInfo = ModelManager.ActivityModel:getActityByType(self.activityType)
    if self.activeInfo==nil then
        self.activeInfo={}
    end
    if not self.activeInfo then
        return
    end
    self:showActiveTime()
    if self.activeInfo.showContent and self.activeInfo.showContent.data then
        self.rewardInfo = self.activeInfo.showContent.data
    end
    self.List_reward:setNumItems(#self.rewardInfo)
end

function SpecialgiftBagBaseView:_exit(...)
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end

return SpecialgiftBagBaseView
