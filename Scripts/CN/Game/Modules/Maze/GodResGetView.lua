--Name : GodResGetView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc : 遗物获取 xhd

local GodResGetView,Super = class("GodResGetView", Window)
local MazeConfiger  = require "Game.ConfigReaders.MazeConfiger"
function GodResGetView:ctor()
	--LuaLog("GodResGetView ctor")
	self._packName = "Maze"
	self._compName = "GodResGetView"
	self._rootDepth = LayerDepth.PopWindow
	self.data = {}
	self.getBtn = false
	self.curData = false
	self._hideCloseBtn = true
end

function GodResGetView:_initEvent( )
	local params = {}
	params.onSuccess = function (res )
	   -- printTable(1,res)
	   if res.Relics  and #res.Relics>0 then
	   	  self.data = res.Relics
	   end
		if tolua.isnull(self.view) then return end
	   -- printTable(1,self.data)
	   if self.data and #self.data>0 then
	      
			-- self.curData = self.data[1]
			self.list:setData(self.data)
		else 
			self:closeView()
	   	--   self.list:scrollToView(1)
	   end
	end
	RPCReq.Maze_RelicsInfo(params, params.onSuccess)
   --测试数据
  --  self.data = {{skillId=110004,pos=1,buy=0,id=1},{skillId=110002,pos=2,buy=0,id=1},{skillId=110019,pos=3,buy=0,id=1}}
  --  -- printTable(1,self.data)
  --  if self.data and #self.data>0 then
		-- self.list:setData(self.data)
  --  end
end

function GodResGetView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.GodResGetView
		vmRoot.title = viewNode:getChildAutoType("$title")--text
		vmRoot.list = viewNode:getChildAutoType("$list")--list
	--{vmFieldsEnd}:Maze.GodResGetView
	--Do not modify above code-------------
end

function GodResGetView:_initUI( )
	self:_initVM()
	self.getBtnCtrl = self.view:getController("getBtnCtrl")
	self.showEffctCtrl = self.view:getController("showEffctCtrl")
	self.target = self.view:getChildAutoType("target")
	self.list:setItemRenderer(function( index,obj )
		-- 默认选中第一个
		local ctrl = obj:getController("selectCtrl");
		-- if (1 == index) then
		-- 	obj:setScale(1, 1);
		-- 	ctrl:setSelectedIndex(1);
		-- else
			obj:setScale(0.84, 0.84);
			ctrl:setSelectedIndex(0);
		-- end
    	obj:setPivot(0.5,0.5)
    	local config = MazeConfiger.getRelicConfig(self.data[index+1].skillId)
    	local name = obj:getChildAutoType("name")
    	local btype = obj:getChildAutoType("btype")
    	local icon = obj:getChildAutoType("icon")
    	local icon2 = obj:getChildAutoType("icon2")
    	local titleTxt = obj:getChildAutoType("skilltxt")
    	name:setText(config.skillName)
    	obj:getController("c1"):setSelectedIndex(config.color-1)
    	icon:setURL(string.format("%s%s.png", "Icon/maze/", config.mazeRelictype))
    	icon2:setURL(string.format("%s%s.png", "Icon/maze/", config.apply))
    	titleTxt:setText(config.showName)
    	obj:removeClickListener(11)
		obj:addClickListener(function()
			self.curData = self.data[index+1]
    	end,11)
	end)

	self.list:removeClickListener(22)
	self.list:addClickListener(function ()
		local idx = self.list:getSelectedIndex()
		for i, obj in ipairs(self.list:getChildren()) do
			local ctrl = obj:getController("selectCtrl");
			if (i == idx + 1) then
	        	obj:setScale(1, 1);
				ctrl:setSelectedIndex(1);
				self.getBtnCtrl:setSelectedIndex(i)
			else
				obj:setScale(0.84, 0.84);
				ctrl:setSelectedIndex(0);
			end
		end
	end, 22)
	-- 滚动效果
    -- self.list:setVirtualAndLoop()
    -- local function doSpecialEffect( context )
		-- local midX = self.list:getScrollPane():getPosX() + self.list:getViewWidth()/2 
		-- local cnt = self.list:numChildren()
		-- for i=0,cnt-1 do
		-- 	local obj = self.list:getChildAt(i)
		-- 	local dist = math.abs(midX-obj:getX()-obj:getWidth()/2)
		-- 	local ctrl = obj:getController("selectCtrl");
		-- 	if dist>obj:getWidth() then
		-- 	   	obj:setScale(0.87,0.87)
		-- 	   	ctrl:setSelectedIndex(0);
		-- 	else
	    --         local ss = 1 + (1 - dist / obj:getWidth()) * 0.05;
	    --     	obj:setScale(ss, ss);
		-- 	   	ctrl:setSelectedIndex(1);
		-- 	end
		-- end
		-- local index = (self.list:getFirstChildInView()+1)%self.list:getNumItems()
		-- self.curData = self.data[index+1]
	-- end
	-- self.list:addEventListener(FUIEventType.Scroll,doSpecialEffect)

    self.getBtn = self.view:getChildAutoType("getBtn")
   self.getBtn:addClickListener(function( ... )
   	    if not self.curData then
   	    	RollTips.show(Desc.Maze_Text1)
   	    	return
   	    end
        
	    local params = {}
	    params.pos = self.curData.pos
	    params.grid = self._args.config.id
		params.onSuccess = function (res )
		   if res.ret ==0 then
             self:showAction()
		   	 -- ViewManager.close("GodResGetView")
		   	 -- RollTips.show("遗物领取成功")
		   end
		end
		RPCReq.Maze_ReceiveRelicsInfo(params, params.onSuccess)
		--测试时
		-- self:showAction()
   end)
end

function GodResGetView:showAction( ... )
	local idx = self.list:getSelectedIndex()
    self.list:setVisible(false)
    self.getBtn:setVisible(false)
    self.showEffctCtrl:setSelectedIndex(1)
    self.getBtnCtrl:setSelectedIndex(idx+1)
    local obj = self.view:getChildAutoType("effctCell")
    local ctrl = obj:getController("selectCtrl");
	obj:setScale(1, 1);
		-- ctrl:setSelectedIndex(0);
	-- obj:setPivot(0.5,0.5)
	local config = MazeConfiger.getRelicConfig(self.curData.skillId)
	local name = obj:getChildAutoType("name")
	local btype = obj:getChildAutoType("btype")
	local icon = obj:getChildAutoType("icon")
	local icon2 = obj:getChildAutoType("icon2")
	local titleTxt = obj:getChildAutoType("skilltxt")
	name:setText(config.skillName)
	obj:getController("c1"):setSelectedIndex(config.color-1)
	icon:setURL(string.format("%s%s.png", "Icon/maze/", config.mazeRelictype))
	icon2:setURL(string.format("%s%s.png", "Icon/maze/", config.apply))
	titleTxt:setText(config.showName)
    
    local arg = {}
	arg.from = Vector2(obj:getPosition().x,obj:getPosition().y)
	arg.to = Vector2(self.target:getX(),self.target:getY())
	arg.time = 0.7
	arg.ease = EaseType.ExpoInOut
	arg.onComplete = function( ... )
		ViewManager.close("GodResGetView")
		RollTips.show(Desc.Maze_Text2)
	end

	TweenUtil.moveTo(obj,arg)
	TweenUtil.scaleTo(obj, {from = obj:getScale(), to = {x = 0.1, y =0.1}, time = 1, ease = EaseType.QuartOut})
end



return GodResGetView