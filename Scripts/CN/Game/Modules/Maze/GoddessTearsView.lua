--Name : GoddessTearsView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc : 女神之泪  xhd

local GoddessTearsView,Super = class("GoddessTearsView", Window)
local ItemConfiger = require "Game.ConfigReaders.ItemConfiger" --道具配置读取器
function GoddessTearsView:ctor()
	--LuaLog("GoddessTearsView ctor")
	self._packName = "Maze"
	self._compName = "GoddessTearsView"
	self._rootDepth = LayerDepth.PopWindow
	self.data = {}
	
end

function GoddessTearsView:sortData()
	local function sortFunc(a, b)
		if a.hp/a.maxHp == b.hp/b.maxHp then
			if a.level == b.level then
				if a.star == b.star then
					return a.combat>b.combat
				else
					return a.star > b.star
				end
			else
				return a.level>b.level
			end
		else
			return a.hp/a.maxHp<b.hp/b.maxHp
		end
	end
	table.sort(self.data, sortFunc)
end

function GoddessTearsView:_initEvent( )
	local params = {}
	params.onSuccess = function (res )
		self.data = res.hero
		self:sortData()
		if tolua.isnull(self.view) then return end
	    self.list:setData(self.data)
	end
	RPCReq.Maze_HeroAllInfo(params, params.onSuccess)
end

function GoddessTearsView:checkHadDead()
	for i,v in ipairs(self.data) do
		if v.hp<=0 then
           return true
		end
	end
	return false
end

function GoddessTearsView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.GoddessTearsView
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.title = viewNode:getChildAutoType("$title")--text
		vmRoot.itemIcon = viewNode:getChildAutoType("$itemIcon")--loader
		vmRoot.cancelBtn = viewNode:getChildAutoType("$cancelBtn")--Button
		vmRoot.okBtn = viewNode:getChildAutoType("$okBtn")--Button
		-- vmRoot.helpBtn = viewNode:getChildAutoType("$helpBtn")--Button
		vmRoot.ItemNum = viewNode:getChildAutoType("$ItemNum")--text
	--{vmFieldsEnd}:Maze.GoddessTearsView
	--Do not modify above code-------------
end

function GoddessTearsView:_initUI( )
	self:_initVM()
    self.cancelBtn:addClickListener(function ( ... )
    	ViewManager.close("GoddessTearsView")
    end)
    self.okBtn:addClickListener(function ( ... )
		if ModelManager.PlayerModel:isCostEnough({{type = GameDef.GameResType.Item, code = 10000021, amount=1}}, true) then
			--检查是否有阵亡英雄
			if not self:checkHadDead() then
				RollTips.show(Desc.maze_showTipsText1)
				return 
			end
    		local params = {}
			params.onSuccess = function (res )
				if res.ret==0 then
					RollTips.show(Desc.maze_showTipsText2)
			        local params = {}
					params.onSuccess = function (res )
						self:closeView()
						-- self.data = res.hero
						-- self:sortData()
						-- if tolua.isnull(self.view) then return end
					    -- self.list:setData(self.data)
					    -- local num= ModelManager.PackModel:getItemsFromAllPackByCode( "10000021",false )
	                    -- self.ItemNum:setText(num)
					end
					RPCReq.Maze_HeroAllInfo(params, params.onSuccess)
			    end
			end
			RPCReq.Maze_GoddessRestore(params, params.onSuccess)
    	end
    end)
    -- self.helpBtn:addClickListener(function ( ... )
    	
    -- end)

    self.list:setItemRenderer(function( index,obj )
    	local tempData =self.data[index+1]
    	tempData.category = DynamicConfigData.t_hero[tempData.code].category
    	-- printTable(1,tempData)
    	local heroCell = BindManager.bindHeroCell(obj)
        heroCell:setData(tempData)
	end)
	self.list:setVirtual();
    local num= ModelManager.PackModel:getItemsFromAllPackByCode( "10000021",false )
    self.ItemNum:setText(num)
     local url = ItemConfiger.getItemIconByCode("10000021")
    self.itemIcon:setURL(url)
end

return GoddessTearsView