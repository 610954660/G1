--Name : HireTipView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc : 雇佣 xhd

local HireTipView,Super = class("HireTipView", Window)

function HireTipView:ctor()
	--LuaLog("HireTipView ctor")
	self._packName = "Maze"
	self._compName = "HireTipView"
	--self._rootDepth = LayerDepth.Window
	self._rootDepth = LayerDepth.PopWindow
	self.data ={}
	for i=1,4 do
    	self["Btn"..i] = false
    end
    self.uuid = false
    -- self._hideCloseBtn = true
end

function HireTipView:_initEvent( )
	local params = {}
	params.onSuccess = function (res )
	   -- printTable(1,res)
	   local tempArr = res.hero
	   for k,v in pairs(tempArr) do
	     table.insert(self.data,v)
	   end
		if tolua.isnull(self.view) then return end
	   if self.data and #self.data>0 then
	   	  self.list:setData(self.data)
	   end
	end
	RPCReq.Maze_HireHeroInfo(params, params.onSuccess)
end

function HireTipView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.HireTipView
		vmRoot.title = viewNode:getChildAutoType("$title")--text
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.goBtn = viewNode:getChildAutoType("$goBtn")--Button
	--{vmFieldsEnd}:Maze.HireTipView
	--Do not modify above code-------------
end

function HireTipView:_initUI( )
	self:_initVM()
    self.list:setItemRenderer(function(index,obj )
    	local playerCell = obj:getChildAutoType("playerCell")
    	local tempData =self.data[index+1]
    	tempData.category = DynamicConfigData.t_hero[tempData.code].category
    	--tempData.category = tempData.career
    	-- printTable(1,tempData)
    	local heroCell = BindManager.bindHeroCell(playerCell)
        heroCell:setData(tempData)
		obj:getChildAutoType("fightval"):setText(StringUtil.transValue(tempData.combat))
    	obj:addClickListener(function ( ... )
           self.uuid = tempData.uuid
           -- ModelManager.CardLibModel:setCarByPosInfo(tempData.code,tempData.uuid,1)
           -- Dispatcher.dispatchEvent(EventType.cardView_showDetial)
    	end)
    end)
    -- for i=1,4 do
    -- 	self["Btn"..i] = self.view:getChildAutoType("Btn"..i)
    -- 	self["Btn"..i]:addClickListener(function (  )
    -- 		-- printTable(1,self.data[i])
    -- 	end)
    -- end
    self.goBtn:setVisible(ModelManager.MazeModel:checkExsitNext(self._args.config.id))
    self.goBtn:addClickListener(function( ... )
    	if not self.uuid then
    		RollTips.show(Desc.Maze_Text3)
    	else
    		print(1,self.uuid)
    		local params = {}
		    params.uuid = self.uuid
		    params.grid = self._args.config.id
		    -- printTable(1,params)
			params.onSuccess = function (res )
			   if res.ret ==0 then
			   	  RollTips.show("雇佣成功")
			   	  ViewManager.close("HireTipView")
			   end
			end
			RPCReq.Maze_HireHero(params, params.onSuccess)
    	end
    end)
end




return HireTipView