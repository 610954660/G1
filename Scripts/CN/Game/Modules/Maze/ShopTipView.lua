--Name : ShopTipView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc :  
--迷宫超市 xhd
local ShopTipView,Super = class("ShopTipView", Window)
local MazeConfiger  = require "Game.ConfigReaders.MazeConfiger"
local ItemCell = require "Game.UI.Global.ItemCell"
function ShopTipView:ctor()
	--LuaLog("ShopTipView ctor")
	self._packName = "Maze"
	self._compName = "ShopTipView"
	self._rootDepth = LayerDepth.PopWindow
	--self._rootDepth = LayerDepth.Window
	self.data = {}
	self.flag = false
end

function ShopTipView:_initEvent( )
	
end

function ShopTipView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.ShopTipView
		vmRoot.tiaoguoBtn = viewNode:getChildAutoType("$tiaoguoBtn")--Button
		vmRoot.list = viewNode:getChildAutoType("$list")--list
	--{vmFieldsEnd}:Maze.ShopTipView
	--Do not modify above code-------------
end


function ShopTipView:__onExit()
	printTraceback()
end

function ShopTipView:_initUI( )
	self:_initVM()
    self._closeBtn:removeClickListener()
	self._closeBtn:addClickListener(function ()
		local cflag = MazeModel:getShopBuyFlag()
		print(1,cflag)
		print(1,self.flag)
		if not self.flag  then
			self:closeView()
			return
		end
		if cflag  then
			self:closeView()
		else
			local info = {}
			info.text = "离开超市后无法再次购买,确定离开吗?"
			info.type = "yes_no"
			info.mask = true
			info.onYes = function(flag)
				print(1,"111",flag)
				MazeModel:setShopBuyFlag(flag)
				self:closeView()
			end
			info.check = true
			info.checkTxt = Desc.Maze_Text12
			info.align = "left"
			Alert.show(info)
		end
	end)

	local params = {}
	params.onSuccess = function (res )
		printTable(2233,res)
		self.data = res.shop
		if self.data and #self.data>0 and (not tolua.isnull(self.list)) then
			self.list:setData(self.data)
		end
	end
	RPCReq.Maze_ShopInfo(params, params.onSuccess)
	self.tiaoguoBtn:setVisible(ModelManager.MazeModel:checkExsitNext(self._args.config.id))
	self.tiaoguoBtn:addClickListener(function ( ... )
		self.tiaoguoBtn:setGrayed(true)
		self.tiaoguoBtn:setTouchable(false)
    	local params = {}
		params.id = self._args.config.id
		print(1,"self._args.config.id",self._args.config.id)
		params.onSuccess = function (res )
			if tolua.isnull(self.view) then
				return
			end
			self.flag = true
			self.list:setData(self.data)
			self.tiaoguoBtn:setGrayed(true)
			self.tiaoguoBtn:setTouchable(false)
		end
		RPCReq.Maze_MoveInfo(params, params.onSuccess)
    end)

    self.list:setItemRenderer(function(index,obj)
    	    local id = self.data[index+1].id
    	    local number = self.data[index+1].number
    	    local buyFlag = self.data[index+1].buy
    	    local config = MazeConfiger.getMazeShopByIdAndNum(id,number)
    	    local temp = {}
    	    temp.code = config.itemcode
    	    temp.amount = config.count
		    local itemcellObj = obj:getChildAutoType("itemCell")
			local itemcell = BindManager.bindItemCell(itemcellObj)
			local itemData = ItemsUtil.createItemData({data =temp})
			itemcell:setIsBig(true);
			itemcell:setItemData(itemData) 
			itemcellObj:removeClickListener(1000)
			itemcellObj:addClickListener(function( ... )
				itemcell:onClickCell()
			end,1000)

			local itemName = obj:getChildAutoType("itemName")
			if itemName then
				itemName:setText(itemData:getName())
			end
			local txt_zhekou = obj:getChildAutoType("txt_zhekou")
			txt_zhekou:setText(string.format(Desc.shop_zhe2,config.discount))
			local buyBtn = obj:getChildAutoType("buyBtn")
			if self.flag then
				if  buyFlag~=0 then
					buyBtn:setGrayed(true)
					buyBtn:setTouchable(false)
				else
					buyBtn:setGrayed(false)
					buyBtn:setTouchable(true)
				end
			else
				buyBtn:setGrayed(true)
			    -- buyBtn:setTouchable(false)
			end

			buyBtn:removeClickListener(1001)
			buyBtn:addClickListener(function( ... )
				if not self.flag  then
					RollTips.show(Desc.Maze_Text13);
					return
				end
				local conf = MazeConfiger.getConfigByMazeId(self._args.gridId);
				local flag = false -- false 不能购买
				for _, id in ipairs(conf.next) do
					if (id == self._args.config.id) then
						flag = true;
						break;
					end
				end
				flag = flag or (self._args.config.id == self._args.gridId) -- 位于超市的上一格和当前格可购买
				-- flag =  (self._args.config.id == self._args.gridId) -- 位于超市的上一格和当前格可购买
				if (not flag) then
					RollTips.show(Desc.maze_cantShop);
					return;
				end

				local buyFunc = function ()
					local params2 = {}
					params2.pos = index+1
					params2.grid = self._args.config.id
					print(1,index+1)
					params2.onSuccess = function (res )
						if res.ret ==0 then
							RollTips.show(Desc.shop_success:format(itemData:getName(), itemData:getItemAmount()))
							self.data[index + 1].buy = res.ret;
							if not tolua.isnull(buyBtn) then
								buyBtn:setGrayed(true)
								buyBtn:setTouchable(false)
							end
						end
					end
					RPCReq.Maze_BuyShop(params2, params2.onSuccess)
				end

				-- if (self._args.config.id ~= self._args.gridId) then -- 不位于超市格先移动到超市格
				-- 	local params = {}
				-- 	params.id = self._args.config.id
				-- 	params.onSuccess = function (res)
				-- 		self._args.gridId = self._args.config.id;
				-- 		if tolua.isnull(self.view) then return end
				-- 		buyFunc();
				-- 	end
				-- 	RPCReq.Maze_MoveInfo(params, params.onSuccess)
				-- else
					buyFunc();
				-- end

				
			end,1001)
			local seeNum = obj:getChildAutoType("costItem");
			BindManager.bindCostItem(seeNum):setData(GameDef.ItemType.Money, config.MoneyType, config.cost, true);
		end
	)
	
end




return ShopTipView