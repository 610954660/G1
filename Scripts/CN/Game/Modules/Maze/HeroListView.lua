--Name : HeroListView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc : 英雄列表 xhd

local HeroListView,Super = class("HeroListView", Window)

function HeroListView:ctor()
	--LuaLog("HeroListView ctor")
	self._packName = "Maze"
	self._compName = "HeroListView"
	self._rootDepth = LayerDepth.PopWindow
	self.data = {}
end

function HeroListView:_initEvent( )
	local params = {}
	params.onSuccess = function (res )
	   --printTable(1,res)
	   self.data = res.hero
		if tolua.isnull(self.view) then return end
	   self:sort_table()
	   if self.data and #self.data>0 then
	   	  self.list:setData(self.data)
	   end
	   
	end
	RPCReq.Maze_HeroAllInfo(params, params.onSuccess)
end

--数据排序
-- function HeroListView:sort_table()
-- 	table.sort( self.data, function( a,b )
-- 		if a.star==b.star then
-- 			local category1=  DynamicConfigData.t_hero[a.code].category
-- 			local category2=  DynamicConfigData.t_hero[b.code].category
-- 			if category1 == category2 then
-- 				if a.code == b.code then
--                     return a.combat>b.combat
-- 				else
-- 					return a.code<b.code
-- 				end
-- 			else
-- 				return category1>category2
-- 			end
-- 		else
-- 			return a.star>b.star
-- 		end
-- 	end )
-- end

function HeroListView:sort_table()
	local function sortFunc(a, b)
		if a.hp/a.maxHp == b.hp/b.maxHp then
			if a.level == b.level then
				if a.star == b.star then
					return a.combat>b.combat
				else
					return a.star > b.star
				end
			else
				return a.level>b.level
			end
		else
			return a.hp/a.maxHp<b.hp/b.maxHp
		end
	end
	table.sort(self.data, sortFunc)
end

function HeroListView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.HeroListView
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.title = viewNode:getChildAutoType("$title")--text
	--{vmFieldsEnd}:Maze.HeroListView
	--Do not modify above code-------------
end

function HeroListView:_initUI( )
	self:_initVM()
    self.list:setItemRenderer(function ( index,obj )
    	local tempData =self.data[index+1]
    	tempData.category = DynamicConfigData.t_hero[tempData.code].category
    	local heroCell = BindManager.bindHeroCell(obj)
        heroCell:setData(tempData)
		
	    obj:addClickListener(function( ... )
	    	print(1,"打开英雄属性面板")
	    end)
	end)
	self.list:setVirtual();
end




return HeroListView