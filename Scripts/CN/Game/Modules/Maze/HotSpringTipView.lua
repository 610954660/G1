--Name : HotSpringTipView.lua
--Author : generated by FairyGUI
--Date : 2020-4-11
--Desc : 恢复和复活

local HotSpringTipView,Super = class("HotSpringTipView", Window)
local  HeroConfiger = require "Game.ConfigReaders.HeroConfiger"
function HotSpringTipView:ctor()
	--LuaLog("HotSpringTipView ctor")
	self._packName = "Maze"
	self._compName = "HotSpringTipView"
	self._rootDepth = LayerDepth.PopWindow
	--self._rootDepth = LayerDepth.Window
	--printTable(1,self._args)
end

function HotSpringTipView:_initEvent( )
	
end

function HotSpringTipView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:Maze.HotSpringTipView
		vmRoot.title = viewNode:getChildAutoType("$title")--text
		vmRoot.title2 = viewNode:getChildAutoType("$title2")--text
		vmRoot.qudingBtn = viewNode:getChildAutoType("$qudingBtn")--Button
		-- vmRoot.closeBtn2 = viewNode:getChildAutoType("$closeBtn2")--Button
	--{vmFieldsEnd}:Maze.HotSpringTipView
	--Do not modify above code-------------
end

function HotSpringTipView:_initUI( )
	self:_initVM()
	if self._args.type == 1 then
		self.title:setText(Desc.Maze_Text4)
	    self.title2:setText(Desc.Maze_Text5)
	elseif self._args.type == 2 then
		self.title:setText(Desc.Maze_Text6)
	    self.title2:setText(Desc.Maze_Text7)
	end
	self.qudingBtn:setVisible(ModelManager.MazeModel:checkExsitNext(self._args.config.id))
    self.qudingBtn:addClickListener(function( ... )
    	if self._args.type == 1 then
    	    local params = {}
		    params.grid = self._args.config.id
			params.onSuccess = function (res )
			   --printTable(1,res)
			   ViewManager.close("HotSpringTipView")
			   RollTips.show(Desc.Maze_Text8)
			end
			RPCReq.Maze_Restore(params, params.onSuccess)
    	elseif self._args.type == 2 then
    		local params = {}
		    params.grid = self._args.config.id
			params.onSuccess = function (res )
			   ViewManager.close("HotSpringTipView")
			   if res.ret ==0  then
			   	local config = HeroConfiger.getHeroInfoByID(res.code)
			   	 local heroStr = config.heroName
			   	 RollTips.show(string.format(Desc.Maze_Text9,heroStr))
			   end
			   
			end
			RPCReq.Maze_Rebirth(params, params.onSuccess)
    	end

    end)

    -- self.closeBtn2:addClickListener(function ( ... )
    -- 	ViewManager.close("HotSpringTipView")
    -- end)
end




return HotSpringTipView