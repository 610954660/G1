--Date :2020-12-30
--Author : generated by FairyGUI
--Desc : 

local FashionLoginTipsView,Super = class("FashionLoginTipsView", Window)
local FashionConfiger = require "Game.ConfigReaders.FashionConfiger"

function FashionLoginTipsView:ctor()
	--LuaLog("FashionLoginTipsView ctor")
	self._packName = "Fashion"
	self._compName = "FashionLoginTipsView"
	self._rootDepth = LayerDepth.PopWindow
	self.btn_Buy = false
	self.btn_Preview = false
	self.btn_Close = false
	self.costPanel = false
	self.costShowCtr = false
	self.lihuiDisplay = false
	self.playerIcon = false
	self.rewardList = false
	self.rewardShowCtr = false
	self.txt_cost = false
	self.txt_discount = false
	self.fashionActivityInfo = {}
end                                                                                                                                                                         

function FashionLoginTipsView:_initEvent( )
	self.btn_Buy:addClickListener(function()
		ModuleUtil.openModule(self.jump)
	end)

	self.btn_Preview:addClickListener(function()
		print(6,"btn_Preview")
		ViewManager.open("FashionPreView",{skillId = self.fashionInfo.skillId, data = self.fashionInfo, fashionId = self.fashionId})
	end)

	self.btn_Close:addClickListener(function()
		ViewManager.close("FashionLoginTipsView")
	end)
end

function FashionLoginTipsView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:Fashion.FashionLoginTipsView
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.btn_Buy = viewNode:getChildAutoType('btn_Buy')--GButton
	self.btn_Close = viewNode:getChildAutoType('btn_Close')--GButton
	self.btn_Preview = viewNode:getChildAutoType('btn_Preview')--btn_Preview1
		self.btn_Preview.btn_Preview = viewNode:getChildAutoType('btn_Preview/btn_Preview')--GImage
	self.costItem = viewNode:getChildAutoType('costItem')--GComponent
	self.costPanel = viewNode:getChildAutoType('costPanel')--GGroup
	self.costShowCtr = viewNode:getController('costShowCtr')--Controller
	self.costTypeCtr = viewNode:getController('costTypeCtr')--Controller
	self.lihuiDisplay = viewNode:getChildAutoType('lihuiDisplay')--GButton
	self.name = viewNode:getChildAutoType('name')--GLoader
	self.playerIcon = viewNode:getChildAutoType('playerIcon')--GLoader
	self.rewardList = viewNode:getChildAutoType('rewardList')--GList
	self.rewardShowCtr = viewNode:getController('rewardShowCtr')--Controller
	self.txt_cost = viewNode:getChildAutoType('txt_cost')--GTextField
	self.txt_discount = viewNode:getChildAutoType('txt_discount')--GRichTextField
	--{autoFieldsEnd}:Fashion.FashionLoginTipsView
	--Do not modify above code-------------
end

function FashionLoginTipsView:_initUI( )
	self:_initVM()
	self.lihuiDisplay = BindManager.bindLihuiDisplay(self.lihuiDisplay)
	self.lihuiDisplay:setScale(0.5,0.5)
	self.playerIcon = self.playerIcon:displayObject()
	self.fashionActivityInfo = self._args.fashionActivityInfo
	if not self.fashionActivityInfo then return end 
	self.jump = self._args.jump
	self.fashionId = self.fashionActivityInfo.fashionId   
	self.fashionInfo = FashionConfiger.getFashionInfoByFashionId(self.fashionId)
	self.heroId = self.fashionInfo.heroCode
	self.name:setURL(string.format("UI/Fashion/%s.png",self.fashionActivityInfo.name))
	self:setLihuiDisplay()
	self:setPlayerIcon() 
	self:setRewardList()
	self:setCost()
end

function FashionLoginTipsView:setLihuiDisplay()
	self.lihuiDisplay:setData(self.heroId,nil,nil,self.fashionId)
end

function FashionLoginTipsView:setPlayerIcon()
	local skeletonNode = SpineMnange.createSprineById(self.heroId,true,nil,nil,self.fashionId)
	skeletonNode:setAnimation(0, "stand", true);
	self.playerIcon:removeAllChildren()
	self.playerIcon:addChild(skeletonNode)
end

function FashionLoginTipsView:setRewardList()
	local reward = self.fashionActivityInfo.reward
	local pos = self.costPanel:getPosition()
	if not TableUtil.isEmpty(reward) then 
		self.rewardShowCtr:setSelectedIndex(1)
		self.rewardList:setItemRenderer(function(idx,obj)
	  	  	local index = idx + 1
	   		local data  = reward[index]
			local itemCell 	= BindManager.bindItemCell(obj)
			itemCell:setData(data.code, data.amount, data.type) 
	    end)
	    self.rewardList:setData(reward)
	    self.costPanel:setPosition(pos.x,512)
	else
		self.rewardShowCtr:setSelectedIndex(0)
	    self.costPanel:setPosition(pos.x,441)
	end
end

function FashionLoginTipsView:setCost()
	local cost = self.fashionActivityInfo.cost
	if not TableUtil.isEmpty(cost) then 
		self.costShowCtr:setSelectedIndex(1)
		local disValue = cost[1].disValue
		local oldValue = cost[1].oldValue
		local itemCost = cost[1].itemCost
		if itemCost == 0 then 
			self.costTypeCtr:setSelectedIndex(1)
		else
			self.costTypeCtr:setSelectedIndex(0)
			local costItem = BindManager.bindCostItem(self.view:getChildAutoType("costItem"))
			costItem:setData(CodeType.MONEY,itemCost,0)
			costItem.view:getChildAutoType("txt_num"):setVisible(false)
		end
		if disValue > 0 then 
			self.txt_discount:setText(disValue)
		else
			self.txt_discount:setText("")
		end
		if oldValue > 0 then 
			self.txt_cost:setText(oldValue)
		else
			self.txt_cost:setText("")
		end
		
	else
		self.costShowCtr:setSelectedIndex(0)
	end
end

return FashionLoginTipsView