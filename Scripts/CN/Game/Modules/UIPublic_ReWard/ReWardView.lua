--Name : ReWardView.lua
--Author : generated by FairyGUI
--Date : 2020-4-30
--Desc : 

local ReWardView,Super = class("ReWardView", MutiWindow)
local ArrayName = require "Game.Consts.ArrayName"
local ViewArrayType = require "Game.Consts.ViewArrayType"

function ReWardView:ctor()
	--LuaLog("ReWardView ctor")
	self._packName = "UIPublic_ReWard"
	self._compName = "ReWardView"
	self._rootDepth = LayerDepth.PopWindow
	self.bgBlack=false
	self.winner=false
	self.loser=false
	self.GoWrap=false
	self.dataShow=false
	self.soundId = 0
	self.curenFightName=false
	
	self.battlePackge="Battle"
end


--ViewManager.open("ReWardView",{page="BattleSettleView"})

function ReWardView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	self.bgBlack= viewNode:getChild('bgBlack')
	self.guideList=viewNode:getChildAutoType("guideList")
	self.dataShow=viewNode:getChildAutoType("dataShow")
	--self.winner=viewNode:getChildAutoType("winner")
	--self.loser=viewNode:getChildAutoType("loser")
	self.btnAgain = viewNode:getChildAutoType("btnAgain")
	local model = viewNode:getChildAutoType("model")
	model:setScale(0.7,0.7)
	self.model = BindManager.bindLihuiDisplay(model)
	self.loser = viewNode:getChildAutoType("loser")
	self.shareBtn=viewNode:getChildAutoType("shareBtn")
	self.loseMark=viewNode:getChildAutoType("loseMark")
	self.loseRank=viewNode:getChildAutoType("loseRank")
	self.txt_mvpTitle = viewNode:getChildAutoType("txt_mvpTitle")
	self.txt_mvpPower = viewNode:getChildAutoType("txt_mvpPower")

	--self.model:setScale(0.7,0.7)
	---Do not modify following code--------
	--{vmFields}:UIPublic_ReWard.ReWardView
		--{vmFieldsEnd}:UIPublic_ReWard.ReWardView
	--Do not modify above code-------------
	
	self.curenFightName=self.view:getChildAutoType("curenFightName")
	
	local mapConfig = BattleModel:getMapConfig(RewardModel:getArrayType())
	if mapConfig and mapConfig.autoCloseTime then
		if self.autoStartTimer then
			Scheduler.unschedule(self.autoStartTimer)
		end
		self.autoStartTimer=Scheduler.schedule(function(time)
			self:closeView()
		end,mapConfig.autoCloseTime)
	end
	
end

--gamePlayType=185,
--playName="新玩家48797",
--fromBattleRecordType=1,
--type="SHAREVIDEO",
--enemyName="胖胖的嫦娥",
--recordId="Y2v3FrBEnvbYRujR",
--serverId=99097,

function ReWardView:_initEvent( ... )
   
end

function ReWardView:getMyTotalHurt(battleData)
	local playerData={}
	local enemyData={}
	local totalHurt = 0
	local playerInfo = battleData.gamePlayInfo.playerInfo or {}
	local myId = tonumber(PlayerModel.userid)
	local isRight = false
	for i = 1,2, 1 do
		local platerItemInfo=playerInfo[i]
		if platerItemInfo and platerItemInfo.playerId and (i == 2) and (platerItemInfo.playerId == myId) then
			isRight = true
		end
	end

	local battleObjSeqs=battleData.battleObjSeq or {}
	for i, battleObjSeq in pairs(battleObjSeqs) do
		if battleObjSeq.type~=3 and battleObjSeq.type~=4 then
			if isRight then
				if  battleObjSeq.id>BattleModel.HeroPos.enemy.pos then
					totalHurt=totalHurt+battleObjSeq.hurt
				end
			else
				if  battleObjSeq.id>BattleModel.HeroPos.enemy.pos then
				else
					totalHurt=totalHurt+battleObjSeq.hurt
				end
			end	
		end
	end
	return totalHurt == 0 and 1 or totalHurt
end

function ReWardView:_initUI( )
	self:_initVM()
	CrossTeamPVPModel.interfaceTypeFlag = false -- 组队竞技 标记
	--local MapWidth=fgui.GRoot:getInstance():getViewWidth()
	--local MapHeight=fgui.GRoot:getInstance():getViewHeight()
	--local skeletonNode = SpineUtil.createSpineObj(self.GoWrap,Vector2(0,0),nil,PathConfiger.getSettlementRoot(),"Ef_jiesuan")
	local isWin= self._args.isWin
	--local ccNode = skeletonNode:getNodeForSlot("lihui")--找到插槽的挂点
	
	self.view:getTransition("tween"):playReverse()
	self.view:getTransition("tween"):stop()
	Scheduler.schedule(function()
		if tolua.isnull(self.view) then
			return
		end
		self.view:getTransition("tween"):play(function() end)
	end,0.05,1)
	

	--print(086,"FightManager.getBettleData")
    local battleData=RewardModel:getBattleData() or RewardModel:getSkipBattleData(RewardModel:getArrayType())
 	local mvpHero 
	if battleData then 
		mvpHero= ModelManager.BattleModel:getMVPHero(1,battleData.battleObjSeq)
	end	
	-- 组队竞技场 取自己的MVP
	if self._args.playType == GameDef.GamePlayType.WorldTeamArena then
		mvpHero = CrossTeamPVPModel:getMVPHero()
	end

	-- 跨服天梯冠军赛预选赛阶段取自己的mvp
	if self._args.playType == GameDef.GamePlayType.SkyLadChampion then
		mvpHero = CrossLaddersChampModel:getMVPHero(battleData)
	end

	local gamePlayType=RewardModel:getGamePlayType()
	self.shareBtn:setVisible(ChatModel:isSharePlayType(gamePlayType))
	self.shareBtn:addClickListener(function ()
			
			local params={
				gamePlayType=gamePlayType,
				fromBattleRecordType=3,
				recordId=battleData.recordId,
			}
			
			local function success(data)
				ViewManager.open("ShareVideoView",params)
			end
			RPCReq.BattleRecord_Share(params, success)
	end)
	local hasMvp = self._args.hasMvp == nil and true or self._args.hasMvp
	self.view:getController("showMvp"):setSelectedIndex((mvpHero ~= nil and hasMvp) and 1 or 0)
	self.spineParent = self.view:getChildAutoType("spineParent")
	self.txt_mvpTitle:setText(Desc.RewardView_mvpTitle)
	if mvpHero and hasMvp then
		local mvpHurt = mvpHero.hurt
		local totalHurt = self:getMyTotalHurt(battleData)
		self.txt_mvpPower:setText(string.format(DescAuto[340],mvpHurt,math.floor(mvpHurt/totalHurt*100+0.5))) -- [340]="%s（%s%%）"
		self.model:setData(mvpHero.code,nil,nil,mvpHero.fashion)
		local config = DynamicConfigData.t_hero[mvpHero.code]
		if config.sound2 and #config.sound2>0 then
			self.soundId = SoundManager.playSound(config.sound2[1],false)
		end
	end

	self.view:getController("showData"):setSelectedIndex((mvpHero and hasMvp) and 1 or 0)
	self.dataShow:addClickListener(function ()
		if self._args.playType == GameDef.GamePlayType.HorizonPvp then
			local data = {}
			data.battleeUuid = self._args.fightData.battleRecord
			data.win = self._args.fightData.score > 0
			data.score = self._args.fightData.score
			data.playerData = self._args.fightData.pkInfo
			ViewManager.open("CrossPVPResultView",data)
		elseif self._args.playType == GameDef.GamePlayType.WorldTeamArena then
			local reqInfo = {
			}
			RPCReq.WorldTeamArena_GetRecordInfos(reqInfo,function(params)  
				local data = params.records or {}
				data = data[1]
				ViewManager.open("CrossTeamPVPRecordInView",{data = data})
			end)
		else
			ViewManager.open("BattledataView",{isWin=self._args.isWin,isRecord=true,battleData=battleData})
		end
	end)

	
	
	local time = self._args.isWin and 8/24 or 7/24
	Scheduler.schedule(function()
		if tolua.isnull(self.view) then
			return
		end
		local effectName1 = self._args.isWin and "zhandoushengli" or "zhandoushibai"
		local effectName2 = self._args.isWin and "zhandoushengli_loop" or "zhandoushibai_loop"
		local spine1 =  SpineUtil.createSpineObj(self.spineParent, vertex2(self.spineParent:getWidth()/2,self.spineParent:getHeight()/2), effectName1, "Spine/ui/jiesuan", "efx_jiesuan", "efx_jiesuan",false)
		spine1:setCompleteListener(function( name )
			spine1:setAnimation(0,effectName2,true)
		end)
	end,0.2,1)
	local arrayType= self._args.arrayType or RewardModel:getArrayType()
	if  ArrayName[arrayType] and self.curenFightName then
		self.curenFightName:setText(string.format(Desc.battle_ArryName,ArrayName[arrayType]))
	end
	
    --后台战斗的结算特殊显示
	if FightManager.isOnBack(arrayType) or self._args.isWin then
		 self:toReturnBattleReward()
		 return 
	else
		self.view:getController("hasAgain"):setSelectedIndex(self._args.againFunc  and 1 or 0)
		self.btnAgain:addClickListener(function()
			if self._args.againFunc then
				self._args.againFunc()
			end
			self:closeView()
		end,1)
		if self._args.playType == GameDef.GamePlayType.HorizonPvp then
			local diff = math.abs(self._args.fightData.newRank - self._args.fightData.oldRank)
			self.loseMark:setText(string.format(Desc.CrossPVPDesc12,self._args.fightData.newRank,diff))
			self.loseRank:setText(string.format(Desc.CrossPVPDesc13,CrossPVPModel:getBaseMark(),self._args.fightData.score))
		elseif self._args.playType == GameDef.GamePlayType.WorldTeamArena then
			local data = CrossTeamPVPModel.battleResultInfo or {}
			self.loseMark:setText(string.format(Desc.CrossPVPDesc12,data.myRank or 0,data.addRank or 0))
			self.loseRank:setText(string.format(Desc.CrossPVPDesc13,data.myScore or 0 ,data.addScore or 0))
		elseif self._args.playType == GameDef.GamePlayType.SkyLadder then
			local data = CrossTeamPVPModel.battleResultInfo or {}
			self.loseMark:setText(string.format(Desc.CrossLadders_str23,CrossLaddersModel.myNewRank or 0))
			self.loseRank:setText("")
			local jifen = self.view:getChildAutoType("jifen"):setVisible(false)
		end
	end

end



--后台战斗或者胜利之后的状态显示判断
function ReWardView:toReturnBattleReward()
	local arrayType=self._args.arrayType or RewardModel:getArrayType()
	if self._args.data and self._args.data.type == GameDef.GamePlayType.BloodAbyss then 
		self.view:getController("hasAgain"):setSelectedIndex(0)
		return 
	end
	if self._args.isWin then
		if self._args.activeType then
			self:toShowPataReWard()
			self.btnAgain:addClickListener(function()
					if self._args.againFunc then
						self._args.againFunc(self._args.activeType,arrayType)
					end
					self:closeView()
			end,1)
			return
		end
	end
	self.view:getController("hasAgain"):setSelectedIndex(1)
	local title=ArrayName[arrayType] or DescAuto[341] -- [341]="未知玩法"
	local openInfo=ViewArrayType[arrayType]
	self.btnAgain:setTitle(DescAuto[342]..title) -- [342]="返回"
	self.btnAgain:addClickListener(function()
			local  frontType=FightManager.frontArrayType()
			if frontType then
				--Dispatcher.dispatchEvent(EventType.battle_backGroud)
				Dispatcher.dispatchEvent(EventType.battle_close,{arrayType=self._args.arrayType})
				ViewManager.showMainView()
			end
			if openInfo then			
				if arrayType == GameDef.BattleArrayType.Copy  then
					local gamePlayType	=RewardModel:getGamePlayType()
					local configInfo=DynamicConfigData.t_copy[gamePlayType]
					local moduleId=101
					if configInfo and configInfo[1].moduleId  then
						 moduleId= configInfo[1].moduleId 
					end
					ViewManager.doOpen(openInfo.view,{moduleId=moduleId})
				else
					local cityId=PushMapModel.city or 1	--# 最新城市
					local chapterId= PushMapModel.point or 1 	--# 最新章节
					local pointId= PushMapModel.level or 1	--# 最新关卡
					if arrayType == 4 and cityId == 1 and chapterId == 1 then
						--第一关不能跳转，临时解决新手问题
						return
					end
					ViewManager.doOpen(openInfo.view,openInfo.args)
				end
			
			end
			self:closeView()
	end,1)
	local cityId=PushMapModel.city or 1	--# 最新城市
	local chapterId= PushMapModel.point or 1 	--# 最新章节
	local pointId= PushMapModel.level or 1	--# 最新关卡
	if arrayType == 4 and cityId == 1 and chapterId == 1 then
		--第一关不能跳转，临时解决新手问题
		self.btnAgain:setAlpha(0)
	else
		self.btnAgain:setAlpha(1)
	end
	
	if openInfo then
		local viewNode=ViewManager.getView(openInfo.view)
		if viewNode  then
			self.view:getController("hasAgain"):setSelectedIndex(0)
		end
	end

	
end	


--爬塔的战斗结算特殊展示
function ReWardView:toShowPataReWard()
	if self._args.isWin then
		self.btnAgain:setTitle(DescAuto[343]) -- [343]="下一层"
		self.view:getController("hasAgain"):setSelectedIndex(1)
	end
end



function ReWardView:onViewControllerChanged()
	Super.onViewControllerChanged(self)
	if self.ctlView[self._prePage] then
		if self._args.showLose then
			self.ctlView[self._prePage]:setVisible(true)
		else
			self.ctlView[self._prePage]:setVisible(false)
		end
	end
	Scheduler.schedule(function()
	  if tolua.isnull(self.view) then
		  return
	  end		
	  self:pushReward()
	end,0.1,1)
	-- if self._args.gameType == GameDef.GamePlayType.SkyLadder then
	-- 	self:setCrossLadders()
	-- end
	if self._args and self._args.data and self._args.data.type == GameDef.GamePlayType.CrossSuperMundane then
		self:setExtraordinaryPVPLose()
	end
end


function ReWardView:pushReward()
	local isWin= self._args.isWin
	if isWin then
		self.view:getController("isWin"):setSelectedPage("win")
		if self.ctlView[self._prePage] then
			self.ctlView[self._prePage]:setVisible(true)
		end
		SoundManager.playSound(17,false)
	else
		self.view:getController("isWin"):setSelectedPage("lose")
		self:setLoseData()
		SoundManager.playSound(16,false)
	end
end


function ReWardView:setLoseData( )

	--guideData= id = 5,desc = "扩展英雄",res = 5,level = 1,windowId = 13
	local allData={}
	for i, guideData in ipairs(DynamicConfigData.t_rewardGuide) do
		if PlayerModel.level>=guideData.level then
			table.insert(allData,guideData)
		end

	end
	local chooseData={}
	for i = 1, 3 do
		local R_index= math.random(1,#allData)
		table.insert(chooseData,clone(allData[R_index]))
		table.remove(allData,R_index)

	end
	--print(521,chooseData)
	self.guideList:setItemRenderer(function(index,obj)
			local data= chooseData[index+1]
			obj:getChildAutoType("icon"):setURL(PathConfiger.getLoseGuide(data.res))
			obj:getChildAutoType("title"):setText(data.desc)
			obj:getController("showFrame"):setSelectedIndex(0)
			print(521,data.desc,PathConfiger.getLoseGuide(data.res))
			obj:addClickListener(function ()
				ModuleUtil.openModule( data.windowId , true )
				ViewManager.close("ReWardView")
			end,11)
		end
	)
	self.guideList:setNumItems(#chooseData)

end

-- 跨服天梯赛特殊处理
function ReWardView:setCrossLadders()
	if not self._args.isWin then
		local loseGroup = self.view:getChildAutoType("loseGroup")
		loseGroup:setVisible(false)
		if self.ctlView[self._prePage] then
			self.ctlView[self._prePage]:setVisible(true)
		end
	end
end

-- 超凡段位赛特殊处理
function ReWardView:setExtraordinaryPVPLose()
	if not self._args.isWin then
		local loseGroup = self.view:getChildAutoType("loseGroup")
		loseGroup:setVisible(false)
		if self.ctlView[self._prePage] then
			self.ctlView[self._prePage]:setVisible(true)
		end
	end
end

function ReWardView:_exit( ... )
	if self.autoStartTimer then
		Scheduler.unschedule(self.autoStartTimer)
	end
	if ModelManager.PlayerModel then ModelManager.PlayerModel:set_awardByType(RewardModel:getGamePlayType(),nil) end
	SoundManager.stopSound(self.soundId)
	if self._args.closefuc then
		self._args.closefuc()
	end
	Scheduler.scheduleNextFrame(function()
		Dispatcher.dispatchEvent(EventType.module_open_hint)
		Dispatcher.dispatchEvent(EventType.reward_close_event)
	end)
	RewardModel:playRewardInQue()--如果同时还有别的战斗结算按顺序弹出
	FairyLandModel:tipsReward() -- 秘境寻宝次数达到后自动弹出奖励
	if MoonAweTempleModel.godId then
		MoonAweTempleModel:reqCurGodPosInfo(MoonAweTempleModel.godId) -- 月慑神殿挑战界面刷新
	end
end



return ReWardView
