--Name : GroupBuyGiftView.lua
--Author : generated by FairyGUI
--Date : 2020-5-29
--Desc : 团购礼包

local GroupBuyGiftView, Super = class("GroupBuyGiftView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
function GroupBuyGiftView:ctor()
    --LuaLog("GroupBuyGiftView ctor")
    self._packName = "OperatingActivities"
    self._compName = "GroupBuyGiftView"
	self._moduleId = OperatingActivitiesModel:getModuleId(GameDef.ActivityType.GroupBuyGift)
	if self._moduleId == 2 then
		self._packName = "GroupBuyGift2"
		self._compName = "GroupBuyGiftView2"
	end
    self._rootDepth = LayerDepth.PopWindow
    self.viewIndexTag = GameDef.ActivityType.GroupBuyGift
    self.awardShowFlag = false
    self.activeInfo = {}
    self.activityEnable = false
end

function GroupBuyGiftView:_initEvent()
end

function GroupBuyGiftView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:OperatingActivities.GroupBuyGiftView
    vmRoot.txt_countdowm = viewNode:getChildAutoType("$txt_countDown")
    --list
    vmRoot.List_reward = viewNode:getChildAutoType("$list_reward")
    --text
    --{vmFieldsEnd}:OperatingActivities.GroupBuyGiftView
    --Do not modify above code-------------
end

function GroupBuyGiftView:_initUI()
    self:_initVM()
    local vmRoot = self
    local viewNode = self.view
    vmRoot.txt_desc = viewNode:getChildAutoType("txt_desc")
    vmRoot.txt_giftName = viewNode:getChildAutoType("txt_giftName")
    vmRoot.txt_yuanjia = viewNode:getChildAutoType("txt_yuanjia")
    vmRoot.txt_zhekou = viewNode:getChildAutoType("txt_zhekou")
    vmRoot.txt_yudingnum = viewNode:getChildAutoType("txt_yudingnum")
    vmRoot.txt_yudingtime = viewNode:getChildAutoType("txt_yudingtime")
    vmRoot.txt_zhekouxian = viewNode:getChildAutoType("txt_zhekouxian")
    vmRoot.txt_zhekoudesc = viewNode:getChildAutoType("txt_zhekoudesc")
    vmRoot.img_banner = viewNode:getChildAutoType("$img_banner")
    vmRoot.btn_yuding = viewNode:getChildAutoType("btn_yuding")
    vmRoot.btn_yuding1 = viewNode:getChildAutoType("btn_yuding1")
    vmRoot.btn_buy = viewNode:getChildAutoType("btn_buy")
    vmRoot.btn_buy1 = viewNode:getChildAutoType("btn_buy1")
    vmRoot.com_bar = viewNode:getChildAutoType("com_bar")
    vmRoot.c1 = viewNode:getController("c1")
    vmRoot.c2 = viewNode:getController("c2")
    self.awardView = viewNode:getChildAutoType("awardView")
    self.awardViewBg = self.awardView:getChildAutoType("n0")
    self.awardViewList = self.awardView:getChildAutoType("list")
    self.awardCloseBtn = self.awardView:getChildAutoType("viewCloseBtn")
    self.awardShowCtrl = self.view:getController("awardShowCtrl")
    vmRoot.btn_gifttouch = viewNode:getChildAutoType("btn_gifttouch")
    vmRoot.com_yudinggift = viewNode:getChildAutoType("com_yudinggift")
    vmRoot.btn_gift = viewNode:getChildAutoType("btn_gift")

    self.lihuiDisplay = BindManager.bindLihuiDisplay(self.img_banner)
    self.activeInfo = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    GuildModel:setguildFirstLoginState(self.viewIndexTag .. "GroupBuyRed")
    RedManager.updateValue("V_ACTIVITY_" .. self.viewIndexTag, false)
    if not self.activeInfo then
        return
    end
    self:showActiveTime()
    self:showRewardList()
    self:showBarCom()
end

function GroupBuyGiftView:showRewardList()
    if self.activeInfo.showContent then
        local configInfo = DynamicConfigData.t_GroupBuyGift[self.activeInfo.showContent.moduleId]
        self.lihuiDisplay:setData(configInfo.modelID, nil, true)
        self.txt_desc:setText(configInfo.desc)
        self.txt_giftName:setText(configInfo.name)
        self.txt_yuanjia:setText(string.format(Desc.GroupBuyGiftView_str94, configInfo.cost))
        self.txt_zhekoudesc:setText(string.format(Desc.GroupBuyGiftView_str95, configInfo.deduct))
        local buyState = OperatingActivitiesModel:getGroupBuyState(self.viewIndexTag)
        self.c1:setSelectedIndex(buyState)
        local YudingState = OperatingActivitiesModel:getGroupYudingState(self.viewIndexTag)
        self.c2:setSelectedIndex(YudingState)
        local yudingCtr=  self.com_yudinggift:getController("c1")
        yudingCtr:setSelectedIndex(YudingState)
        local yudingNum = OperatingActivitiesModel:getGroupYudingNum(self.viewIndexTag)
        self.txt_yudingnum:setText(string.format(Desc.GroupBuyGiftView_str96, yudingNum))
        local hasZhekou, zhekouNum, seleIndex = self:getZhekouNum(configInfo)
        if hasZhekou == false then
            self.txt_zhekou:setText("")
            self.txt_zhekouxian:setVisible(false)
        else
            self.txt_zhekouxian:setVisible(true)
            self.txt_zhekou:setText(string.format(Desc.GroupBuyGiftView_str97, configInfo.cost * zhekouNum))
        end
        local yudingStartime = (self.activeInfo.realStartMs)
        local yudingEndtime = (self.activeInfo.realStartMs / 1000 + (configInfo.bookDays-1) * 24 * 60 * 60) * 1000
        local starTimestr = TimeLib.msToString(yudingStartime, Desc.GroupBuyGiftView_str98)
        local endTimestr = TimeLib.msToString(yudingEndtime,Desc.GroupBuyGiftView_str99)
        self.txt_yudingtime:setText(string.format(Desc.GroupBuyGiftView_str100, starTimestr, endTimestr))
        self.btn_yuding1:setTitle(string.format(Desc.GroupBuyGiftView_str101, TimeLib.msToString((yudingEndtime+24*60*60*1000),Desc.GroupBuyGiftView_str102)))--策划要求预订时间加一天
        self.awardViewList:setItemRenderer(
            function(index, obj)
                local award = self.awardViewList._dataTemplate[index + 1]
                local itemcell = BindManager.bindItemCell(obj)
                itemcell:setData(award.code, award.amount, award.type)
            end
        )
    end
end

function GroupBuyGiftView:showBarCom()
    local yudingNum = OperatingActivitiesModel:getGroupYudingNum(self.viewIndexTag)
    local configInfo = self:getConfigInfo()
    if not configInfo then
       return 
    end
    local hasZhekou, zhekouNum, seleIndex = self:getZhekouNum(configInfo)
    local arr = configInfo.timesToDiscount
	
    for i = 1, #arr, 1 do
        local com = self.view:getChildAutoType("com_" .. i)
        local zhekouItem = arr[i]
        if com then
            local c1 = com:getController("c1")
			
			local txt_money = com:getChildAutoType("txt_money")
			txt_money:setText(string.format(Desc.GroupBuyGiftView_str113, math.floor(zhekouItem.val * configInfo.cost)))
            if i <= 3 then
                local txt_desc = com:getChildAutoType("txt_desc")
                txt_desc:setText(string.format(Desc.GroupBuyGiftView_str103, zhekouItem.val * 10))
                local txt_num = com:getChildAutoType("txt_num")
                txt_num:setText(string.format("%s", zhekouItem.type))
            else
                local txt_num = com:getChildAutoType("txt_num")
                txt_num:setText(string.format("%s", zhekouItem.type))
            end
            if seleIndex-1 == i then
                c1:setSelectedIndex(0)
            else
                c1:setSelectedIndex(1)
            end
        end
    end
    local max = 0
    max = arr[#arr].type
    local pingjun = max / #arr
    local value = 0
    if seleIndex <= 1 then
        value = (arr[1].type) / pingjun * yudingNum
    else
        local top = arr[seleIndex - 1].type
        local cur = arr[seleIndex].type
        local cha = cur - top
        local remine = yudingNum - top
        value = (seleIndex - 1) * pingjun + (pingjun / cha) * remine
    end
    self.com_bar:setMax(max)
    self.com_bar:setValue(value)
end

function GroupBuyGiftView:showActiveTime()
    local actData = self.activeInfo
    if not actData then
        return
    end
    local actId = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then
        return
    end
    if status == 2 and addtime == -1 then
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = addtime / 1000
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if lastTime > 0 then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
                local function onCountDown(time)
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
                local function onEnd(...)
                    self.activityEnable = true
                    self.txt_countdowm:setText(Desc.activity_txt4)
                end
                if self.calltimer then
                    TimeLib.clearCountDown(self.calltimer)
                end
                self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
            else
                self.txt_countdowm:setText(Desc.activity_txt4)
            end
        end
    end
end

function GroupBuyGiftView:getZhekouNum(configInfo)
    local hasZhekou = false
    local zhekouNum = 1
    local seleIndex = 0
    local yudingNum = OperatingActivitiesModel:getGroupYudingNum(self.viewIndexTag)
    local arr = configInfo.timesToDiscount
    for i = 1, #arr, 1 do
        local zhekouItem = arr[i]
        local nextzhekouItem = arr[i + 1]
        if not nextzhekouItem then
            nextzhekouItem = arr[i]
        end
        if yudingNum < arr[1].type then
            hasZhekou = false
            zhekouNum = 1
            seleIndex = 0
        elseif yudingNum >= zhekouItem.type and yudingNum < nextzhekouItem.type then
            hasZhekou = true
            zhekouNum = zhekouItem.val
            seleIndex = i+1
        elseif yudingNum >= arr[#arr].type then
            hasZhekou = true
            zhekouNum = arr[#arr].val
            seleIndex = i
        end
    end
    return hasZhekou, zhekouNum, seleIndex
    --是否有折扣，折扣多少，选中
end

function GroupBuyGiftView:_initEvent()
    self.btn_gifttouch:addClickListener(
        function(...)
            if self.awardShowFlag then
                self.awardShowFlag = false
                self.awardShowCtrl:setSelectedIndex(0)
            else
                self.awardShowFlag = true
                self.awardShowCtrl:setSelectedIndex(1)
                local configInfo = self:getConfigInfo()
                if not configInfo then
                   return 
                end
                local posx = self.btn_gifttouch:getX()
                local posy = self.btn_gifttouch:getY()
                self.awardViewList:setData(configInfo.gift)
                self.awardViewList:setPivot(0.5, 0.5, true)
                self.awardViewBg:setPivot(0.5, 0.5, true)
                self.awardViewList:setX(posx + 10)
                self.awardViewBg:setX(posx + 10)
                self.awardViewList:setY(posy + 100)
                self.awardViewBg:setY(posy + 105)
                self.awardViewList:resizeToFit(#configInfo.gift)
            end
        end
    )

    self.btn_gift:addClickListener(
        function(...)
            if self.awardShowFlag then
                self.awardShowFlag = false
                self.awardShowCtrl:setSelectedIndex(0)
            else
                self.awardShowFlag = true
                self.awardShowCtrl:setSelectedIndex(1)
                local configInfo = self:getConfigInfo()
                if not configInfo then
                   return 
                end
                local posx = self.btn_gifttouch:getX()
                local posy = self.btn_gifttouch:getY()
                self.awardViewList:setData(configInfo.gift)
                self.awardViewList:setPivot(0.5, 0.5, true)
                self.awardViewBg:setPivot(0.5, 0.5, true)
                self.awardViewList:setX(posx + 10)
                self.awardViewBg:setX(posx + 10)
                self.awardViewList:setY(posy + 100)
                self.awardViewBg:setY(posy + 105)
                self.awardViewList:resizeToFit(#configInfo.gift)
            end
        end
    )

    self.com_yudinggift:addClickListener(
        function(...)
            if self.awardShowFlag then
                self.awardShowFlag = false
                self.awardShowCtrl:setSelectedIndex(0)
            else
                self.awardShowFlag = true
                self.awardShowCtrl:setSelectedIndex(1)
                local configInfo = self:getConfigInfo()
                if not configInfo then
                    return
                end
                local posx = self.com_yudinggift:getX()
                local posy = self.com_yudinggift:getY()
                self.awardViewList:setData(configInfo.bookReward)
                self.awardViewList:setPivot(0.5, 0.5, true)
                self.awardViewBg:setPivot(0.5, 0.5, true)
                self.awardViewList:setX(posx + 10)
                self.awardViewBg:setX(posx + 10)
                self.awardViewList:setY(posy - 30)
                self.awardViewBg:setY(posy - 25)
                self.awardViewList:resizeToFit(#configInfo.bookReward)
            end
        end
    )

    self.btn_yuding:addClickListener(
        --立即预定
        function(...)
            local configInfo = self:getConfigInfo()
            local price = 0
            if configInfo then
                price = configInfo.bookCost
            end
            local info = {}
            info.text = string.format(Desc.GroupBuyGiftView_str104, price)
            info.title = Desc.GroupBuyGiftView_str105
            info.yesText = Desc.materialCopy_str3
            info.noText = Desc.materialCopy_str4
            info.okText = "okText"
            info.noClose = "yes"
            info.type = "yes_no"
            info.mask = true
            info.onYes = function()
                ModelManager.RechargeModel:directBuy(price, GameDef.StatFuncType.SFT_GroupBuyGift, 1, configInfo.name,nil,configInfo.showName1)
            end
            Alert.show(info)
        end
    )

    self.btn_yuding1:addClickListener(
        --xxx天后可购买
        function(...)
        end
    )

    self.btn_buy:addClickListener(
        --立即购买
        function(...)
            local configInfo = self:getConfigInfo()
            local price = 0
            if configInfo then
                local YudingState = OperatingActivitiesModel:getGroupYudingState(self.viewIndexTag)
                local hasZhekou, zhekouNum, seleIndex = self:getZhekouNum(configInfo)
                price = configInfo.cost * zhekouNum - configInfo.deduct
                if YudingState == 0 then--1是预定过0无预订
                    price = configInfo.cost * zhekouNum
                    ModelManager.RechargeModel:directBuy(
                        price,
                        GameDef.StatFuncType.SFT_GroupBuyGift,
                        1,
                        configInfo.name,
						nil,
						configInfo.showName1
                    )
                else
                    local info = {}
                    info.text = string.format(Desc.GroupBuyGiftView_str106, configInfo.deduct, price)
                    info.title =Desc.GroupBuyGiftView_str107
                    info.yesText = Desc.materialCopy_str3
                    info.noText = Desc.materialCopy_str4
                    info.okText = "okText"
                    info.noClose = "yes"
                    info.type = "yes_no"
                    info.mask = true
                    info.onYes = function()
                        ModelManager.RechargeModel:directBuy(
                            price,
                            GameDef.StatFuncType.SFT_GroupBuyGift,
                            1,
                            configInfo.name,
							nil,
							configInfo.showName1
                        )
                    end
                    Alert.show(info)
                end
            end
        end
    )

    self.btn_buy1:addClickListener(
        --已购买
        function(...)
            RollTips.show(Desc.GroupBuyGiftView_str108)
        end
    )

    --奖励控制器
    self.awardCloseBtn:addClickListener(
        function(...)
            if self.awardShowFlag then
                self.awardShowCtrl:setSelectedIndex(0)
                self.awardShowFlag = false
            else
                self.awardShowFlag = true
                self.awardShowCtrl:setSelectedIndex(1)
            end
        end
    )

    local btnHelp = self.view:getChildAutoType("btn_help")
    btnHelp:removeClickListener() --池子里面原来的事件注销掉
    btnHelp:addClickListener(
        function()
            local info = {}
            info["title"] = Desc.help_StrTitle192
            info["desc"] = Desc.help_StrDesc192
            ViewManager.open("GetPublicHelpView", info)
        end
    )

end

function GroupBuyGiftView:getConfigInfo()
    local configInfo = {}
    if self.activeInfo and self.activeInfo.showContent then
        configInfo = DynamicConfigData.t_GroupBuyGift[self.activeInfo.showContent.moduleId]
    end
    if next(configInfo)==nil then
        return false
    end
    return configInfo
end

--事件初始化
function GroupBuyGiftView:activity_GroupBuyGiftupdate(...)
    self.activeInfo = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    if not self.activeInfo then
        return
    end
    self:showRewardList()
    self:showBarCom()
end

function GroupBuyGiftView:_exit(...)
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end

return GroupBuyGiftView
