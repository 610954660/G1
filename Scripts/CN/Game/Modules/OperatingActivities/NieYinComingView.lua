--Name : NieYinComingView.lua
--Author : generated by FairyGUI
--Date : 2020-7-8
--Desc : --聂隐降临

local NieYinComingView, Super = class("NieYinComingView", Window)
function NieYinComingView:ctor()
    LuaLog("NieYinComingView ctor")
    self._packName = "OperatingActivities"
    self._compName = "NieYinComingView"
    self._rootDepth = LayerDepth.PopWindow
    self.viewIndexTag = GameDef.ActivityType.HeroCome
    self.starInfo = false
    self.bannerUrl = false
    self.calltimer = false
end

function NieYinComingView:_initEvent()
end

function NieYinComingView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:OperatingActivities.NieYinComingView
    vmRoot.txt_clientDesc = viewNode:getChildAutoType("txt_clientDesc")
    vmRoot.list_item = viewNode:getChildAutoType("$list_item")
    --list
    vmRoot.txt_countDown = viewNode:getChildAutoType("$txt_countDown")
    --text
    vmRoot.img_banner = viewNode:getChildAutoType("$img_banner")

    --loader
    --{vmFieldsEnd}:OperatingActivities.NieYinComingView
    --Do not modify above code-------------
end

function NieYinComingView:setActType(_args)
end

function NieYinComingView:_initUI()
    self:_initVM()
    self.img_bg = self.view:getChildAutoType("img_bg")
    self.cardStarObj = self.view:getChildAutoType("list_star")
    self.img_bg:setURL("UI/activity/neyincomingBg.png")
    self.lihuiDisplay = BindManager.bindLihuiDisplay(self.img_banner)
    local actData = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    if not actData then
        return
    end
    self.starInfo = DynamicConfigData.t_HeroCome[actData.showContent.moduleId]
    if not self.starInfo then
        return
    end
    self.lihuiDisplay:setData(actData.showContent.modelId, nil, true, actData.showContent.fashionId)
    local bindStar = BindManager.bindCardStar(self.cardStarObj)
    local heroConfig = DynamicConfigData.t_hero[actData.showContent.modelId]
    bindStar:setData(heroConfig.heroStar)
    self:showView()
end

function NieYinComingView:showCountTime()
    local actData = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    if not actData then
        return
    end
    local serverTime = OperatingActivitiesModel.NieYinComingServerTime
    local day = actData.showContent.day or 3
    local allTime = (serverTime / 1000) + day * 24 * 60 * 60
    local curtime = ServerTimeModel:getServerTime()
    local lastTime = math.ceil(allTime - curtime)
    if lastTime == -1 then
        self.txt_countDown:setText(Desc.activity_txt5)
    else
        if not tolua.isnull(self.txt_countDown) then
            self.txt_countDown:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
        --TimeLib.formatTime(addtime,true,false)
        end
        local function onCountDown(time)
            if not tolua.isnull(self.txt_countDown) then
                self.txt_countDown:setText(TimeLib.GetTimeFormatDay(time, 2))
            --TimeLib.formatTime(time,true,false)
            end
        end
        local function onEnd(...)
            if not tolua.isnull(self.txt_countDown) then
                self.txt_countDown:setText(Desc.activity_txt13)
            end
        end
        if self.calltimer then
            TimeLib.clearCountDown(self.calltimer)
            self.calltimer = false
        end
        self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
    end
end

function NieYinComingView:showView()
    self:showCountTime()
    local taskFinishnum = 0
    for i = 1, 4, 1 do
        local itemKey = "$item" .. i
        local itemObj = self.view:getChildAutoType(itemKey)
        local itemConfig = self.starInfo[i]
        if itemObj and itemConfig then
            local itemCell = itemObj:getChildAutoType("itemCell")
            itemCell = BindManager.bindItemCell(itemCell)
            local data = itemConfig.rewardDisplay[1]
            itemCell:setData(data.code, data.amount, data.type)
            local txt_desc = itemObj:getChildAutoType("txt_desc")
            txt_desc:setText(itemConfig.name)
            local ctrl = itemObj:getController("c1")
            local taskId = itemConfig.id
            local num, lingqu = OperatingActivitiesModel:getNieYinComingLingquState(taskId)
            ctrl:setSelectedIndex(lingqu)
            if lingqu == 1 or lingqu == 2 then
                taskFinishnum = taskFinishnum + 1
            end
            if i == 4 then
                local taskDesc = itemObj:getChildAutoType("taskDesc")
                taskDesc:setText(Desc.NieYinComingView_str109 .. ColorUtil.formatColorString1(taskFinishnum .. "/3", "#119717"))
            end

            local btn_enter = itemObj:getChildAutoType("$btn_enter")
            if btn_enter then
                btn_enter:removeClickListener(100)
                btn_enter:addClickListener(
                    function(context)
                        ModuleUtil.openModule(itemConfig.moduleOpen, true)
                    end,
                    100
                )
            end
            local btn_get = itemObj:getChildAutoType("$btn_get")
            btn_get:removeClickListener(100)
            btn_get:addClickListener(
                function(context)
                    OperatingActivitiesModel:HeroComeRecieveReward(itemConfig.moduleId, itemConfig.id)
                end,
                100
            )
        end
    end
end

function NieYinComingView:activity_nieYingComingUpdate(...)
    local actData = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    if not actData then
        return
    end
    self.starInfo = DynamicConfigData.t_HeroCome[actData.showContent.moduleId]
    if not self.starInfo then
        return
    end
    self:showView()
end

function NieYinComingView:_exit()
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end

return NieYinComingView
