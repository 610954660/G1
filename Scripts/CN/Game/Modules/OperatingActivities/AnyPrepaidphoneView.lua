--Name : AnyPrepaidphoneView.lua
--Author : generated by FairyGUI
--Date : 任意充值

local AnyPrepaidphoneView, Super = class("AnyPrepaidphoneView", Window)
function AnyPrepaidphoneView:ctor()
    LuaLog("AnyPrepaidphoneView ctor")
    self._packName = "EverDayAccumulated"
    self._compName = "AnyPrepaidphoneView"
    self._rootDepth = LayerDepth.PopWindow
    self.viewIndexTag = GameDef.ActivityType.WantCharge
    self.currTabIndex = false
    self.state = false
    self.starInfo = false
    self.bannerUrl = false
    self.itemList = false
    self.btnGet = false
    self.txtRecharge = false
    self.btnClose = false
    self.txt_moneyNum = false
end

function AnyPrepaidphoneView:_initEvent()
end

function AnyPrepaidphoneView:_initVM()
end

function AnyPrepaidphoneView:_initUI()
    self:_initVM()
    self.itemList = self.view:getChildAutoType("itemList")
    self.btnGet = self.view:getChildAutoType("btnGet")
    self.txtRecharge = self.view:getChildAutoType("txtRecharge")
    self.btnClose = self.view:getChildAutoType("btnClose")
    self.txt_moneyNum = self.view:getChildAutoType("txt_moneyNum")
    self.txt_countdowm = self.view:getChildAutoType("$txt_countDown")
    self.itemList:setVirtual()
    self.itemList:setItemRenderer(
        function(index, obj)
            self:itemListRenderer(index, obj)
        end
    )
    self.currTabIndex = 1
    self.view:getChildAutoType("img_bg"):setURL(PathConfiger.GetUIFrame("EverDayAccumulated/frame1", "png"))
    self:showCountTime()
    self:updateView()
    self:updateItemList()
end

function AnyPrepaidphoneView:showCountTime()
    local actData = ModelManager.ActivityModel:getActityByType(self.viewIndexTag)
    if not actData then
        return
    end
    local actId = actData.id
    local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
    if not addtime then
        return
    end
    if status == 2 and addtime == -1 then
        self.txt_countdowm:setText(Desc.activity_txt5)
    else
        local lastTime = addtime / 1000
        if lastTime == -1 then
            self.txt_countdowm:setText(Desc.activity_txt5)
        else
            if lastTime > 0 then
                self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
                local function onCountDown(time)
                    self.txt_countdowm:setText(TimeLib.GetTimeFormatDay(time, 2))
                end
                local function onEnd(...)
                    --self.activityEnable = true
                    local info = {}
                    info.text = Desc.activity_txt13
                    info.type = "ok"
                    info.align = "center"
                    info.mask = true
                    info.onOk = function()
                        self:onBtnCloseClick()
                    end
                    Alert.show(info)
                    self.txt_countdowm:setText(Desc.activity_txt13)
                end
                if self.calltimer then
                    TimeLib.clearCountDown(self.calltimer)
                end
                self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
            else
                self.txt_countdowm:setText(Desc.activity_txt13)
            end
        end
    end
end

function AnyPrepaidphoneView:updateView()
    self.starInfo, self.bannerUrl = OperatingActivitiesModel:getAccumulatedAddInfo(self.viewIndexTag, true)
    if not self.starInfo then
        return
    end
    local itemInfo = self.starInfo[self.currTabIndex]
    if not itemInfo then
        return
    end
    self.txt_moneyNum:setText(itemInfo.accType)
    local hasGet =
        OperatingActivitiesModel:getAccumulatedAddLingqu(self.viewIndexTag, self.starInfo[self.currTabIndex].id)
    local money = OperatingActivitiesModel:getAccumulatedAddMoney(self.viewIndexTag)
    if money < self.starInfo[self.currTabIndex].accType then --无法领取
        self.state = 0
    elseif money >= self.starInfo[self.currTabIndex].accType and hasGet == false then --可领取
        self.state = 1
    elseif money >= self.starInfo[self.currTabIndex].accType and hasGet == true then --已领取
        self.state = 2
    end
    print(999, "累充", money, self.state)
    self.txtRecharge:setText(string.format(Desc.AnyPrepaidphoneView_str92, money))
    self.view:getController("status"):setSelectedIndex(self.state)
    self.view:getChildAutoType("imgRed"):setVisible(self.state == 1)
end

function AnyPrepaidphoneView:updateItemList()
    if not self.starInfo or not self.currTabIndex then
        return
    end
    if not self.starInfo[self.currTabIndex] then
       return 
    end
    self.itemList:setNumItems(#self.starInfo[self.currTabIndex].reward)
end

function AnyPrepaidphoneView:itemListRenderer(index, obj)
    local itemcell = BindManager.bindItemCell(obj)
    local award = self.starInfo[self.currTabIndex].reward[index + 1]
    itemcell:setData(award.code, award.amount, award.type)
    itemcell:setIsHook(self.state == 2)
end

function AnyPrepaidphoneView:_initEvent()
    self.btnGet:addClickListener(
        function()
            self:onBtnGetClick()
        end,
        1
    )

    self.btnClose:addClickListener(
        function()
            self:onBtnCloseClick()
        end,
        1
    )
end

function AnyPrepaidphoneView:onBtnGetClick()
    if self.state == 0 then
        ModuleUtil.openModule(ModuleId.Recharge.id, false, {page = 3})
    elseif self.state == 1 then
        OperatingActivitiesModel:wantChargeRecvReward(self.viewIndexTag, self.starInfo[self.currTabIndex].id)
    end
end

function AnyPrepaidphoneView:onBtnCloseClick()
    self:closeView()
end

function AnyPrepaidphoneView:activity_AnyPrepaidphoneupdate(...)
    self.starInfo, self.bannerUrl = OperatingActivitiesModel:getAccumulatedAddInfo(self.viewIndexTag, true)
    if not self.starInfo then
        return
    end
    self:updateView()
    self:updateItemList()
end

function AnyPrepaidphoneView:serverTime_crossDay(...) --跨天
    self.starInfo, self.bannerUrl = OperatingActivitiesModel:getAccumulatedAddInfo(self.viewIndexTag, true)
    if not self.starInfo then
        return
    end
    RollTips.show(Desc.AnyPrepaidphoneView_str93)
    self:updateView()
    self:updateItemList()
end

function AnyPrepaidphoneView:_exit()
    self.currTabIndex = false
    self.starInfo = false
    self.bannerUrl = false
    self.state = false
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
end

return AnyPrepaidphoneView
