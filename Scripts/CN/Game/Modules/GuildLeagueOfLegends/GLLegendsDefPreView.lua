--Date :2020-12-31
--Author : generated by FairyGUI
--Desc : 

local GLLegendsDefPreView,Super = class("GLLegendsDefPreView", Window)

function GLLegendsDefPreView:ctor()
	--LuaLog("GLLegendsDefPreView ctor")
	self._packName = "GuildLeagueOfLegends"
	self._compName = "GLLegendsDefPreView"
	self._rootDepth = LayerDepth.PopWindow
	self.guildId = GuildModel.guildHave and GuildModel.guildList.id or 0;
	self.arr = false;
	self.teamLimit = 30;
end

function GLLegendsDefPreView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:GuildLeagueOfLegends.GLLegendsDefPreView
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.btn_def = viewNode:getChildAutoType('btn_def')--GButton
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.list_team = viewNode:getChildAutoType('list_team')--GList
	self.txt_count = viewNode:getChildAutoType('txt_count')--GTextField
	--{autoFieldsEnd}:GuildLeagueOfLegends.GLLegendsDefPreView
	--Do not modify above code-------------
end

function GLLegendsDefPreView:_initListener( )
	self.btn_def:addClickListener(function()
		local battleCall = function (param)
            if (param == "begin") then
                local actStatus = GuildLeagueOfLegendsModel.roundState or 0;
				if (actStatus == GameDef.GuildLeagueState.Pre) then
					print(2233, "防守成功=====");
                    RollTips.show(Desc.HigherPvP_saveDefSuc);
                end
				ViewManager.close("BattlePrepareView");
				if (self.guildId) then
					GuildLeagueOfLegendsModel:getGuildTeamInfo(self.guildId)
				end
			elseif param == "cancel" then
				GuildLeagueOfLegendsModel:initTeamInfo();
				ViewManager.close("BattlePrepareView");
            end
        end
        local fightId = DynamicConfigData.t_GLConst[1].fightId
        local args = {
            fightID = fightId,
            configType= GameDef.BattleArrayType.GuildLeagueOne,
        }
        Dispatcher.dispatchEvent(EventType.battle_requestFunc, battleCall, args);
	end)
end

function GLLegendsDefPreView:_initUI( )
	self:_initVM()
	self:_initListener()
	self.list_team:setVirtual();
	if (self.guildId) then
		GuildLeagueOfLegendsModel:getGuildTeamInfo(self.guildId)
	end
	self:GLOL_MatchInfoUpdate();
end

function GLLegendsDefPreView:GLOL_guildTeam(_, guildId, team)
	if (guildId == self.guildId) then
		self.arr = GuildLeagueOfLegendsModel:rebuildTeamInfo(team.battleArray or {})
		self:upView();
	end
end

function GLLegendsDefPreView:GLOL_MatchInfoUpdate()
	local defShow = GuildLeagueOfLegendsModel.isInMatch and GuildLeagueOfLegendsModel.matchRound ~= GameDef.GuildLeagueRound.Seven and GuildLeagueOfLegendsModel.roundState == GameDef.GuildLeagueState.Pre
	self.btn_def:setVisible(defShow);
end

function GLLegendsDefPreView:upView()
	if (self.arr) then
		self.list_team:setItemRenderer(function(idx, obj)
			local d = self.arr[idx + 1];
			if (not obj.cell) then
				obj.cell = BindManager.bindPlayerCell(obj:getChildAutoType("heroCell"));
			end
			obj.cell:setHead(d.head, d.level, nil, nil, d.headBorder);
			local txt_index = obj:getChildAutoType("txt_index");
			local txt_name = obj:getChildAutoType("txt_name");
			local txt_combat = obj:getChildAutoType("txt_combat");
			local list_hero = obj:getChildAutoType("list_hero");
			if (idx + 1 <= 30) then
				txt_index:setText(idx + 1);
			else
				txt_index:setText(Desc.GLOL_str9);
			end
			txt_name:setText(d.name);
			txt_combat:setText(StringUtil.transValue(d.combat));
			local heroInfos = d.heroInfos;
			list_hero:setItemRenderer(function(i, o)
				local dd = heroInfos[i + 1];
				if (not o.cell) then
					o.cell = BindManager.bindCardCell(o);
				end
				dd.heroId = dd.code;
				dd.heroStar = dd.star;
				o.cell:setData(dd, true);
			end)
			list_hero:setNumItems(#heroInfos or 0)
		end)
		self.list_team:setNumItems(#self.arr)
		self.txt_count:setText(string.format(Desc.GLOL_str8, #self.arr));
	else
		self.list_team:setNumItems(0);
		self.txt_count:setText(string.format(Desc.GLOL_str8, 0));
	end
end

return GLLegendsDefPreView