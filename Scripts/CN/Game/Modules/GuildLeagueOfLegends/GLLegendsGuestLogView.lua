--Date :2020-12-31
--Author : generated by FairyGUI
--Desc : 

local GLLegendsGuestLogView,Super = class("GLLegendsGuestLogView", Window)

function GLLegendsGuestLogView:ctor()
	--LuaLog("GLLegendsGuestLogView ctor")
	self._packName = "GuildLeagueOfLegends"
	self._compName = "GLLegendsGuestLogView"
	self._rootDepth = LayerDepth.PopWindow
	
end

function GLLegendsGuestLogView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:GuildLeagueOfLegends.GLLegendsGuestLogView
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.c1 = viewNode:getController('c1')--Controller
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.list_item = viewNode:getChildAutoType('list_item')--GList
	--{autoFieldsEnd}:GuildLeagueOfLegends.GLLegendsGuestLogView
	--Do not modify above code-------------
end

function GLLegendsGuestLogView:_initListener( )
	
	local arr = {};
	local myGuessInfo = GuildLeagueOfLegendsModel.myGuessInfo or {}
	local curRound = GuildLeagueOfLegendsModel.matchRound
	for _, info in pairs(myGuessInfo) do
		if (info.round < curRound) then
			table.insert(arr, info);
		end
	end
	table.sort(arr, function(a, b)
		return a.round > b.round
	end)
	if (#arr > 0) then
		self.c1:setSelectedIndex(1)
		self.list_item:setItemRenderer(function(index, obj)
			local info = arr[index + 1];
			local round = info.round
			local battleIndex = info.battleIndex;
			local battleInfo = GuildLeagueOfLegendsModel.groupInfo[round][battleIndex];
			local posInfo = battleInfo.battlePosInfo
			local guessFlag = 0;
			local winSide = 0;
			-- 公会信息显示
			for i = 1, 2 do
				local d = posInfo[i];
				-- local key = GuildLeagueOfLegendsModel:getPosKey(round, battleIndex, i);
				local guildInfo = GuildLeagueOfLegendsModel.guildMap[d.guildId] or false;
				local icon = obj:getChildAutoType("guildIcon"..i);
				local txt_name = obj:getChildAutoType("guildName"..i);
				local txt_combat = obj:getChildAutoType("guildCombat"..i);
				if (guildInfo) then
					icon:setIcon(GuildModel:getGuildHead(guildInfo.guildIcon));
					txt_name:setText(string.format("[S.%s]%s", guildInfo.serverId, guildInfo.guildName));
					txt_combat:setText(StringUtil.transValue(guildInfo.combat));
				end
				
				if (d.guildId == info.guildId and d.isWin) then
					guessFlag = 1
				end
				if (d.isWin) then
					winSide = i - 1;
				end
			end
			local c1 = obj:getController("c1")
			local c2 = obj:getController("c2")
			c1:setSelectedIndex(guessFlag);
			c2:setSelectedIndex(winSide);
			local txt_round = obj:getChildAutoType("txt_round")
			local txt_addScore = obj:getChildAutoType("txt_addScore")
			local txt_result = obj:getChildAutoType("txt_result")
			txt_round:setText(Desc["GLOL_round"..round]);
			if (guessFlag == 1) then
				txt_addScore:setText("+"..info.count);
				txt_result:setText(Desc.GLOL_guessSuc)
			else
				txt_addScore:setText("-"..info.count);
				txt_result:setText(Desc.GLOL_guessFail)
			end
			local btn = obj:getChildAutoType("btn_data");
			btn:removeClickListener();
			btn:addClickListener(function()
				local battleInfo = GuildLeagueOfLegendsModel.groupInfo[round][battleIndex];
				ViewManager.open("GLLegendsBattleResultView", {round = round, battleInfo = battleInfo});
			end)
		end)
		self.list_item:setNumItems(#arr)
	else
		self.c1:setSelectedIndex(0)
	end
end

function GLLegendsGuestLogView:_initUI( )
	self:_initVM()
	self:_initListener()

end




return GLLegendsGuestLogView