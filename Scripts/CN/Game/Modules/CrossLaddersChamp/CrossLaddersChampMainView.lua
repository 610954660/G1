--Date :2021-01-13
--Author : generated by FairyGUI
--Desc : 

local CrossLaddersChampMainView,Super = class("CrossLaddersChampMainView", Window)

function CrossLaddersChampMainView:ctor()
	--LuaLog("CrossLaddersChampMainView ctor")
	self._packName = "CrossLaddersChamp"
	self._compName = "CrossLaddersChampMainView"
	--self._rootDepth = LayerDepth.Window
	

	self.pageIndex	= 0
	self.timer 		= false
	self.statusInfo 	= {}
end

function CrossLaddersChampMainView:_initEvent( )
	
end

function CrossLaddersChampMainView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:CrossLaddersChamp.CrossLaddersChampMainView
	self.btn_ = viewNode:getChildAutoType('btn_')--GButton
	self.btn_go = viewNode:getChildAutoType('btn_go')--GButton
	self.btn_goLadder = viewNode:getChildAutoType('btn_goLadder')--GButton
	self.btn_lookBack = viewNode:getChildAutoType('btn_lookBack')--GButton
	self.btn_mainPage1 = viewNode:getChildAutoType('btn_mainPage1')--btn_mainPage
		self.btn_mainPage1.img_red = viewNode:getChildAutoType('btn_mainPage1/img_red')--GImage
		self.btn_mainPage1.txt_day = viewNode:getChildAutoType('btn_mainPage1/txt_day')--GTextField
		self.btn_mainPage1.txt_limitOpen = viewNode:getChildAutoType('btn_mainPage1/txt_limitOpen')--GTextField
		self.btn_mainPage1.txt_time = viewNode:getChildAutoType('btn_mainPage1/txt_time')--GTextField
		self.btn_mainPage1.txt_tips1 = viewNode:getChildAutoType('btn_mainPage1/txt_tips1')--GTextField
		self.btn_mainPage1.txt_tipsEnd = viewNode:getChildAutoType('btn_mainPage1/txt_tipsEnd')--GTextField
	self.btn_mainPage2 = viewNode:getChildAutoType('btn_mainPage2')--btn_mainPage
		self.btn_mainPage2.img_red = viewNode:getChildAutoType('btn_mainPage2/img_red')--GImage
		self.btn_mainPage2.txt_day = viewNode:getChildAutoType('btn_mainPage2/txt_day')--GTextField
		self.btn_mainPage2.txt_limitOpen = viewNode:getChildAutoType('btn_mainPage2/txt_limitOpen')--GTextField
		self.btn_mainPage2.txt_time = viewNode:getChildAutoType('btn_mainPage2/txt_time')--GTextField
		self.btn_mainPage2.txt_tips1 = viewNode:getChildAutoType('btn_mainPage2/txt_tips1')--GTextField
		self.btn_mainPage2.txt_tipsEnd = viewNode:getChildAutoType('btn_mainPage2/txt_tipsEnd')--GTextField
	self.btn_quiz = viewNode:getChildAutoType('btn_quiz')--GButton
	self.btn_rank = viewNode:getChildAutoType('btn_rank')--btn_rank
		self.btn_rank.img_red = viewNode:getChildAutoType('btn_rank/img_red')--GImage
	self.btn_rankReward = viewNode:getChildAutoType('btn_rankReward')--GButton
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.haveEnoughCtrl = viewNode:getController('haveEnoughCtrl')--Controller
	self.list_reward = viewNode:getChildAutoType('list_reward')--GList
	self.openState = viewNode:getController('openState')--Controller
	self.pageCtrl = viewNode:getController('pageCtrl')--Controller
	self.playerItem1 = viewNode:getChildAutoType('playerItem1')--playerItem
		self.playerItem1.btn_praise = viewNode:getChildAutoType('playerItem1/btn_praise')--btn_praise
			self.playerItem1.btn_praise.img_red = viewNode:getChildAutoType('playerItem1/btn_praise/img_red')--GImage
		self.playerItem1.modelNode = viewNode:getChildAutoType('playerItem1/modelNode')--GComponent
		self.playerItem1.rankIconLoader = viewNode:getChildAutoType('playerItem1/rankIconLoader')--GLoader
		self.playerItem1.txt_level = viewNode:getChildAutoType('playerItem1/txt_level')--GTextField
		self.playerItem1.txt_name = viewNode:getChildAutoType('playerItem1/txt_name')--GTextField
		self.playerItem1.txt_rank = viewNode:getChildAutoType('playerItem1/txt_rank')--GTextField
		self.playerItem1.txt_server = viewNode:getChildAutoType('playerItem1/txt_server')--GTextField
	self.playerItem2 = viewNode:getChildAutoType('playerItem2')--playerItem
		self.playerItem2.btn_praise = viewNode:getChildAutoType('playerItem2/btn_praise')--btn_praise
			self.playerItem2.btn_praise.img_red = viewNode:getChildAutoType('playerItem2/btn_praise/img_red')--GImage
		self.playerItem2.modelNode = viewNode:getChildAutoType('playerItem2/modelNode')--GComponent
		self.playerItem2.rankIconLoader = viewNode:getChildAutoType('playerItem2/rankIconLoader')--GLoader
		self.playerItem2.txt_level = viewNode:getChildAutoType('playerItem2/txt_level')--GTextField
		self.playerItem2.txt_name = viewNode:getChildAutoType('playerItem2/txt_name')--GTextField
		self.playerItem2.txt_rank = viewNode:getChildAutoType('playerItem2/txt_rank')--GTextField
		self.playerItem2.txt_server = viewNode:getChildAutoType('playerItem2/txt_server')--GTextField
	self.playerItem3 = viewNode:getChildAutoType('playerItem3')--playerItem
		self.playerItem3.btn_praise = viewNode:getChildAutoType('playerItem3/btn_praise')--btn_praise
			self.playerItem3.btn_praise.img_red = viewNode:getChildAutoType('playerItem3/btn_praise/img_red')--GImage
		self.playerItem3.modelNode = viewNode:getChildAutoType('playerItem3/modelNode')--GComponent
		self.playerItem3.rankIconLoader = viewNode:getChildAutoType('playerItem3/rankIconLoader')--GLoader
		self.playerItem3.txt_level = viewNode:getChildAutoType('playerItem3/txt_level')--GTextField
		self.playerItem3.txt_name = viewNode:getChildAutoType('playerItem3/txt_name')--GTextField
		self.playerItem3.txt_rank = viewNode:getChildAutoType('playerItem3/txt_rank')--GTextField
		self.playerItem3.txt_server = viewNode:getChildAutoType('playerItem3/txt_server')--GTextField
	self.playerItem4 = viewNode:getChildAutoType('playerItem4')--playerItem
		self.playerItem4.btn_praise = viewNode:getChildAutoType('playerItem4/btn_praise')--btn_praise
			self.playerItem4.btn_praise.img_red = viewNode:getChildAutoType('playerItem4/btn_praise/img_red')--GImage
		self.playerItem4.modelNode = viewNode:getChildAutoType('playerItem4/modelNode')--GComponent
		self.playerItem4.rankIconLoader = viewNode:getChildAutoType('playerItem4/rankIconLoader')--GLoader
		self.playerItem4.txt_level = viewNode:getChildAutoType('playerItem4/txt_level')--GTextField
		self.playerItem4.txt_name = viewNode:getChildAutoType('playerItem4/txt_name')--GTextField
		self.playerItem4.txt_rank = viewNode:getChildAutoType('playerItem4/txt_rank')--GTextField
		self.playerItem4.txt_server = viewNode:getChildAutoType('playerItem4/txt_server')--GTextField
	self.playerItem5 = viewNode:getChildAutoType('playerItem5')--playerItem
		self.playerItem5.btn_praise = viewNode:getChildAutoType('playerItem5/btn_praise')--btn_praise
			self.playerItem5.btn_praise.img_red = viewNode:getChildAutoType('playerItem5/btn_praise/img_red')--GImage
		self.playerItem5.modelNode = viewNode:getChildAutoType('playerItem5/modelNode')--GComponent
		self.playerItem5.rankIconLoader = viewNode:getChildAutoType('playerItem5/rankIconLoader')--GLoader
		self.playerItem5.txt_level = viewNode:getChildAutoType('playerItem5/txt_level')--GTextField
		self.playerItem5.txt_name = viewNode:getChildAutoType('playerItem5/txt_name')--GTextField
		self.playerItem5.txt_rank = viewNode:getChildAutoType('playerItem5/txt_rank')--GTextField
		self.playerItem5.txt_server = viewNode:getChildAutoType('playerItem5/txt_server')--GTextField
	self.playerItem6 = viewNode:getChildAutoType('playerItem6')--playerItem
		self.playerItem6.btn_praise = viewNode:getChildAutoType('playerItem6/btn_praise')--btn_praise
			self.playerItem6.btn_praise.img_red = viewNode:getChildAutoType('playerItem6/btn_praise/img_red')--GImage
		self.playerItem6.modelNode = viewNode:getChildAutoType('playerItem6/modelNode')--GComponent
		self.playerItem6.rankIconLoader = viewNode:getChildAutoType('playerItem6/rankIconLoader')--GLoader
		self.playerItem6.txt_level = viewNode:getChildAutoType('playerItem6/txt_level')--GTextField
		self.playerItem6.txt_name = viewNode:getChildAutoType('playerItem6/txt_name')--GTextField
		self.playerItem6.txt_rank = viewNode:getChildAutoType('playerItem6/txt_rank')--GTextField
		self.playerItem6.txt_server = viewNode:getChildAutoType('playerItem6/txt_server')--GTextField
	self.playerItem7 = viewNode:getChildAutoType('playerItem7')--playerItem
		self.playerItem7.btn_praise = viewNode:getChildAutoType('playerItem7/btn_praise')--btn_praise
			self.playerItem7.btn_praise.img_red = viewNode:getChildAutoType('playerItem7/btn_praise/img_red')--GImage
		self.playerItem7.modelNode = viewNode:getChildAutoType('playerItem7/modelNode')--GComponent
		self.playerItem7.rankIconLoader = viewNode:getChildAutoType('playerItem7/rankIconLoader')--GLoader
		self.playerItem7.txt_level = viewNode:getChildAutoType('playerItem7/txt_level')--GTextField
		self.playerItem7.txt_name = viewNode:getChildAutoType('playerItem7/txt_name')--GTextField
		self.playerItem7.txt_rank = viewNode:getChildAutoType('playerItem7/txt_rank')--GTextField
		self.playerItem7.txt_server = viewNode:getChildAutoType('playerItem7/txt_server')--GTextField
	self.playerItem8 = viewNode:getChildAutoType('playerItem8')--playerItem
		self.playerItem8.btn_praise = viewNode:getChildAutoType('playerItem8/btn_praise')--btn_praise
			self.playerItem8.btn_praise.img_red = viewNode:getChildAutoType('playerItem8/btn_praise/img_red')--GImage
		self.playerItem8.modelNode = viewNode:getChildAutoType('playerItem8/modelNode')--GComponent
		self.playerItem8.rankIconLoader = viewNode:getChildAutoType('playerItem8/rankIconLoader')--GLoader
		self.playerItem8.txt_level = viewNode:getChildAutoType('playerItem8/txt_level')--GTextField
		self.playerItem8.txt_name = viewNode:getChildAutoType('playerItem8/txt_name')--GTextField
		self.playerItem8.txt_rank = viewNode:getChildAutoType('playerItem8/txt_rank')--GTextField
		self.playerItem8.txt_server = viewNode:getChildAutoType('playerItem8/txt_server')--GTextField
	self.quizCtrl = viewNode:getController('quizCtrl')--Controller
	self.txt_timer = viewNode:getChildAutoType('txt_timer')--GTextField
	self.txt_tipsEnough = viewNode:getChildAutoType('txt_tipsEnough')--GTextField
	self.txt_title1 = viewNode:getChildAutoType('txt_title1')--GTextField
	self.txt_title2 = viewNode:getChildAutoType('txt_title2')--GTextField
	self.txt_topTips = viewNode:getChildAutoType('txt_topTips')--GTextField
	--{autoFieldsEnd}:CrossLaddersChamp.CrossLaddersChampMainView
	--Do not modify above code-------------
	self:setBg("dreammaster_bg.png")
end

function CrossLaddersChampMainView:_initListener( )
	
	self.btn_:addClickListener(function()

	end)

	-- 前往天梯赛
	self.btn_goLadder:addClickListener(function()
		ModuleUtil.openModule(ModuleId.CrossLadders.id, true);
	end)

	-- 回顾比赛
	self.btn_lookBack:addClickListener(function()
		CrossLaddersChampModel:reqSkyLadChampion_GetGuessRecord(function(data)
			local guessRecordInfo = CrossLaddersChampModel:getHistoryGuessRecordInfo(data)
			if not guessRecordInfo then
				RollTips.show(Desc.CrossLaddersChamp_str30)
				return 
			end
			ViewManager.open("CrossLaddersChampQuizView",{enterType=3})
		end)
	end)


	-- 排名奖励
	self.btn_rankReward:addClickListener(function()
		ViewManager.open("CrossLaddersChampRankRewardView")
	end)

	self.list_reward:setItemRenderer(function(index, obj)

	end)

end

function CrossLaddersChampMainView:_initUI( )
	self:_initVM()
	if self._args.pageIndex then
		self.pageCtrl:setSelectedIndex(self._args.pageIndex-1)
	end
	CrossLaddersChampModel:getRankInfo(function() 
		self:_initListener()
		self:CrossLaddersChampMainView_refreshPanel()
		self.haveEnoughCtrl:setSelectedIndex((not CrossLaddersChampModel:checkIsJoinEnough() and (CrossLaddersChampModel:isSecond() or  CrossLaddersChampModel:isPreMatch()) )  and 1 or 0)
	end)
end

function CrossLaddersChampMainView:CrossLaddersChampMainView_refreshPanel()
	self.statusInfo = CrossLaddersChampModel.statusInfo
	self:refreshPanel()
end

function CrossLaddersChampMainView:refreshPanel()
	self:reqHeroHouseInfo()
	self:setState()  
	self:setPageInfo()
	self:setRewardInfo()
	self:updateOpenTime()
end

function CrossLaddersChampMainView:reqHeroHouseInfo()
	CrossLaddersChampModel:reqSkyLadChampion_GetHeroHouse(self.pageIndex+1,function() 
		self:setRankInfo()
	end)
end

function CrossLaddersChampMainView:setBtnGo()
	if self.pageCtrl:getSelectedIndex() == 0 then
		self.btn_go:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanArray(1) or CrossLaddersChampModel:checkCanLike() or CrossLaddersChampModel:checkCanQuiz())
	else
		self.btn_go:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:isSecond() and (CrossLaddersChampModel:checkCanArray(2) or CrossLaddersChampModel:checkCanQuiz()) )
	end
	self.btn_go:removeClickListener(11)
	self.btn_go:addClickListener(function()
		if not CrossLaddersChampModel:checkIsJoinEnough() then
			RollTips.show(Desc.CrossLaddersChamp_str36)
			return
		end

		local pageIndex = self.pageCtrl:getSelectedIndex()  -- 0 预选赛  1 晋级赛
		local stage = self.statusInfo.stage or GameDef.SkyLadChampionStage.End
		if pageIndex == 0 then
			-- if (stage == GameDef.SkyLadChampionStage.End) or not stage then
			-- 	RollTips.show(Desc.CrossLaddersChamp_str13)
			-- 	return 
			-- end
			CrossLaddersChampModel:reqSkyLadChampion_GetGroupInfo(false,function() 
				ViewManager.open("CrossLaddersChampPrimaryView")
			end)
			
		else
			-- if (stage == GameDef.SkyLadChampionStage.End) or not stage then
			-- 	RollTips.show(Desc.CrossLaddersChamp_str13)
			-- 	return 
			-- end
			if CrossLaddersChampModel:isPreMatch() then
				RollTips.show(Desc.CrossLaddersChamp_str27)
				return
			end
			ViewManager.open("CrossLaddersChampGroupView") -- 晋级赛界面
		end
	end,11)

	-- 竞猜
	self.btn_quiz:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanQuiz())
	self.btn_quiz:removeClickListener(11)
	self.btn_quiz:addClickListener(function()
		ViewManager.open("CrossLaddersChampQuizView")
	end,11)

	-- 排行榜
	self.btn_rank:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanLike())
	self.btn_rank:removeClickListener(11)
	self.btn_rank:addClickListener(function()
		ViewManager.open("CrossLaddersChampRankView")
	end,11)
end


function CrossLaddersChampMainView:setState()  
	self:setBtnGo()
	local pageIndex = self.pageCtrl:getSelectedIndex() + 1
	self.txt_topTips:setText(Desc["CrossLaddersChamp_titleTips" .. pageIndex])
	local stage = self.statusInfo.stage or GameDef.SkyLadChampionStage.End
	self.openState:setSelectedIndex(stage ~= GameDef.SkyLadChampionStage.End and 1 or 0) 		-- 0比赛未开始  1比赛进行中
	-- 预选赛 第一轮到第六轮比赛进行中
	if CrossLaddersChampModel:isPreMatch() then
		self.btn_mainPage1:getController("stateCtrl"):setSelectedIndex(1) 	-- 比赛进行中
		self.quizCtrl:setSelectedIndex(1)
	elseif stage ~= GameDef.SkyLadChampionStage.End then
		self.btn_mainPage1:getController("stateCtrl"):setSelectedIndex(2) 	-- 预选赛结束
		self.quizCtrl:setSelectedIndex(0)
	else
		self.quizCtrl:setSelectedIndex(0)
		self.btn_mainPage1:getController("stateCtrl"):setSelectedIndex(0) 	-- 整个活动结束
	end

	if CrossLaddersChampModel:isSecond() then
		self.quizCtrl:setSelectedIndex(1)
		self.btn_mainPage2:getController("stateCtrl"):setSelectedIndex(1) 	-- 比赛进行中
	else
		self.quizCtrl:setSelectedIndex(0)
		self.btn_mainPage2:getController("stateCtrl"):setSelectedIndex(0) 
	end

	if self.pageCtrl:getSelectedIndex() == 0 then
		if stage ~= GameDef.SkyLadChampionStage.End then
			if CrossLaddersChampModel:isPreMatch() then 
				self.txt_title2:setText(Desc["CrossLaddersChamp_top"..stage])
			else
				self.txt_title2:setText(Desc["CrossLaddersChamp_str25"])
			end
		else
			self.txt_title2:setText(Desc["CrossLaddersChamp_statusEnd"])
		end
	else
		if stage ~= GameDef.SkyLadChampionStage.End then
			if CrossLaddersChampModel:isSecond() then 
				self.txt_title2:setText(Desc["CrossLaddersChamp_top"..stage])
			else
				self.txt_title2:setText(Desc["CrossLaddersChamp_str27"])
			end
		else
			self.txt_title2:setText(Desc["CrossLaddersChamp_str26"])
		end
	end
	-- self.openState:setSelectedIndex(0) 		-- 0比赛未开始  1比赛进行中
	-- self.quizCtrl:setSelectedIndex(0) 		-- 0不可以竞猜 1 可以竞猜
end

-- 页签设置
function CrossLaddersChampMainView:setPageInfo()
	local pageIndex = self.pageCtrl:getSelectedIndex()


	-- 预选赛按钮
	self.btn_mainPage1:getChildAutoType("title"):setText(Desc.CrossLaddersChamp_str2)
	self.btn_mainPage1:getChildAutoType("txt_tips1"):setText(Desc.CrossLaddersChamp_str3)
	self.btn_mainPage1:getChildAutoType("txt_tipsEnd"):setText(Desc.CrossLaddersChamp_str4)
	self.btn_mainPage1:getChildAutoType("txt_day"):setText(Desc.CrossLaddersChamp_str5)
	self.btn_mainPage1:getChildAutoType("txt_time"):setText("12:00-12:30")
	self.btn_mainPage1:getChildAutoType("txt_limitOpen"):setText(Desc.CrossLaddersChamp_str6)
	self.btn_mainPage1:removeClickListener(11)
	RedManager.register("V_CROSSLADDERSCHAMP_PAGEONE",self.btn_mainPage1:getChildAutoType("img_red"))
	self.btn_mainPage1:addClickListener(function()
		self.pageIndex = 0
		self:setState()  
		self:updateOpenTime()
		self:reqHeroHouseInfo()
	end,11)

	-- 晋级赛按钮
	self.btn_mainPage2:getChildAutoType("title"):setText(Desc.CrossLaddersChamp_str7)
	self.btn_mainPage2:getChildAutoType("txt_tips1"):setText(Desc.CrossLaddersChamp_str3)
	self.btn_mainPage2:getChildAutoType("txt_tipsEnd"):setText(Desc.CrossLaddersChamp_str4)
	self.btn_mainPage2:getChildAutoType("txt_day"):setText(Desc.CrossLaddersChamp_str5)
	self.btn_mainPage2:getChildAutoType("txt_time"):setText("12:30-13:00")
	self.btn_mainPage2:getChildAutoType("txt_limitOpen"):setText(Desc.CrossLaddersChamp_str6)
	
	self.btn_mainPage2:removeClickListener(11)
	RedManager.register("V_CROSSLADDERSCHAMP_PAGETWO",self.btn_mainPage2:getChildAutoType("img_red"))
	self.btn_mainPage2:addClickListener(function()
		-- local state = false 		-- 判断晋级赛开没开启
		-- if not state then
		-- 	self.pageCtrl:setSelectedIndex(0)
		-- 	RollTips.show(Desc.CrossLaddersChamp_str1)
		-- 	return
		-- end
		self.pageIndex = 1
		self:setState()  
		self:updateOpenTime()
		self:reqHeroHouseInfo()
	end,11)
end

-- 设置奖励
function CrossLaddersChampMainView:setRewardInfo()
	local SkyLadChampionConst   = DynamicConfigData.t_SkyLadChampionConst[1] or {}
	local c_reward = SkyLadChampionConst.itemShow
	-- local rewardInfo = c_reward[self.pageIndex] or {}
	self.list_reward:setItemRenderer(function(idx,obj)
		local index = idx + 1
		local reward = c_reward[index]
		local itemCell = BindManager.bindItemCell(obj)
		itemCell:setData(reward.code,reward.amount,reward.type)
	end)
	self.list_reward:setData(c_reward)
end

-- 设置排名
function CrossLaddersChampMainView:setRankInfo()
	local heroHouseInfo = CrossLaddersChampModel.heroHouseInfo or {}
	for i=1,8 do
		local obj 	= self["playerItem" ..i]
		local data 	= heroHouseInfo[i]
		local isHaveCtrl	= obj:getController("isHaveCtrl")	-- 0 没人 1 有人
		local modelNode	= obj:getChildAutoType("modelNode")
		local txt_name	= obj:getChildAutoType("txt_name")
		local txt_level = obj:getChildAutoType("txt_level")
		local txt_rank 	= obj:getChildAutoType("txt_rank")
		local btn_praise 	= obj:getChildAutoType("btn_praise")
		local rankCtrl 	= obj:getController("rankCtrl")
		local txt_server 	= obj:getChildAutoType("txt_server")

		if modelNode then
			modelNode:displayObject():removeAllChildren()
		end
		local skeletonNode = false
		isHaveCtrl:setSelectedIndex(0)
		if data then
			txt_server:setText("S." .. data.serverId)
			rankCtrl:setSelectedIndex(i <4 and i or 4)
			isHaveCtrl:setSelectedIndex(1)
			if data.heroOpertion == 0 then
				data.heroOpertion = 35001
			end
			skeletonNode = SpineUtil.createModel(modelNode, {x = 0, y =0}, "stand", data.heroOpertion or 35006,true,false)
			
			txt_name:setText(data.name)   
			txt_level:setText(data.level)       
			txt_rank:setText(data.rank)  

			if CrossLaddersChampModel:checkIsLike(data.playerId) then
				btn_praise:getController("button"):setSelectedIndex(1)
			else
				btn_praise:getController("button"):setSelectedIndex(0)
			end

			btn_praise:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanLike() and (not CrossLaddersChampModel:checkIsLike(data.playerId)))
			btn_praise:getChildAutoType("title"):setText(data.totalLike or 0)
			btn_praise:removeClickListener(11)
			btn_praise:addClickListener(function()  
				local SkyLadChampionConst = DynamicConfigData.t_SkyLadChampionConst[1]
				local limit 	= SkyLadChampionConst.limit

				if CrossLaddersChampModel:checkIsLike(data.playerId) then
					RollTips.show(Desc.CrossLaddersChamp_str35)
					return
				end

				if CrossLaddersChampModel.likeTimes >= limit then
					btn_praise:getController("button"):setSelectedIndex(0)
					RollTips.show(Desc.CrossLaddersChamp_str33)
					return
				end
				CrossLaddersChampModel:reqSkyLadChampion_Like(data.playerId,data.serverId,function(totalLike)  
					btn_praise:getChildAutoType("title"):setText(totalLike or 0)
				end)
			end,11)
		end
	end
end

-- 挑战开启倒计时
function CrossLaddersChampMainView:updateOpenTime()
	local openTime 	=  0 -- self.statusInfo
	local state 	= self.statusInfo.stage or GameDef.SkyLadChampionStage.End
	local strTitle  = Desc.CrossLaddersChamp_str8
	local serverTime = ServerTimeModel:getServerTime()
	if state == GameDef.SkyLadChampionStage.End then 	-- 开启时间
		openTime = self.statusInfo.startMs and math.floor(self.statusInfo.startMs/1000) or 3600
		openTime = openTime - serverTime
	else 	-- 结束时间
		openTime = self.statusInfo.endMs and math.floor(self.statusInfo.endMs/1000) or 3600
		openTime = openTime - serverTime
		strTitle  = Desc.CrossLaddersChamp_str12
	end

	if self.pageIndex == 0 then

	else
		openTime = openTime + 1800
	end
	if openTime <= 0 then
		return
	end
	if not tolua.isnull(self.txt_timer) then
		self.txt_timer:setText(string.format(strTitle,TimeLib.GetTimeFormatDay(openTime, 2)))
	end
	local function onCountDown(time)
		if not tolua.isnull(self.txt_timer) then
			self.txt_timer:setText(string.format(strTitle,TimeLib.GetTimeFormatDay(time, 2)))
		end
	end
	local function onEnd(...)
	end
	if self.timer then
		TimeLib.clearCountDown(self.timer)
	end
	self.timer = TimeLib.newCountDown(openTime, onCountDown, onEnd, false, false, false)
end

function CrossLaddersChampMainView:_exit()
	if self.timer then
		TimeLib.clearCountDown(self.timer)
	end
end






return CrossLaddersChampMainView