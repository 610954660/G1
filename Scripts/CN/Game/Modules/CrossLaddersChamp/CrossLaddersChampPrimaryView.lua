--Date :2021-01-13
--Author : generated by FairyGUI
--Desc : 预选赛界面

local CrossLaddersChampPrimaryView,Super = class("CrossLaddersChampPrimaryView", Window)

local c_time = 1800

function CrossLaddersChampPrimaryView:ctor()
	--LuaLog("CrossLaddersChampPrimaryView ctor")
	self._packName = "CrossLaddersChamp"
	self._compName = "CrossLaddersChampPrimaryView"
	--self._rootDepth = LayerDepth.Window
	
	self.timer = false
	self.adjTimer = false
end

function CrossLaddersChampPrimaryView:_initEvent( )
	
end

function CrossLaddersChampPrimaryView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:CrossLaddersChamp.CrossLaddersChampPrimaryView
	self.btn_adjLock = viewNode:getChildAutoType('btn_adjLock')--GButton
	self.btn_array = viewNode:getChildAutoType('btn_array')--GButton
	self.btn_lineUp = viewNode:getChildAutoType('btn_lineUp')--GButton
	self.btn_noOpen = viewNode:getChildAutoType('btn_noOpen')--GButton
	self.btn_quiz = viewNode:getChildAutoType('btn_quiz')--btn_quiz3
		self.btn_quiz.img_red = viewNode:getChildAutoType('btn_quiz/img_red')--GImage
	self.btn_rank = viewNode:getChildAutoType('btn_rank')--btn_rank
		self.btn_rank.img_red = viewNode:getChildAutoType('btn_rank/img_red')--GImage
	self.btn_record = viewNode:getChildAutoType('btn_record')--GButton
	self.btn_reward = viewNode:getChildAutoType('btn_reward')--GButton
	self.btn_shop = viewNode:getChildAutoType('btn_shop')--GButton
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.isHaveQualify = viewNode:getController('isHaveQualify')--Controller
	self.myItem = viewNode:getChildAutoType('myItem')--playerItemPre
		self.myItem.modelNode = viewNode:getChildAutoType('myItem/modelNode')--GComponent
		self.myItem.txt_integral = viewNode:getChildAutoType('myItem/txt_integral')--GTextField
		self.myItem.txt_name = viewNode:getChildAutoType('myItem/txt_name')--GTextField
		self.myItem.txt_power = viewNode:getChildAutoType('myItem/txt_power')--GTextField
		self.myItem.txt_rank = viewNode:getChildAutoType('myItem/txt_rank')--GRichTextField
	self.openState = viewNode:getController('openState')--Controller
	self.otherItem = viewNode:getChildAutoType('otherItem')--playerItemPre
		self.otherItem.modelNode = viewNode:getChildAutoType('otherItem/modelNode')--GComponent
		self.otherItem.txt_integral = viewNode:getChildAutoType('otherItem/txt_integral')--GTextField
		self.otherItem.txt_name = viewNode:getChildAutoType('otherItem/txt_name')--GTextField
		self.otherItem.txt_power = viewNode:getChildAutoType('otherItem/txt_power')--GTextField
		self.otherItem.txt_rank = viewNode:getChildAutoType('otherItem/txt_rank')--GRichTextField
	self.txt_adjTimer = viewNode:getChildAutoType('txt_adjTimer')--GRichTextField
	self.txt_qualify = viewNode:getChildAutoType('txt_qualify')--GTextField
	self.txt_timer = viewNode:getChildAutoType('txt_timer')--GRichTextField
	self.txt_tipstitle = viewNode:getChildAutoType('txt_tipstitle')--GTextField
	self.txt_topTips = viewNode:getChildAutoType('txt_topTips')--GRichTextField
	--{autoFieldsEnd}:CrossLaddersChamp.CrossLaddersChampPrimaryView
	--Do not modify above code-------------

	self:setBg("crossLadders.jpg")
end

function CrossLaddersChampPrimaryView:_initListener( )
	self.btn_noOpen:addClickListener(function()

	end)


	self.btn_record:addClickListener(function()
		ViewManager.open("CrossLaddersChampRecordView")
	end)

	self.btn_reward:addClickListener(function()
		ViewManager.open("CrossLaddersChampRankRewardView")
	end)

	self.btn_shop:addClickListener(function()
		ModuleUtil.openModule(ModuleId.Shop_crossLaddersChamp.id,true)
	end)

end


function CrossLaddersChampPrimaryView:_initUI( )
	self:_initVM()
	self:_initListener()
	self:CrossLaddersChampPrimaryView_refreshPanel()
	-- CrossLaddersChampModel:reqSkyLadChampion_GetMyInfo()

end

function CrossLaddersChampPrimaryView:CrossLaddersChampPrimaryView_refreshPanel()
	self.isHaveQualify:setSelectedIndex(0)
	if CrossLaddersChampModel:isSecond() or CrossLaddersChampModel:isPreMatch() then
		CrossLaddersChampModel:checkHaveQualify(function(rankData)
			if rankData and rankData.id then
				if rankData.rank and rankData.rank > 256 then
					self.isHaveQualify:setSelectedIndex(1)
				end
			else
				self.isHaveQualify:setSelectedIndex(1)
			end
		end)
	end
	if self.timer then
		Scheduler.unschedule(self.timer)
		self.timer = false
	end
	if self.adjTimer then
		Scheduler.unschedule(self.adjTimer)
		self.adjTimer = false
	end
	CrossLaddersChampModel:reqSkyLadChampion_GetPreFight(false,function() 
		if CrossLaddersChampModel.preEnemyInfo.playerId and (CrossLaddersChampModel.status and (CrossLaddersChampModel.status ==  GameDef.SkyLadChampionStatus.Fight)) and CrossLaddersChampModel:isPreMatch() then 	-- 如果有敌人 并且在战斗阶段 请求节点信息
			CrossLaddersChampModel:reqSkyLadChampion_GetPreRecordId(false,function(recordId)  
				local dayStr    = DateUtil.getOppostieDays()
				local key   = string.format("CrossLaddersChampPrimary_%s_%s",dayStr,CrossLaddersChampModel.stage)
				print(8850,">>>>key>>>" .. key)
				if not FileCacheManager.getBoolForKey(key, false) then
					CrossLaddersChampModel:battleBegin(recordId)
				end
				self:refreshPanel()
			end)
		else
			self:refreshPanel()
		end
	end)
end

function CrossLaddersChampPrimaryView:refreshPanel()
	self.txt_topTips:setText(string.format(Desc.CrossLaddersChamp_str16,64))
	if CrossLaddersChampModel.stage >= GameDef.SkyLadChampionStage.PreFirst
		and  CrossLaddersChampModel.stage <= GameDef.SkyLadChampionStage.PreSix then
		self.txt_tipstitle:setText(string.format(Desc.CrossLaddersChamp_str21,
			tonumber(CrossLaddersChampModel.stage) - 1))
	else
		self.txt_tipstitle:setText("")
	end
	self:setArrayBtn()
	self:setPlayerInfo(true)
	self:setPlayerInfo()
	self:updateCountDown()
	self:adjUpdateCountDown()
end

function CrossLaddersChampPrimaryView:setArrayBtn()
	
	local SkyLadChampionConst = DynamicConfigData.t_SkyLadChampionConst[1]
	self.openState:setSelectedIndex(0) 	-- 0未开启 1准备阶段 2锁定阶段 3战斗阶段
	if CrossLaddersChampModel:isPreMatch() then
		if CrossLaddersChampModel.status and (CrossLaddersChampModel.stage ~= GameDef.SkyLadChampionStage.End)   then
			self.openState:setSelectedIndex(CrossLaddersChampModel.status)
		end
	end

	self.btn_adjLock:removeClickListener(11)
	self.btn_adjLock:addClickListener(function()
		
	end,11)

	self.btn_lineUp:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanArray(1))
	self.btn_lineUp:removeClickListener(11)
	self.btn_lineUp:addClickListener(function()
		CrossLaddersChampModel:checkHaveQualify(function(data)
			if not  (data and data.rank and data.rank <= 256) then
				RollTips.show(Desc.CrossLaddersChamp_str39)
				return
			else
				if CrossLaddersChampModel.status and (CrossLaddersChampModel.status ~= GameDef.SkyLadChampionStatus.Pre) then
					RollTips.show(Desc.CrossLaddersChamp_str40)
					return
				end
		
				local function battleHandler(eventName)
					if eventName == "begin" then
					end
				end
				local args = {
					fightID= SkyLadChampionConst.fightId,
					configType = GameDef.BattleArrayType.SkyLadChampion,
					enterType = 2,
				}
				if CrossLaddersChampModel.preEnemyInfo.playerId then
					local playerId = CrossLaddersChampModel.preEnemyInfo.playerId
					local serverId = CrossLaddersChampModel.preEnemyInfo.serverId
					CrossLaddersChampModel:initTeamInfo(playerId,serverId,function()
						Dispatcher.dispatchEvent(EventType.battle_requestFunc,battleHandler,args)
					end)
				else
					Dispatcher.dispatchEvent(EventType.battle_requestFunc,battleHandler,args)
				end
			end
		end) 
	end,11)

	self.btn_array:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanArray(1))
	self.btn_array:removeClickListener(11)
	self.btn_array:addClickListener(function()
		CrossLaddersChampModel:checkHaveQualify(function(data)
			if not  (data and data.rank and data.rank <= 256) then
				RollTips.show(Desc.CrossLaddersChamp_str39)
				return
			else
				if CrossLaddersChampModel.status and (CrossLaddersChampModel.status ~= GameDef.SkyLadChampionStatus.Pre) then
					RollTips.show(Desc.CrossLaddersChamp_str40)
					return
				end
				local function battleHandler(eventName) 
					if eventName == "begin" then
					end
				end
				local args = {
					fightID	= SkyLadChampionConst.fightId,
					configType = GameDef.BattleArrayType.SkyLadChampion,
					enterType = 1,
				}
				Dispatcher.dispatchEvent(EventType.battle_requestFunc,battleHandler,args)
			end
		end)
	end,11)

	self.btn_quiz:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanQuiz())
	self.btn_quiz:removeClickListener(11)
	self.btn_quiz:addClickListener(function()
		if CrossLaddersChampModel:isEnd() then
			RollTips.show(Desc.CrossLaddersChamp_str31)
			return
		end
		ViewManager.open("CrossLaddersChampQuizView")
	end,11)

	self.btn_rank:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanLike())
	self.btn_rank:removeClickListener(11)
	self.btn_rank:addClickListener(function()
		ViewManager.open("CrossLaddersChampRankView")
	end,11)
end

function CrossLaddersChampPrimaryView:setPlayerInfo(isMe)
	local item 	= isMe and self.myItem or self.otherItem
	local isMeCtrl 	= item:getController("isMeCtrl") -- 0不是自己 1是自己
	local isHaveCtrl = item:getController("isHaveCtrl") 	-- 0有数据 1没数据
	local modelNode = item:getChildAutoType("modelNode")	
	local txt_power = item:getChildAutoType("txt_power")
	local txt_name 	= item:getChildAutoType("txt_name")
	local txt_rank 	= item:getChildAutoType("txt_rank")
	local txt_integral = item:getChildAutoType("txt_integral")

	isMeCtrl:setSelectedIndex(isMe and 1 or 0) 

	-- 模型部分
	if modelNode then
		modelNode:displayObject():removeAllChildren()
	end
	local skeletonNode =false
	if isMe then
		isHaveCtrl:setSelectedIndex(0)
		skeletonNode = SpineUtil.createModel(modelNode, {x = 0, y = 0}, "stand", HandbookModel.heroOpertion or 35006,true,false,HandbookModel.fashionCode)
		txt_name:setText(string .format(Desc.CrossLaddersChamp_str17,LoginModel:getUnitServerId(),PlayerModel.username))

		txt_power:setText(StringUtil.transValue(CardLibModel:getFightVal() or 0))
		CrossLaddersChampModel:reqSkyLadChampion_GetMyInfo(function() 
			txt_integral:setText(string.format(Desc.CrossLaddersChamp_str20,CrossLaddersChampModel.myScore))
			txt_rank:setText( CrossLaddersChampModel.myRank and string.format(Desc.CrossLaddersChamp_str18,CrossLaddersChampModel.myRank) 
			or Desc.CrossLaddersChamp_str19)
		end)
	else
		local data = CrossLaddersChampModel.preEnemyInfo
		CrossLaddersChampModel.enemyInfo = data
		CrossLaddersChampModel.flagStage = CrossLaddersChampModel.stage
		if data.playerId then
			isHaveCtrl:setSelectedIndex(0)
			skeletonNode = SpineUtil.createModel(modelNode, {x = 0, y = 0}, "stand", data.heroOpertion or 35006,true,false,data.fashionCode)
			txt_name:setText(string.format(Desc.CrossLaddersChamp_str17,data.serverId,data.name))
			txt_rank:setText("")
			txt_power:setText(StringUtil.transValue(data.combat or 0))
			txt_integral:setText("")
		else
			isHaveCtrl:setSelectedIndex(1)
		end
	end
end

-- 阵容锁定
function CrossLaddersChampPrimaryView:adjUpdateCountDown()
	local openStateIndex = self.openState:getSelectedIndex()
	local stopTimes 	= math.floor(CrossLaddersChampModel.curEndTimeMs/1000)
	
	local serverTime 	= ServerTimeModel:getServerTime()
	stopTimes = stopTimes - serverTime
	printTable(8849,">>>adjUpdateCountDown>>>" .. stopTimes)
	-- if openStateIndex == 3 then
	-- 	stopTimes = stopTimes + 180
	-- end

	if stopTimes > 0 then
        local function onCountDown(dt)
			stopTimes = stopTimes - dt
			if stopTimes <= 0 then
				stopTimes = 0
			end
			local str = ""
			if not tolua.isnull(self.txt_adjTimer) then
				local str = ""
				if (CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Pre) then
					str = Desc.CrossLaddersChamp_str22
				elseif (CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Lock) then
					str = Desc.CrossLaddersChamp_str23
				elseif CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight then
					str = Desc.CrossLaddersChamp_str34
				end
				if CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight then
					self.txt_adjTimer:setText(string.format(str,TimeLib.GetTimeFormatDay(math.floor(stopTimes),2)))
				else
					self.txt_adjTimer:setText(string.format(str,math.floor(stopTimes),2))
				end
            end
			if stopTimes <= 0 then
				stopTimes = 0
				if CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight then
					self.txt_adjTimer:setText(string.format(str,TimeLib.GetTimeFormatDay(math.floor(stopTimes),2)))
				else
					self.txt_adjTimer:setText(string.format(str,math.floor(stopTimes),2))
				end
                Scheduler.unschedule(self.adjTimer)
                self.adjTimer = false
            end
		end
        if not tolua.isnull(self.txt_adjTimer) then
            if (CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Pre) then
				self.txt_adjTimer:setText(string.format(Desc.CrossLaddersChamp_str22,math.floor(stopTimes),2))
			elseif (CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Lock) then
				self.txt_adjTimer:setText(string.format(Desc.CrossLaddersChamp_str23,math.floor(stopTimes),2))
			elseif CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight then
				self.txt_adjTimer:setText(string.format(Desc.CrossLaddersChamp_str34,TimeLib.GetTimeFormatDay(math.floor(stopTimes),2)))
			end
		end
		if self.adjTimer then
			Scheduler.unschedule(self.adjTimer)
			self.adjTimer = false
		end

		self.adjTimer = Scheduler.schedule(function(dt)
            onCountDown(dt)
        end,0.1)
    else
        if self.adjTimer then
            Scheduler.unschedule(self.adjTimer)
            self.adjTimer = false
        end
        self.txt_adjTimer:setText("")
    end
end

-- 活动倒计时
function CrossLaddersChampPrimaryView:updateCountDown()
	local stopTimes 	= math.floor(CrossLaddersChampModel.startTimeMs/1000) + c_time
	local serverTime 	= ServerTimeModel:getServerTime()
	stopTimes = stopTimes - serverTime
	printTable(8849,">>>updateCountDown>>>" .. stopTimes)
	-- stopTimes = 1800
	if stopTimes > 0 then
        local function onCountDown(dt)
            stopTimes = stopTimes - dt
            if not tolua.isnull(self.txt_timer) then
                self.txt_timer:setText(string.format(Desc.CrossLaddersChamp_str14,TimeLib.GetTimeFormatDay(math.floor(stopTimes),2)))
            end
            if stopTimes <= 0 then
                Scheduler.unschedule(self.timer)
                self.timer = false
                self.txt_timer:setText(string.format(Desc.CrossLaddersChamp_str14,Desc.CrossLaddersChamp_str15))
            end
		end
        if not tolua.isnull(self.txt_timer) then
            self.txt_timer:setText(string.format(Desc.CrossLaddersChamp_str14,TimeLib.GetTimeFormatDay(stopTimes,2)))
		end
		if self.timer then
			Scheduler.unschedule(self.timer)
			self.timer = false
		end
		self.timer = Scheduler.schedule(function(dt)
            onCountDown(dt)
        end,0.1)
    else
        if self.timer then
            Scheduler.unschedule(self.timer)
            self.timer = false
        end
        self.txt_timer:setText(string.format(Desc.CrossLaddersChamp_str14,Desc.CrossLaddersChamp_str15))
    end
end


function CrossLaddersChampPrimaryView:_exit()
	if self.timer then
		Scheduler.unschedule(self.timer)
		self.timer = false
	end
	if self.adjTimer then
		Scheduler.unschedule(self.adjTimer)
		self.adjTimer = false
	end
	if self._args.entranType then
		ModuleUtil.openModule(ModuleId.CrossLaddersChamp.id, true,{pageIndex = 1})
	end
end


return CrossLaddersChampPrimaryView