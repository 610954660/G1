--Date :2021-01-13
--Author : generated by FairyGUI
--Desc : 

local CrossLaddersChampQuizView,Super = class("CrossLaddersChampQuizView", Window)
local __matchRound = {
	[1] = 0,
	[2] = 0,
	[3] = 0,
	[4] = 0,
	[5] = 0,
	[6] = 0,
	[7] = 0,
	[8] = 1, 	-- 64强
	[9] = 2, 	-- 32强
	[10] = 3, 	-- 16强
	[11] = 4, 	-- 8强
	[12] = 5, 	-- 4强
	[13] = 6, 	-- 2强
	[14] = 7, 	-- 活动结束
}

function CrossLaddersChampQuizView:ctor()
	--LuaLog("CrossLaddersChampQuizView ctor")
	self._packName = "CrossLaddersChamp"
	self._compName = "CrossLaddersChampQuizView"
	--self._rootDepth = LayerDepth.Window
	self.posInfo = {11, 12, 13, 21, 22, 23}
	self.skeletonNode = {}
	self.timer = false
	self.flagStage 	= false
	self.isFirstState = false
end

function CrossLaddersChampQuizView:_initEvent( )
	
end

function CrossLaddersChampQuizView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:CrossLaddersChamp.CrossLaddersChampQuizView
	self.LProgressBar = viewNode:getChildAutoType('LProgressBar')--GProgressBar
	self.RProgressBar = viewNode:getChildAutoType('RProgressBar')--GProgressBar
	self.btn_LGuess = viewNode:getChildAutoType('btn_LGuess')--Button4
		self.btn_LGuess.txt_money = viewNode:getChildAutoType('btn_LGuess/txt_money')--GTextField
	self.btn_RGuess = viewNode:getChildAutoType('btn_RGuess')--Button20
		self.btn_RGuess.txt_money = viewNode:getChildAutoType('btn_RGuess/txt_money')--GTextField
	self.btn_halloffame = viewNode:getChildAutoType('btn_halloffame')--GButton
	self.btn_left = viewNode:getChildAutoType('btn_left')--GButton
	self.btn_lineup = viewNode:getChildAutoType('btn_lineup')--GButton
	self.btn_look = viewNode:getChildAutoType('btn_look')--GButton
	self.btn_mymatch = viewNode:getChildAutoType('btn_mymatch')--Button8
		self.btn_mymatch.img_red = viewNode:getChildAutoType('btn_mymatch/img_red')--GImage
	self.btn_record = viewNode:getChildAutoType('btn_record')--GButton
	self.btn_right = viewNode:getChildAutoType('btn_right')--GButton
	self.c1 = viewNode:getController('c1')--Controller
	self.c2 = viewNode:getController('c2')--Controller
	self.c3 = viewNode:getController('c3')--Controller
	self.closeButton = viewNode:getChildAutoType('closeButton')--GButton
	self.content = viewNode:getChildAutoType('content')--GGroup
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.fullScreen = viewNode:getChildAutoType('fullScreen')--GLabel
	self.img_LLose = viewNode:getChildAutoType('img_LLose')--GImage
	self.img_LWin = viewNode:getChildAutoType('img_LWin')--GImage
	self.img_RLose = viewNode:getChildAutoType('img_RLose')--GImage
	self.img_RWin = viewNode:getChildAutoType('img_RWin')--GImage
	self.img_leftGuess = viewNode:getChildAutoType('img_leftGuess')--GImage
	self.img_rightGuess = viewNode:getChildAutoType('img_rightGuess')--GImage
	self.img_stageNum = viewNode:getChildAutoType('img_stageNum')--GLoader
	self.list_LSub = viewNode:getChildAutoType('list_LSub')--GList
	self.list_RSub = viewNode:getChildAutoType('list_RSub')--GList
	self.lookTitle = viewNode:getChildAutoType('lookTitle')--GTextField
	self.midSupport = viewNode:getChildAutoType('midSupport')--GGroup
	self.model_11 = viewNode:getChildAutoType('model_11')--Button3
		self.model_11.com_mode = viewNode:getChildAutoType('model_11/com_mode')--GLoader
		self.model_11.img_type = viewNode:getChildAutoType('model_11/img_type')--GLoader
		self.model_11.txt_level = viewNode:getChildAutoType('model_11/txt_level')--GTextField
	self.model_12 = viewNode:getChildAutoType('model_12')--Button3
		self.model_12.com_mode = viewNode:getChildAutoType('model_12/com_mode')--GLoader
		self.model_12.img_type = viewNode:getChildAutoType('model_12/img_type')--GLoader
		self.model_12.txt_level = viewNode:getChildAutoType('model_12/txt_level')--GTextField
	self.model_13 = viewNode:getChildAutoType('model_13')--Button3
		self.model_13.com_mode = viewNode:getChildAutoType('model_13/com_mode')--GLoader
		self.model_13.img_type = viewNode:getChildAutoType('model_13/img_type')--GLoader
		self.model_13.txt_level = viewNode:getChildAutoType('model_13/txt_level')--GTextField
	self.model_21 = viewNode:getChildAutoType('model_21')--Button3
		self.model_21.com_mode = viewNode:getChildAutoType('model_21/com_mode')--GLoader
		self.model_21.img_type = viewNode:getChildAutoType('model_21/img_type')--GLoader
		self.model_21.txt_level = viewNode:getChildAutoType('model_21/txt_level')--GTextField
	self.model_22 = viewNode:getChildAutoType('model_22')--Button3
		self.model_22.com_mode = viewNode:getChildAutoType('model_22/com_mode')--GLoader
		self.model_22.img_type = viewNode:getChildAutoType('model_22/img_type')--GLoader
		self.model_22.txt_level = viewNode:getChildAutoType('model_22/txt_level')--GTextField
	self.model_23 = viewNode:getChildAutoType('model_23')--Button3
		self.model_23.com_mode = viewNode:getChildAutoType('model_23/com_mode')--GLoader
		self.model_23.img_type = viewNode:getChildAutoType('model_23/img_type')--GLoader
		self.model_23.txt_level = viewNode:getChildAutoType('model_23/txt_level')--GTextField
	self.myScore = viewNode:getChildAutoType('myScore')--GRichTextField
	self.rTop = viewNode:getChildAutoType('rTop')--GGroup
	self.rigthmodel_11 = viewNode:getChildAutoType('rigthmodel_11')--Button3
		self.rigthmodel_11.com_mode = viewNode:getChildAutoType('rigthmodel_11/com_mode')--GLoader
		self.rigthmodel_11.img_type = viewNode:getChildAutoType('rigthmodel_11/img_type')--GLoader
		self.rigthmodel_11.txt_level = viewNode:getChildAutoType('rigthmodel_11/txt_level')--GTextField
	self.rigthmodel_12 = viewNode:getChildAutoType('rigthmodel_12')--Button3
		self.rigthmodel_12.com_mode = viewNode:getChildAutoType('rigthmodel_12/com_mode')--GLoader
		self.rigthmodel_12.img_type = viewNode:getChildAutoType('rigthmodel_12/img_type')--GLoader
		self.rigthmodel_12.txt_level = viewNode:getChildAutoType('rigthmodel_12/txt_level')--GTextField
	self.rigthmodel_13 = viewNode:getChildAutoType('rigthmodel_13')--Button3
		self.rigthmodel_13.com_mode = viewNode:getChildAutoType('rigthmodel_13/com_mode')--GLoader
		self.rigthmodel_13.img_type = viewNode:getChildAutoType('rigthmodel_13/img_type')--GLoader
		self.rigthmodel_13.txt_level = viewNode:getChildAutoType('rigthmodel_13/txt_level')--GTextField
	self.rigthmodel_21 = viewNode:getChildAutoType('rigthmodel_21')--Button3
		self.rigthmodel_21.com_mode = viewNode:getChildAutoType('rigthmodel_21/com_mode')--GLoader
		self.rigthmodel_21.img_type = viewNode:getChildAutoType('rigthmodel_21/img_type')--GLoader
		self.rigthmodel_21.txt_level = viewNode:getChildAutoType('rigthmodel_21/txt_level')--GTextField
	self.rigthmodel_22 = viewNode:getChildAutoType('rigthmodel_22')--Button3
		self.rigthmodel_22.com_mode = viewNode:getChildAutoType('rigthmodel_22/com_mode')--GLoader
		self.rigthmodel_22.img_type = viewNode:getChildAutoType('rigthmodel_22/img_type')--GLoader
		self.rigthmodel_22.txt_level = viewNode:getChildAutoType('rigthmodel_22/txt_level')--GTextField
	self.rigthmodel_23 = viewNode:getChildAutoType('rigthmodel_23')--Button3
		self.rigthmodel_23.com_mode = viewNode:getChildAutoType('rigthmodel_23/com_mode')--GLoader
		self.rigthmodel_23.img_type = viewNode:getChildAutoType('rigthmodel_23/img_type')--GLoader
		self.rigthmodel_23.txt_level = viewNode:getChildAutoType('rigthmodel_23/txt_level')--GTextField
	self.txt_LOdds = viewNode:getChildAutoType('txt_LOdds')--GTextField
	self.txt_LPlayerLv = viewNode:getChildAutoType('txt_LPlayerLv')--GTextField
	self.txt_LPlayerName = viewNode:getChildAutoType('txt_LPlayerName')--GTextField
	self.txt_LPlayerPower = viewNode:getChildAutoType('txt_LPlayerPower')--GTextField
	self.txt_LSupportNum = viewNode:getChildAutoType('txt_LSupportNum')--GTextField
	self.txt_ROdds = viewNode:getChildAutoType('txt_ROdds')--GTextField
	self.txt_RPlayerLv = viewNode:getChildAutoType('txt_RPlayerLv')--GTextField
	self.txt_RPlayerName = viewNode:getChildAutoType('txt_RPlayerName')--GTextField
	self.txt_RPlayerPower = viewNode:getChildAutoType('txt_RPlayerPower')--GTextField
	self.txt_RSupportNum = viewNode:getChildAutoType('txt_RSupportNum')--GTextField
	self.txt_group = viewNode:getChildAutoType('txt_group')--GTextField
	self.txt_timer = viewNode:getChildAutoType('txt_timer')--GRichTextField
	self.txt_timerTitle = viewNode:getChildAutoType('txt_timerTitle')--GTextField
	--{autoFieldsEnd}:CrossLaddersChamp.CrossLaddersChampQuizView
	--Do not modify above code-------------
	local url = "UI/WorldChallenge/worldchallengedengguanbg.png"
	self.fullScreen:getChildAutoType("icon"):setURL(url)
end

function CrossLaddersChampQuizView:_initListener( )
	
	self.btn_halloffame:addClickListener(function()
		ModuleUtil.openModule(ModuleId.Chat.id , true)
	end)

	self.btn_left:addClickListener(function()

	end)

	self.btn_right:addClickListener(function()

	end)

	self.closeButton:addClickListener(function()
		ViewManager.close("CrossLaddersChampQuizView")
	end)

	self.list_LSub:setItemRenderer(function(index, obj)

	end)

	self.list_RSub:setItemRenderer(function(index, obj)

	end)

end

function CrossLaddersChampQuizView:_initUI( )
	self:_initVM()
	self:_initListener()
	self.c1 = self.view:getController("c1") 	-- 0竞猜开始 1竞猜中2 我的调整阵容 3竞猜成功 4竞猜失败
	self.c2 = self.view:getController("c2") 	-- 0有敌对玩家 1无敌队玩家 2有敌对玩家但没有阵容
	self.c3 = self.view:getController("c3") 	-- 0支持左边 1支持右边
	self.c2:setSelectedIndex(1)
	self:CrossLaddersChampQuizView_refreshPanel()
end

function CrossLaddersChampQuizView:CrossLaddersChampQuizView_refreshPanel()
	if self._args.enterType and self._args.enterType == 2 then 	-- 点我的比赛进来的
		local pageIndex = self._args.pageIndex or 1
		CrossLaddersChampModel:reqSkyLadChampion_GetNodeInfo(CrossLaddersChampModel.myGroupInfo[pageIndex].nodeId,function()
			self:refreshPanel()
			self:updateCountDown((self._args.enterType and (self._args.enterType == 2)))
		end,true,pageIndex)
	elseif self._args.enterType and self._args.enterType == 3 then 	-- 点回顾比赛进来的
		CrossLaddersChampModel:reqSkyLadChampion_GetGuessRecord(function()
			self:refreshPanel()
		end)
	elseif self._args.enterType and self._args.enterType == 4 then 	-- 系统弹的
		self:refreshPanel()
	else
		CrossLaddersChampModel:reqSkyLadChampion_GetGuessBattleData(function()  
			self:refreshPanel()
			self:updateCountDown()
		end)
	end
end

function CrossLaddersChampQuizView:refreshPanel()
	self.btn_mymatch:getChildAutoType("img_red"):setVisible(CrossLaddersChampModel:checkCanArray(2))
	self.btn_mymatch:removeClickListener(11)
	self.btn_mymatch:addClickListener(function()  
		ViewManager.close("CrossLaddersChampQuizView")
		ViewManager.open("CrossLaddersChampQuizView",{enterType = 2,pageIndex = self._args.pageIndex or 1})
	end,11)
	if CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight then
		self.c1:setSelectedIndex(1)
	else
		self.c1:setSelectedIndex(0)
	end
	local myGroupInfo 	= CrossLaddersChampModel.myGroupInfo
	local pageIndex = self._args.pageIndex or 1
	if CrossLaddersChampModel:isSecond2() then
		if myGroupInfo[1] and myGroupInfo[1].nodeId then
				self.btn_mymatch:setVisible( myGroupInfo[1].groupId and CrossLaddersChampModel:checkShowMyMatch(1))
		else
			self.btn_mymatch:setVisible(false)
		end
	elseif CrossLaddersChampModel:isChampion() then
		if myGroupInfo[1] and myGroupInfo[1].nodeId and myGroupInfo[2] and myGroupInfo[2].nodeId then
				self.btn_mymatch:setVisible( myGroupInfo[2].groupId and CrossLaddersChampModel:checkShowMyMatch(2))
		else
			self.btn_mymatch:setVisible(false)
		end
	else
		self.btn_mymatch:setVisible(false)
	end
	-- self.btn_mymatch:setVisible(myGroupInfo[pageIndex] and   myGroupInfo[pageIndex].groupId and CrossLaddersChampModel:isSecond())
	self:showArray((self._args.enterType and (self._args.enterType == 2)))
	self:setContent((self._args.enterType and (self._args.enterType == 2)))
	self:setLineUpBtn()
	self:setGuessInfo()
end


function CrossLaddersChampQuizView:squadtomodify_change(_,arrayType)
	if self._args.enterType and self._args.enterType == 2 then
		local pageIndex = self._args.pageIndex or 1
		CrossLaddersChampModel:reqSkyLadChampion_GetNodeInfo(CrossLaddersChampModel.myGroupInfo[pageIndex].nodeId,function()
			self:CrossLaddersChampQuizView_refreshPanel()
		end,true)
	end
end

function CrossLaddersChampQuizView:setLineUpBtn()
	local SkyLadChampionConst = DynamicConfigData.t_SkyLadChampionConst[1]
	self.btn_lineup:removeClickListener(11)
	self.btn_lineup:addClickListener(function()
		CrossLaddersChampModel:checkHaveQualify(function(data)
			if not  (data and data.rank and data.rank <= 256) then
				RollTips.show(Desc.CrossLaddersChamp_str39)
				return
			else
				if CrossLaddersChampModel.status and (CrossLaddersChampModel.status ~= GameDef.SkyLadChampionStatus.Pre) then
					RollTips.show(Desc.CrossLaddersChamp_str40)
					return
				end
				local function battleHandler(eventName)
					if eventName == "begin" then
					end
				end
				local args = {
					fightID= SkyLadChampionConst.fightId,
					configType = GameDef.BattleArrayType.SkyLadChampion,
					enterType = 2,
				}
				local enemyPlayerInfo = CrossLaddersChampModel:getMyEnemyPlayerId()
				local playerId = enemyPlayerInfo.playerId
				local serverId = enemyPlayerInfo.serverId
				CrossLaddersChampModel:initTeamInfo(playerId,serverId,function()
					Dispatcher.dispatchEvent(EventType.battle_requestFunc,battleHandler,args)
				end)
			end
		end)
	end,11)
end

function CrossLaddersChampQuizView:setContent(isMyMatch)
	local statusInfo	= CrossLaddersChampModel.statusInfo
	local stage 	= statusInfo.stage or GameDef.SkyLadChampionStage.End
	self.flagStage 	= stage
	local status 	= statusInfo.status or GameDef.SkyLadChampionStatus.Pre
	local matchRound = __matchRound[stage]; -- 1、64强  2、32强  3、16强  4、8强 5、4强 6、2强、7、活动结束
	local roundState = status ; -- 1、准备阶段  2、战斗阶段  3、结算阶段
	if (matchRound) then
		local map = {32, 16, 8, 4, 2, 1, 1}
		self.img_stageNum:setIcon(string.format("UI/WorldChallenge/worldchallengeyisuzi%s.png", map[matchRound]))
	else
		self.img_stageNum:setIcon("")
	end

	local groupId = 1
	self.txt_group:setText("")
	local guessInfo 	= CrossLaddersChampModel.guessInfo or {}
	if isMyMatch then
		local pageIndex = self._args.pageIndex or 1
		groupId = CrossLaddersChampModel.myGroupInfo[pageIndex].groupId
		if groupId then
			self.txt_group:setText(string.format(Desc.CrossLaddersChamp_str24,groupId))
		else
			if CrossLaddersChampModel:isPreMatch(guessInfo.stage) then
				self.txt_group:setText(string.format(Desc.CrossLaddersChamp_topPre,guessInfo.stage-1))
			end
		end
	else
		if CrossLaddersChampModel:isPreMatch(guessInfo.stage)  and guessInfo.stage then
			self.txt_group:setText(string.format(Desc.CrossLaddersChamp_topPre,guessInfo.stage-1))
		else
			self.txt_group:setText("")
		end
	end
end

-- 设置底部竞猜部分
function CrossLaddersChampQuizView:setGuessInfo()
	local guessInfo 	= CrossLaddersChampModel.guessInfo or {}
	local nodeId 	= guessInfo.nodeId
	local pos 	= guessInfo.pos
	local groupId 	= guessInfo.groupId
	local leftSuportNum 	= guessInfo.leftSuportNum or 0
	local rightSuportNum 	= guessInfo.rightSuportNum or 0
	local leftMoney 	= guessInfo.leftMoney or 0
	local rightMoney 	= guessInfo.rightMoney or 0
	local leftPlayerInfo 	= guessInfo.leftPlayerInfo 	or {}
	local rightPlayerInfo 	= guessInfo.rightPlayerInfo or {}
	local myGuessInfo 	= guessInfo.myGuessInfo or {}
	local supportId 	= guessInfo.supportId or false
	local recordId 	= guessInfo.recordId 

	if self._args.enterType == 3 then
		local guessRecordInfo = CrossLaddersChampModel:getHistoryGuessRecordInfo()
		leftSuportNum 	= guessRecordInfo.leftSuportNum or 0
		rightSuportNum 	= guessRecordInfo.rightSuportNum or 0
		leftPlayerInfo 	= guessRecordInfo.leftPlayerInfo
		rightPlayerInfo = guessRecordInfo.rightPlayerInfo
		leftMoney 	= guessRecordInfo.leftMoney or 0 
		rightMoney 	= guessRecordInfo.rightMoney or 0
		supportId 	= guessRecordInfo.supportId
		recordId 	= guessRecordInfo.recordId 
		self.c1:setSelectedIndex(guessRecordInfo.result and 3 or 4)
	elseif self._args.enterType == 4 then
		local guessRecordInfo = self._args.data
		leftSuportNum 	= guessRecordInfo.leftSuportNum or 0
		rightSuportNum 	= guessRecordInfo.rightSuportNum or 0
		leftPlayerInfo 	= guessRecordInfo.leftPlayerInfo
		rightPlayerInfo = guessRecordInfo.rightPlayerInfo
		leftMoney 	= guessRecordInfo.leftMoney or 0 
		rightMoney 	= guessRecordInfo.rightMoney or 0
		supportId 	= guessRecordInfo.supportId
		recordId 	= guessRecordInfo.recordId 
		nodeId 	= guessRecordInfo.nodeId
		pos 	= guessRecordInfo.pos
		self.c1:setSelectedIndex(self._args.result and 3 or 4)
		if CrossLaddersChampModel.myGuessInfo and CrossLaddersChampModel.myGuessInfo.nodeId then
			-- if CrossLaddersChampModel.myGuessInfo.stage ~= CrossLaddersChampModel.stage then
				CrossLaddersChampModel.myGuessInfo = {}
			-- end
		end
	end



	local totalOdds = ((leftMoney + rightMoney) == 0) and 1 or (leftMoney + rightMoney)
	local leftOdds 	= 1.2 + rightMoney/totalOdds
	local rightOdds = 1.2 + leftMoney/totalOdds
	local totalNum 	= ((leftSuportNum + rightSuportNum) == 0) and 1 or (leftSuportNum + rightSuportNum)
	local leftValue 	= math.floor((leftSuportNum/totalNum) * 100)
	local rightValue 	= 100 - leftValue
	if (totalNum == 1) and ((leftSuportNum == 0) and (rightSuportNum == 0))   then
		leftValue = 0
		rightValue = 0
	else
		if leftValue == 50 then
			leftValue = 51
			rightValue = 51
		elseif leftValue < 50 then 
			rightValue = rightValue + 2
		else
			leftValue = leftValue + 2
		end
	end
	leftValue = leftValue > 100 and 100 or leftValue
	rightValue = rightValue > 100 and 100 or rightValue
	self.view:getChildAutoType("img_leftGuess"):setVisible(false)
	self.view:getChildAutoType("img_rightGuess"):setVisible(false)
	local supportLeft = (supportId and leftPlayerInfo and leftPlayerInfo.playerId and (leftPlayerInfo.playerId == supportId))
	if (leftPlayerInfo and leftPlayerInfo.playerId and (leftPlayerInfo.playerId == myGuessInfo.supportId)) or supportLeft then 
		self.c3:setSelectedIndex(0)
		self.view:getChildAutoType("img_leftGuess"):setVisible(true)
	end

	local supportRight = (supportId and rightPlayerInfo and rightPlayerInfo.playerId and (rightPlayerInfo.playerId == supportId))
	if (rightPlayerInfo and rightPlayerInfo.playerId  and (rightPlayerInfo.playerId == myGuessInfo.supportId)) or supportRight then 
		self.c3:setSelectedIndex(1)
		self.view:getChildAutoType("img_rightGuess"):setVisible(true)
	end
	if (self._args.enterType and self._args.enterType == 2) then
		self.view:getChildAutoType("img_leftGuess"):setVisible(false)
		self.view:getChildAutoType("img_rightGuess"):setVisible(false)
	end


	if (CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight) then
		CrossLaddersChampModel:checkHaveQualify(function(data)
			if not (data and data.rank and data.rank <= 256) then
				print(8850,">>>>>>>>>>>>>recordId2222>>>>",recordId)
				local dayStr    = DateUtil.getOppostieDays()
				local key   = string.format("CrossLaddersChampQuizView_%s_%s",dayStr,CrossLaddersChampModel.stage)
				if not FileCacheManager.getBoolForKey(key, false) then
					local reqInfo = {
						nodeId = nodeId,
					}
					RPCReq.SkyLadChampion_GetNodeInfo(reqInfo,function(params)  
						local nodeInfo = params.nodeInfo or {}
						local recordId = nodeInfo[pos].recordId or ""
						print(8850,">>>>>>>>>>>>>recordId33333>>>>",recordId)
						CrossLaddersChampModel.isLookQuiz = true
						CrossLaddersChampModel:battleBegin(recordId,true)
					end)
				end
			elseif CrossLaddersChampModel:isSecond() then
				local dayStr    = DateUtil.getOppostieDays()
				local key   = string.format("CrossLaddersChampQuizView_%s_%s",dayStr,CrossLaddersChampModel.stage)
				if not FileCacheManager.getBoolForKey(key, false) then
					local reqInfo = {
						nodeId = nodeId,
					}
					CrossLaddersChampModel.isLookQuiz = true
					RPCReq.SkyLadChampion_GetNodeInfo(reqInfo,function(params)  
						local nodeInfo = params.nodeInfo or {}
						local recordId = nodeInfo[pos].recordId or ""
						print(8850,">>>>>>>>>>>>>recordId33333>>>>",recordId)
						CrossLaddersChampModel.isLookQuiz = true
						CrossLaddersChampModel:battleBegin(recordId,true)
					end)
				end
			end
		end) 
	end

	self.btn_record:removeClickListener(11)
	self.btn_record:addClickListener(function()
		if self._args.enterType == 3 then
			ModelManager.BattleModel:requestBattleRecord(recordId)
			return
		end
		local reqInfo = {
			nodeId = nodeId,
		}
		RPCReq.SkyLadChampion_GetNodeInfo(reqInfo,function(params)  
			local nodeInfo = params.nodeInfo or {}
			local recordId = nodeInfo[pos].recordId or ""
			CrossLaddersChampModel.isFigthtRecord = true
			ModelManager.BattleModel:requestBattleRecord(recordId)
		end)
	end,11)
	
	self.btn_look:setVisible(CrossLaddersChampModel.status == GameDef.SkyLadChampionStatus.Fight)
	self.btn_look:removeClickListener(11)
	self.btn_look:addClickListener(function()
		local reqInfo = {
			nodeId = nodeId,
		}
		RPCReq.SkyLadChampion_GetNodeInfo(reqInfo,function(params)  
			local nodeInfo = params.nodeInfo or {}
			local recordId = nodeInfo[pos].recordId or ""
			-- CrossLaddersChampModel.isFigthtRecord = true
			-- ModelManager.BattleModel:requestBattleRecord(recordId)
			CrossLaddersChampModel.isLookQuiz = true
			CrossLaddersChampModel:battleBegin(recordId,false,true)
		end)
	end,11)

	self.btn_LGuess:removeClickListener(11)
	self.btn_LGuess:addClickListener(function() 
		local supportInfo = {
			nodeId 	= nodeId,
			pos 	= pos,
			supportId 	= leftPlayerInfo.playerId,
			guessName 	= leftPlayerInfo.name,
		}
		ViewManager.open("CrossLaddersChampGuessView",supportInfo)
	end,11)

	self.btn_RGuess:removeClickListener(11)
	self.btn_RGuess:addClickListener(function() 
		local supportInfo = {
			nodeId 	= nodeId,
			pos 	= pos,
			supportId 	= rightPlayerInfo.playerId,
			guessName 	= rightPlayerInfo.name,
			func = function() 
				self:setGuessInfo()
			end
		}
		ViewManager.open("CrossLaddersChampGuessView",supportInfo)
	end,11)

	leftOdds 	= leftOdds > 2 and 2 or leftOdds
	rightOdds 	= rightOdds > 2 and 2 or rightOdds
	self.txt_LOdds:setText(string.format(Desc.CrossLaddersChamp_str28,leftOdds))
	self.txt_ROdds:setText(string.format(Desc.CrossLaddersChamp_str28,rightOdds))
	CrossLaddersChampModel:getSkyLadChampion_GetGuessScore(function(myScore) 
		self.myScore:setText(myScore)
	end)
	self.LProgressBar:setMax(100)
	self.RProgressBar:setMax(100)
	self.LProgressBar:setValue(leftValue)
	self.RProgressBar:setValue(rightValue)

	if myGuessInfo.nodeId and (not self._args.enterType or (self._args.enterType and self._args.enterType ~= 2))then
		self.c1:setSelectedIndex(1)
	end
	if self._args.enterType == 3 then
		local guessRecordInfo = CrossLaddersChampModel:getHistoryGuessRecordInfo()
		self.c1:setSelectedIndex(guessRecordInfo.result and 3 or 4)
	end
	if self._args.enterType == 4 then
		self.c1:setSelectedIndex(self._args.result and 3 or 4)
	end
	if (leftValue ==51) then
		leftValue = 50
		rightValue = 50
	end
	self.txt_RSupportNum:setText(string.format("%s%%",rightValue))
	self.txt_LSupportNum:setText(string.format("%s%%",leftValue))
end

-- 阵容展示
function CrossLaddersChampQuizView:showArray(isMyMatch)
	local guessInfo 	= CrossLaddersChampModel.guessInfo or {}
	local nodeId 	= guessInfo.nodeId
	local pos 	= guessInfo.pos
	local groupId 	= guessInfo.groupId
	local leftPlayerInfo 	= guessInfo.leftPlayerInfo 	or {}
	local rightPlayerInfo 	= guessInfo.rightPlayerInfo or {}
	local myGuessInfo 	= guessInfo.myGuessInfo or {}
	if isMyMatch then
		self.c1:setSelectedIndex(2)
		local enemyPlayerInfo = CrossLaddersChampModel:getMyEnemyPlayerId()
		leftPlayerInfo = {
			name 	= PlayerModel.username,
			level 	= PlayerModel.level,
			serverId 	= LoginModel:getUnitServerId(),
			playerId = tonumber(PlayerModel.userid)
		}
		rightPlayerInfo = enemyPlayerInfo
	end
	if self._args.enterType == 3 then
		local guessRecordInfo = CrossLaddersChampModel:getHistoryGuessRecordInfo()
		leftPlayerInfo 	= guessRecordInfo.leftPlayerInfo
		rightPlayerInfo = guessRecordInfo.rightPlayerInfo
		self.c1:setSelectedIndex(guessRecordInfo.result and 3 or 4)
	end
	if self._args.enterType == 4 then
		local guessRecordInfo = self._args.data
		leftPlayerInfo 	= guessRecordInfo.leftPlayerInfo
		rightPlayerInfo = guessRecordInfo.rightPlayerInfo
		self.c1:setSelectedIndex(self._args.result and 3 or 4)
	end
	if  rightPlayerInfo and  rightPlayerInfo.playerId and rightPlayerInfo.playerId ~="" then
		self.c2:setSelectedIndex(0)
	end

	-- 左边玩家
	self.txt_LPlayerName:setText(leftPlayerInfo.name or "")
	self.txt_LPlayerLv:setText(leftPlayerInfo.level or "")
	self:getBattleArr(leftPlayerInfo.playerId, leftPlayerInfo.serverId,function(arrayInfo)
		self:setArray(arrayInfo, true)
		local leftPower = self:getFightIngPower(arrayInfo)
		self.txt_LPlayerPower:setText(StringUtil.transValue(leftPower or 0))
	end)

	-- 右边队伍
	self.txt_RPlayerName:setText(rightPlayerInfo.name or "")
	self.txt_RPlayerLv:setText(rightPlayerInfo.level or "")
	self:getBattleArr(rightPlayerInfo.playerId, rightPlayerInfo.serverId,function(arrayInfo)
		self:setArray(arrayInfo, false)
		if rightPlayerInfo and  rightPlayerInfo.playerId and rightPlayerInfo.playerId ~="" then
			if TableUtil.GetTableLen(arrayInfo) > 0 then
				self.c2:setSelectedIndex(0)
			else
				self.c2:setSelectedIndex(2)
			end
		end
		local rightPower = self:getFightIngPower(arrayInfo)
		self.txt_RPlayerPower:setText(StringUtil.transValue(rightPower or 0))
	end)
end

-- 设置阵容
function CrossLaddersChampQuizView:setArray(arrayInfo,isLeft)
	if not arrayInfo.heroInfo then
		return
	end
	local hasRePlace = false
	local leftReplaceArr = {}
	local rightReplaceArr = {}
	for seatId, heroInfo in pairs(arrayInfo.heroInfo) do
		if self:getSeatType(seatId) == "replace" then --替补位
			hasRePlace = true
			if isLeft then
				table.insert(leftReplaceArr, heroInfo)
			else
				table.insert(rightReplaceArr, heroInfo)
			end
		end
	end

	local function cmpp(a,b)  
		return tonumber(a.id) < tonumber(b.id)
	end

	if isLeft then
		self.list_LSub:setVisible(hasRePlace)
		table.sort(leftReplaceArr,cmpp)
		self:showReplaceItem(self.list_LSub, leftReplaceArr)
	else
		table.sort(rightReplaceArr,cmpp)
		self.list_RSub:setVisible(hasRePlace)
		self:showReplaceItem(self.list_RSub, rightReplaceArr)
	end

	for i = 1, 6, 1 do
		local pos = self.posInfo[i]
		if not arrayInfo.heroInfo then
			break
		end
		local modeitemInfo = arrayInfo.heroInfo[pos]
		local modeKey = "model_" .. pos
		local aniKey = "1_" .. pos
		if not isLeft then
			modeKey = "rigthmodel_" .. pos
			aniKey = "2_" .. pos
		end
		local item = self.view:getChildAutoType(modeKey)
		local com_mode = item:getChildAutoType("com_mode")
		local img_type = item:getChildAutoType("img_type")
		local txt_level = item:getChildAutoType("txt_level")
		if not modeitemInfo then
			item:setVisible(false)
		else
			item:setVisible(true)
			local configItem = DynamicConfigData.t_hero[modeitemInfo.code]
			local modeId = configItem.model
			local skeletonNode = SpineMnange.createSprineById(modeId)
			if not skeletonNode then
				LuaLogE(DescAuto[105] .. modeId) -- [105]="无当前spine"
				break
			end
			com_mode:displayObject():addChild(skeletonNode)
			skeletonNode:setAnimation(0, "stand", true)
			if not isLeft then
				skeletonNode:setScaleX(-1)
			end
			if self.skeletonNode[aniKey] then
				self.skeletonNode[aniKey]:removeFromParent()
			end
			self.skeletonNode[aniKey] = skeletonNode
			img_type:setURL(PathConfiger.getCardCategory(configItem.category))
			txt_level:setText(modeitemInfo.level .. Desc.itemtips_level2)
		end
	end

end

function CrossLaddersChampQuizView:showReplaceItem(list, hero)
	list:setItemRenderer(
		function(index, obj)
			local heroInfo = hero[index + 1]
			if not heroInfo then
				return
			end
			local heroId = heroInfo.code
			local configInfo = DynamicConfigData.t_hero[heroId]
			if not configInfo then
				return
			end
			local SubItem = BindManager.bindSubItem(obj)
			SubItem:initItemCell(heroId, heroInfo.star, heroInfo.level,nil, heroInfo.fashionId)
		end
	)
	list:setNumItems(#hero)
end

--根据座位id 获取座位类型
function CrossLaddersChampQuizView:getSeatType(id)
	for typeKey, typeList in pairs(ModelManager.BattleModel.SeatType) do
		for k, ranges in ipairs(typeList) do
			for seatId = ranges[1], ranges[2] do
				if seatId == id then
					return typeKey
				end
			end
		end
	end
	return ""
end

-- 计算战力
function CrossLaddersChampQuizView:getFightIngPower(arrayInfo)
	local power = 0
	if not arrayInfo.heroInfo then
		return power
	end
	for seatId, heroInfo in pairs(arrayInfo.heroInfo) do
		power = power + heroInfo.combat
	end
	return power
end

-- 获取阵容信息
function CrossLaddersChampQuizView:getBattleArr(playerId,serverId,callfuc)
	local params = {}
	params.playerId 	= 	playerId
	params.serverId		=  	serverId --LoginModel:getUnitServerId();
	params.arrayType 	=  	GameDef.BattleArrayType.SkyLadChampion
	params.onSuccess 	= function (res )
		if tolua.isnull(self.view) then return end
		if callfuc then
			local data = {}
			data.heroInfo = {}
			if res.playerInfo and res.playerInfo.array then
				for k,v in pairs(res.playerInfo.array) do
					data.heroInfo[v.id] = v
				end
			end
			callfuc(data)
		end
	end	
	RPCReq.Player_FindPlayer(params, params.onSuccess)
end

-- 倒计时
function CrossLaddersChampQuizView:updateCountDown(isMyMatch)
	local guessInfo 	= CrossLaddersChampModel.guessInfo or {}
	local myGuessInfo 	= guessInfo.myGuessInfo or {}
	local status = CrossLaddersChampModel.status
	local stopTimes 	= math.floor(CrossLaddersChampModel.curEndTimeMs/1000)
	local serverTime 	= ServerTimeModel:getServerTime()
	stopTimes = stopTimes - serverTime
	if stopTimes > 0 then
		local sec = 0
		local function onCountDown(dt)
			-- print(8850,">>>>>>>dt>>>" .. dt)
			sec = sec + dt
			if sec >= 1 then
				stopTimes = stopTimes - sec
				sec = sec -1
				if stopTimes <= 0 then
					stopTimes = 0
				end
				local str = ""
				if not tolua.isnull(self.txt_timer) then
					local str = ""
					if isMyMatch then
						str = Desc["CrossLaddersChamp_adjStatus" ..tonumber(CrossLaddersChampModel.status)]
					else
						str = Desc["CrossLaddersChamp_guessStatus" ..tonumber(CrossLaddersChampModel.status)]
					end
					self.txt_timerTitle:setText(str)
					self.txt_timer:setText(TimeLib.GetTimeFormatDay(math.floor(stopTimes), 2))
				end
				if stopTimes <= 0 then
					stopTimes = 0
					self.txt_timer:setText(TimeLib.GetTimeFormatDay(math.floor(stopTimes), 2))
					Scheduler.unschedule(self.timer)
					self.timer = false
				end
			end
		end
        if not tolua.isnull(self.txt_timer) then
			self.txt_timer:setText(TimeLib.GetTimeFormatDay(math.floor(stopTimes), 2))
		end
		if self.timer then
			Scheduler.unschedule(self.timer)
			self.timer = false
		end

		self.timer = Scheduler.schedule(function(dt)
            onCountDown(dt)
        end,0.01)
    else
        if self.timer then
            Scheduler.unschedule(self.timer)
            self.timer = false
        end
        self.txt_timer:setText("")
    end
end



function CrossLaddersChampQuizView:_exit()
	if self.timer then
		Scheduler.unschedule(self.timer)
		self.timer = false
	end
end

return CrossLaddersChampQuizView