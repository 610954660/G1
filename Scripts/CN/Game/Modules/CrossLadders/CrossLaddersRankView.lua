--Date :2020-12-30
--Author : generated by FairyGUI
--Desc : 

local CrossLaddersRankView,Super = class("CrossLaddersRankView", Window)

function CrossLaddersRankView:ctor()
	--LuaLog("CrossLaddersRankView ctor")
	self._packName = "CrossLadders"
	self._compName = "CrossLaddersRankView"
	self._rootDepth = LayerDepth.PopWindow
	self.rankData = {}
	self.myRankData = {}
end

function CrossLaddersRankView:_initEvent( )
	
end

function CrossLaddersRankView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:CrossLadders.CrossLaddersRankView
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.list_rank = viewNode:getChildAutoType('list_rank')--GList
	self.myRankItem = viewNode:getChildAutoType('myRankItem')--rankItem
		self.myRankItem.bgMask = viewNode:getChildAutoType('myRankItem/bgMask')--GLoader
		self.myRankItem.heroCell = viewNode:getChildAutoType('myRankItem/heroCell')--GButton
		self.myRankItem.rankIconLoader = viewNode:getChildAutoType('myRankItem/rankIconLoader')--GLoader
		self.myRankItem.txt_guildName = viewNode:getChildAutoType('myRankItem/txt_guildName')--GTextField
		self.myRankItem.txt_myRankTitle = viewNode:getChildAutoType('myRankItem/txt_myRankTitle')--GTextField
		self.myRankItem.txt_name = viewNode:getChildAutoType('myRankItem/txt_name')--GTextField
		self.myRankItem.txt_noRank = viewNode:getChildAutoType('myRankItem/txt_noRank')--GTextField
		self.myRankItem.txt_power = viewNode:getChildAutoType('myRankItem/txt_power')--GTextField
		self.myRankItem.txt_rank = viewNode:getChildAutoType('myRankItem/txt_rank')--GTextField
	self.rankCtrl = viewNode:getController('rankCtrl')--Controller
	self.txt_integralTitle = viewNode:getChildAutoType('txt_integralTitle')--GTextField
	self.txt_playerInfoTitle = viewNode:getChildAutoType('txt_playerInfoTitle')--GTextField
	self.txt_rankTitle = viewNode:getChildAutoType('txt_rankTitle')--GTextField
	--{autoFieldsEnd}:CrossLadders.CrossLaddersRankView
	--Do not modify above code-------------
end

function CrossLaddersRankView:_initListener( )
	self.list_rank:setVirtual()
	self.list_rank:setItemRenderer(function(index, obj)
		index = index + 1
		local data = self.rankData[index]
		local rankCtrl = obj:getController("rankCtrl")
		local haveRankCtrl = obj:getController("haveRankCtrl")
		local isMe = obj:getController("isMe")
		local haveGuildCtrl = obj:getController("haveGuildCtrl")
		local txt_rank 	= obj:getChildAutoType("txt_rank")
		local heroCell 	= BindManager.bindPlayerCell(obj:getChildAutoType("heroCell"))
		local txt_name 	= obj:getChildAutoType("txt_name")
		local txt_power = obj:getChildAutoType("txt_power")
		local txt_guildName = obj:getChildAutoType("txt_guildName")
		local txt_noRank = obj:getChildAutoType("txt_noRank")

		haveGuildCtrl:setSelectedIndex((data.guildName and data.guildName~="") and 0 or 1)
		isMe:setSelectedIndex(0)
		haveRankCtrl:setSelectedIndex(1)
		rankCtrl:setSelectedIndex((data.rank and data.rank < 4) and data.rank or 4)
		txt_rank:setText(data.rank or 0)
		if data.guildName and data.guildName~="" then
			txt_guildName:setText(string.format(Desc.CrossLadders_guildName,data.guildName or ""))
		else
			txt_guildName:setText(Desc.CrossLadders_str7)
		end
		heroCell:setHead(data.head, data.level, data.id,nil,data.headBorder)
		txt_name:setText(data.name or "")
		txt_power:setText(string.format(Desc.CrossLadders_power,StringUtil.transValue(data.combat or 0)))

		obj:removeClickListener(11)
		obj:addClickListener(function(context)
			context:stopPropagation()--阻止事件冒泡
			ViewManager.open("ViewPlayerView",{playerId = data.id,serverId = data.serverId,arrayType = GameDef.BattleArrayType.SkyLadderDef })
		end,11)
	end)

	local reqInfo = {
        rankType = GameDef.RankType.SkyLadder,
    }
    RPCReq.Rank_GetRankData(reqInfo,function(params)
        self.rankData = params.rankData or {}
        self.myRankData = params.myRankData or {}
        if tolua.isnull(self.view) then return end
		self.list_rank:setData(self.rankData)  
		self.rankCtrl:setSelectedIndex(TableUtil.GetTableLen(self.rankData) > 0 and 0 or 1)
        local inRank = false
        local myRank = false
        local myId = tonumber(ModelManager.PlayerModel.userid)
        for k,v in pairs(self.rankData) do
            if myId == v.id then
                inRank = true
                myRank = k
                break
            end
		end
		self:setMyRankInfo(inRank)
    end)

end

function CrossLaddersRankView:setMyRankInfo(inRank)
	local data = self.myRankData
	local obj = self.myRankItem
	local rankCtrl = obj:getController("rankCtrl")
	local haveRankCtrl = obj:getController("haveRankCtrl")
	local isMe = obj:getController("isMe")
	local haveGuildCtrl = obj:getController("haveGuildCtrl")
	local txt_rank 	= obj:getChildAutoType("txt_rank")
	local heroCell 	= BindManager.bindPlayerCell(obj:getChildAutoType("heroCell"))
	local txt_name 	= obj:getChildAutoType("txt_name")
	local txt_power = obj:getChildAutoType("txt_power")
	local txt_guildName = obj:getChildAutoType("txt_guildName")
	local txt_noRank = obj:getChildAutoType("txt_noRank")

	haveGuildCtrl:setSelectedIndex(((data.guildName and data.guildName~="") or (GuildModel.guildList.name)) and 0 or 1)
	isMe:setSelectedIndex(1)
	haveRankCtrl:setSelectedIndex(inRank and 1 or 0)
	-- rankCtrl:setSelectedIndex((data.rank and data.rank <4) and data.rank or 4)
	rankCtrl:setSelectedIndex(4)
	txt_rank:setText(data.rank or 0)
	if (data.guildName and data.guildName~="") or GuildModel.guildList.name then
		txt_guildName:setText(string.format(Desc.CrossLadders_guildName,data.guildName or GuildModel.guildList.name))
	else
		txt_guildName:setText(Desc.CrossLadders_str7)
	end
	heroCell:setHead(data.head or PlayerModel.head, data.level or PlayerModel.level, data.id or tonumber(PlayerModel.userid),nil,data.headBorder or PlayerModel.headBorder)
	txt_name:setText(data.name or PlayerModel.username)
	txt_power:setText(string.format(Desc.CrossLadders_power,StringUtil.transValue(data.combat or 0)))

	-- obj:removeClickListener(11)
	-- obj:addClickListener(function(context)
	-- 	context:stopPropagation()--阻止事件冒泡
	-- 	ViewManager.open("FriendCheckView",{playerId = data.id,serverId = data.serverId})
	-- end,11)
end

function CrossLaddersRankView:_initUI( )
	self:_initVM()
	self:_initListener()
end




return CrossLaddersRankView