--Name : TacticalActiveHintView.lua
--Author : generated by FairyGUI
--Date : 2020-4-15
--Desc : 
local SeatItem=require "Game.Modules.Battle.Cell.SeatItem"
local TacticalActiveHintView, Super = class("TacticalActiveHintView", Window)
function TacticalActiveHintView:ctor(args)
	self._packName = "Tactical"
	self._compName = "TacticalActiveHintView"
	self._rootDepth = LayerDepth.PopWindow

	self.countDownId = false
end


function TacticalActiveHintView:_initUI( )
	--信息面板
	local taticalCell = self.view:getChildAutoType("taticalCell")
	local txt_name = self.view:getChildAutoType("txt_name")
	local txt_type = self.view:getChildAutoType("txt_type")
	local txt_countDown = self.view:getChildAutoType("txt_countDown")
	
	local tactical = ModelManager.TacticalModel.activeTactical
	
	local unlockInfo = DynamicConfigData.t_TacticalUnlock[tactical]
	
	local cell = BindManager.bindTacticalCell(taticalCell)
	cell:setData(unlockInfo.tactical)
	--loader_icon:setURL(PathConfiger.getItemIcon(unlockInfo.icon))	
	txt_name:setText(unlockInfo.name)
	txt_type:setText(unlockInfo.describe)
	
	ModelManager.TacticalModel.activeTactical = false
	local totalSec = 3
	txt_countDown:setText(string.format(Desc.tactical_closeTime, totalSec))
	
	self.countDownId = CountDownUtil.startNew(totalSec * 1000, 1000, function(self, timePassed, clockId)
		local timeLeft = math.round((totalSec * 1000 - timePassed)/1000)
		txt_countDown:setText(string.format(Desc.tactical_closeTime, timeLeft))
	end, function()
		self:closeView()
	end, self)
end

function TacticalActiveHintView:_exit()
	if self.countDownId then 
		CountDownUtil.stop(self.countDownId)
	end
end


return TacticalActiveHintView