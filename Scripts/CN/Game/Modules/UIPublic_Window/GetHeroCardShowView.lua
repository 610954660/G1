--Name : GetHeroCardShowView.lua
--Author : generated by FairyGUI
--Date : 2020-7-3
--Desc : 获得英雄展示

local GetHeroCardShowView,Super = class("GetHeroCardShowView", Window)
local  HeroConfiger = require "Game.ConfigReaders.HeroConfiger"
local changeTime = 0.3
local maxInterTime = 1
local lastInterTime = 0.1
function GetHeroCardShowView:ctor()
	--LuaLog("GetHeroCardShowView ctor")
	self._packName = "UIPublic_Window"
	self._compName = "GetHeroCardShowView"
	self._rootDepth = LayerDepth.AlertWindow
	self.curData = self._args.data --单个卡牌数据
	--printTable(1,self.curData)
	self.speFlag = self._args.speFlag
	self.lihuiDisplay =false
	self.soundId = 0
	self.__aniTimerId = false
	self.timeCount = 0
	self.__timerId = false
	self.__timerSkillId = false
	self.__timerSpineId = false
	self.heroQuality = false
	self.schedulerArr = {}
	self.compNode =false --未了动画适配问题将整UI组装成组件
end

function GetHeroCardShowView:_initEvent( )
	
end

function GetHeroCardShowView:_initVM( )
	local vmRoot = self
	local viewNode = self.view:getChildAutoType("comp")
	self.compNode = viewNode
	---Do not modify following code--------
	--{vmFields}:UIPublic_Window.GetHeroCardShowView
		vmRoot.name = viewNode:getChildAutoType("$name")--text
		vmRoot.title = viewNode:getChildAutoType("$title")--richtext
		vmRoot.spineParent = viewNode:getChildAutoType("$spineParent")--
		vmRoot.cardStar = viewNode:getChildAutoType("$cardStar")--Button
		vmRoot.loader_category = viewNode:getChildAutoType("$loader_category")--loader
		vmRoot.clasebtn2 = viewNode:getChildAutoType("$clasebtn2")--Label
		vmRoot.skillsList = viewNode:getChildAutoType("$skillsList")--list
		vmRoot.loader_career = viewNode:getChildAutoType("$loader_career")--loader
		vmRoot.lihuiLoader = viewNode:getChildAutoType("$lihuiLoader")--loader
		vmRoot.cateName = viewNode:getChildAutoType("$cateName")
	--{vmFieldsEnd}:UIPublic_Window.GetHeroCardShowView
	--Do not modify above code-------------
end

function GetHeroCardShowView:_initUI( )
	cc.TextureCache:getInstance():setUseAsyncType(0)
	self:_initVM()
	
	
	local heroQuality = self.compNode:getChildAutoType("heroQuality")
	self.heroQuality = BindManager.bindHeroQuality(heroQuality)
	
	
	self.cardType = self.compNode:getChildAutoType("cardType")
	self.newImg = self.compNode:getChildAutoType("n38")
	self.spineDown = self.compNode:getChildAutoType("spineDown")
	self.spineUp = self.compNode:getChildAutoType("spineUp")
	self:setBg("bg_heroInfo3.jpg")
	self.cardTypeCtrl = self.compNode:getController("cardTypeCtrl")
	self.isNewCtrl = self.compNode:getController("isNewCtrl")

	self.clasebtn2:setTouchable(false)
	local config = DynamicConfigData.t_hero[self.curData.code]
	
	self.heroQuality:setData(config.quality)
	self.lihuiDisplay = BindManager.bindLihuiDisplay(self.spineParent)
	self.lihuiDisplay:setData(config.heroId, nil, nil, self.curData.fashionCode)
	self.lihuiDisplay:setColor({r=0,g=0,b=0}) --纯黑
	self.cardStarObj =  BindManager.bindCardStar(self.cardStar)
	
	self.name:setText(config.heroName)
	self.title:setText(config.tip3)
	local categoryStr,professionalStr,categoryImg,professionalImg = PlayerModel:getProfessional(self.curData.code)
    self.cateName:setText(categoryStr.."·"..professionalStr)
		--播放立绘的音效
	if config.sound and #config.sound>0 then
		if config.sound[3] then
			self.soundId = SoundManager.playSound(config.sound[3],false)
		end
	end
	self.loader_category:setURL(PathConfiger.getCardCategory(config.category))
	self.loader_career:setURL(PathConfiger.getCardProfessionalWhite(config.professional))
	local flag = CardLibModel:checkHeroCardNew( self.curData.code,config.category )
	if self.curData.isNew or (self.curData.extraData and self.curData.extraData.hero and self.curData.extraData.hero.isNew) then
		self.isNewCtrl:setSelectedIndex(1)
	else
		self.isNewCtrl:setSelectedIndex(0)
	end

	self.compNode:getTransition("t0"):play(function( ... )
						  end);
	local lihuichuxian_down_Name = "lihuichuxian_ssr_down"
	local lihuichuxian_up_Name = "lihuichuxian_sr_up"
	if config.heroStar ==4 then
		lihuichuxian_down_Name = "lihuichuxian_sr_duwn"
		lihuichuxian_up_Name = "lihuichuxian_sr_up"
	else
		lihuichuxian_down_Name = "lihuichuxian_ssr_down"
		lihuichuxian_up_Name = "lihuichuxian_ssr_up"
	end
	
	--立绘黑变白
	local aniFunc = function()
	    if tolua.isnull(self.view) then return  end
		--黑开始变白的时候  出现稀有特效
		if config.heroStar == 5 then
			local zitichuxian_up = SpineUtil.createSpineObj(self.cardType, vertex2(110,45), "zitichuxian_ssr_up", "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",false)
		else
			local zitichuxian_up = SpineUtil.createSpineObj(self.cardType, vertex2(110,45), "zitichuxian_sr_up", "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",false)
		end
		self.cardStarObj:setAniFlag(true)
		self.cardStarObj:setData(config.heroStar,4)

		if self.__aniTimerId then
			Scheduler.unschedule(self.__aniTimerId)
			self.__aniTimerId = false
		end
		
		self.__aniTimerId=Scheduler.schedule(function(time)
			self.timeCount=self.timeCount + time
			if self.timeCount>=changeTime then
			    if tolua.isnull(self.view) then return  end
				self.lihuiDisplay:setColor({r=255,g=255,b=255})
				self.clasebtn2:setTouchable(true)
				self.timeCount =0
				ParticleUtil.createParticleObj(self.view,cc.p(self.view:getWidth()/2,self.view:getHeight()/2),"ui_choukalihui_particle","Spine/ui/chouka")
				if self.__aniTimerId then
					Scheduler.unschedule(self.__aniTimerId)
					self.__aniTimerId = false
				end
			else
			    if tolua.isnull(self.view) then return  end
				print(1,self.timeCount *1/changeTime)
				self.lihuiDisplay:setColor({r=255*self.timeCount *1/changeTime,g=255*self.timeCount/changeTime,b=255*self.timeCount/changeTime})
			end
		end,0.01)
	end
	
	--立绘底下和顶上特效播放
	local aniBeginFunc = function( ... )
	    if tolua.isnull(self.view) then return  end
		local lihuichuxian_down =  SpineUtil.createSpineObj(self.spineDown, vertex2(0,0), lihuichuxian_down_Name, "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",false)
		local lihuichuxian_up =  SpineUtil.createSpineObj(self.spineUp, vertex2(0,-25), lihuichuxian_up_Name, "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",false)
		lihuichuxian_up:setCompleteListener(function(name)
			-- aniFunc() --立绘从黑变白
			if name ==lihuichuxian_up_Name and lihuichuxian_up_Name =="lihuichuxian_ssr_up" then
				local animation = SpineUtil.createSpineObj(self.cardType, vertex2(110,45), "animation", "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",true)
			elseif name ==lihuichuxian_up_Name and lihuichuxian_up_Name =="lihuichuxian_sr_up" then
			end
		end)
	end
	
	--新字在1秒后触发增加特效
    local  createNewFunc = function( ... )
		if self.__timerId then
			TimeLib.clearCountDown(self.__timerId)
			self.__timerId = false
		end
		self.__timerId = TimeLib.newCountDown(1.2, function(time)
		end, function()
		    if tolua.isnull(self.view) then return  end
			if self.curData.isNew or (self.curData.extraData and self.curData.extraData.hero and self.curData.extraData.hero.isNew) then
				local lihuichuxian_up =  SpineUtil.createSpineObj(self.newImg, vertex2(25,18), "ui_zitilizi_loop", "Spine/ui/chouka", "jixiyou_texiao", "jixiyou_texiao",true)
			end
		end, false, false, false)
	end

	aniBeginFunc()
	if self.__timerId then
		TimeLib.clearCountDown(self.__timerId)
		self.__timerId = false
	end
	self.__timerId = TimeLib.newCountDown(0.3, function(time)
	end, function()
		-- aniBeginFunc() --立绘底下和顶上
		if self.__timerId then
			TimeLib.clearCountDown(self.__timerId)
			self.__timerId = false
		end
		createNewFunc() --新字特效
	end, false, false, false)
	
	--立绘0.67秒后开始变色
	if self.__timerSpineId then
		TimeLib.clearCountDown(self.__timerSpineId)
		self.__timerSpineId = false
	end
	self.__timerSpineId = TimeLib.newCountDown(0.3, function(time)
	end, function()
		aniFunc()
		if self.__timerSpineId then
			TimeLib.clearCountDown(self.__timerSpineId)
			self.__timerSpineId = false
		end
	end, false, false, false)


	if config.heroStar<=3 then
		self.cardTypeCtrl:setSelectedIndex(0)
	elseif config.heroStar==4 then
		self.cardTypeCtrl:setSelectedIndex(1)
	elseif config.heroStar==5 then
		self.cardTypeCtrl:setSelectedIndex(2)
        local Ef_llihuizhanshi =  SpineUtil.createSpineObj(self._frame, vertex2(self._frame:getWidth()/2,self._frame:getHeight()/2), "animation", "Spine/ui/chouka", "Ef_llihuizhanshi", "Ef_llihuizhanshi",true)
	end


    local ultSkill, passiveSkill = CardLibModel:getSkillListbyUUid(2,self.curData.code) 
    self.skillsList:setItemRenderer(
        function(index, obj)
        	local linxiCtrl = obj:getController("linxiCtrl")
        	linxiCtrl:setSelectedIndex(1)
            obj:removeClickListener(100)
			-- local interTime = maxInterTime/#ultSkill
			-- if interTime >= lastInterTime then
			-- 	interTime = lastInterTime
			-- end
			local interTime = lastInterTime
			obj:setVisible(false)
			self.schedulerArr[index] = Scheduler.scheduleOnce(index*interTime, function( ... )
					if obj and  (not tolua.isnull(obj)) then
						obj:setVisible(true)
						obj:getTransition("t0"):play(function( ... )
						end);
					end
			end)
            obj:addClickListener(
                function(context)
                    --点击查看技能详情
                    local skillInfo = false
						skillInfo = DynamicConfigData.t_skill[ultSkill[index + 1]]
						if skillInfo then
							ViewManager.open("ItemTips", {codeType = CodeType.SKILL, id = ultSkill[index + 1], heroId = self.curData.code})
						end
                end,
            100)
			
			local skillCell = BindManager.bindSkillCell(obj)
			skillCell:setData(ultSkill[index + 1])
        end
	)
	
	if self.__timerSkillId then
		TimeLib.clearCountDown(self.__timerSkillId)
		self.__timerSkillId = false
	end
	self.__timerSkillId = TimeLib.newCountDown(2, function(time)
	end, function()
		if tolua.isnull(self.view) then
			return 
		end
		self.skillsList:setNumItems((#ultSkill))
	end, false, false, false)

	self.clasebtn2:addClickListener(function( ... )
		Dispatcher.dispatchEvent("show_GetCardView")
		ViewManager.close("GetHeroCardShowView")
	end)
    if not self.speFlag then
	    self.view:getChildAutoType("frame/n45"):setVisible(true)
    else
    	self.view:getChildAutoType("frame/n45"):setVisible(false)
    end
end

function GetHeroCardShowView:_exit( ... )
	-- cc.TextureCache:getInstance():setUseAsyncType(0)
	SoundManager.stopSound(self.soundId)
	if self.__aniTimerId then
		Scheduler.unschedule(self.__aniTimerId)
		self.__aniTimerId = false
	end
	for i,v in ipairs(self.schedulerArr) do
		if self.schedulerArr[i] then
        	Scheduler.unschedule(self.schedulerArr[i])
        	self.schedulerArr[i] = false
        end
	end
	if self.__timerSkillId then
		TimeLib.clearCountDown(self.__timerSkillId)
		self.__timerSkillId = false
	end
	if self.__timerSpineId then
		TimeLib.clearCountDown(self.__timerSpineId)
		self.__timerSpineId = false
	end
	
	if self.curData.closeCallback  then
		Scheduler.scheduleNextFrame(function ( ... )
			self.curData.closeCallback()
		end)
	end
end


return GetHeroCardShowView