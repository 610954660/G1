--Name : AlertRewardView.lua
--Author : generated by FairyGUI
--Date : 2020-6-18
--Desc : 

local AlertRewardView,Super = class("AlertRewardView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
function AlertRewardView:ctor(args)
	--LuaLog("AlertRewardView ctor")
	self._packName = "UIPublic_Window"
	self._compName = "AlertRewardView"
	self._rootDepth = LayerDepth.AlertWindow
	self.args = args
	self.rewardType=false
end

function AlertRewardView:_initEvent( )
	
end

function AlertRewardView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:UIPublic_Window.AlertRewardView
		vmRoot.closeMask = viewNode:getChildAutoType("$closeMask")--Button
		vmRoot.leftTime = viewNode:getChildAutoType("$leftTime")--text
		vmRoot.itemList = viewNode:getChildAutoType("$itemList")--list
		vmRoot.passFloor = viewNode:getChildAutoType("$passFloor")--richtext
		vmRoot.yesBtn = viewNode:getChildAutoType("$yesBtn")--Button
	--{vmFieldsEnd}:UIPublic_Window.AlertRewardView
	--Do not modify above code-------------
	self.rewardType=self.view:getController("rewardType")
	
end

function AlertRewardView:_initUI( )
	self:_initVM()
	if self.args.activeType then
		self:setPataData()
	else
		self:setBaseData()
	end
	self.closeMask:addClickListener(function()
			self:closeView();
	end)

end


function AlertRewardView:setPataData()
	
	
	self.rewardType:setSelectedPage("pata")
	self:setTitle(self.args.title)
	self.leftTime:setText(self.args.leftTime)
	self.passFloor:setText(self.args.passFloor)
	
	self.yesBtn:addClickListener(function()
			self:closeView();
			if self.args.onYes then
				self.args.onYes()
			end
	end)

	if (self.args.yesCost) then
		if (not self.yesBtn.costBtn) then
			self.yesBtn.costBtn = BindManager.bindCostButton(self.yesBtn);
		end
		self.yesBtn.costBtn:setData(self.args.yesCost)
	end

	if self.args.yesText then
		self.yesBtn:setTitle(self.args.yesText)
		local costType = (self.args.btnCostType and self.args.yesCost) and self.args.btnCostType or 0
		print(999,"costType",costType)
		self.yesBtn:getController("cost"):setSelectedIndex(costType);
	end

	local cfg_tower = DynamicConfigData.t_tower[self._args.activeType]
	local floorInfo = cfg_tower[self.args.passFloor] or DT
	self.itemList:setItemRenderer(function (index,obj)
			local itemcell = BindManager.bindItemCell(obj)
			local itemData = ItemsUtil.createItemData({data = floorInfo.cleanRewardPre[index + 1]})
			--printTable(4,{data = rewardInfo[index + 1]})
			itemcell:setItemData(itemData)
			obj:removeClickListener(100)
			obj:addClickListener(function( ... )
					itemcell:onClickCell()
				end,100)
		end)
	self.itemList:setData(floorInfo.cleanRewardPre)
	
end

function AlertRewardView:setBaseData()
	self:setTitle(self.args.title)
	self.itemList:setItemRenderer(function (index,obj)
			local itemcell = BindManager.bindItemCell(obj)
			local itemData = ItemsUtil.createItemData({data = self.args.rewardPre[index + 1]})
			itemcell:setItemData(itemData)
			obj:removeClickListener(100)
			obj:addClickListener(function( ... )
					itemcell:onClickCell()
			end,100)
	end)
	self.itemList:setData(self.args.rewardPre)
end




return AlertRewardView