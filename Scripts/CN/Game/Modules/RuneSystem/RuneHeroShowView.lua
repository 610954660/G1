--Name : RuneHeroShowView.lua
--Author : generated by FairyGUI
--Date : 2020-7-27
--Desc : 

local RuneHeroShowView,Super = class("RuneHeroShowView", Window)

function RuneHeroShowView:ctor()
	--LuaLog("RuneHeroShowView ctor")
	self._packName = "RuneSystem"
	self._compName = "RuneHeroShowView"
	self._rootDepth = LayerDepth.PopWindow
	-- self._args.heroUuid = "yYJFVFiVnbNUuY2F"
end

function RuneHeroShowView:_initEvent( )
	
end

function RuneHeroShowView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:RuneSystem.RuneHeroShowView
		vmRoot.prosList = viewNode:getChildAutoType("$prosList")--list
	--{vmFieldsEnd}:RuneSystem.RuneHeroShowView
	--Do not modify above code-------------
	vmRoot.skillTxt = viewNode:getChildAutoType("$skillTxt")
	vmRoot.skillName = viewNode:getChildAutoType("$skillName")
	vmRoot.skillCell = viewNode:getChildAutoType("$skillCell")
	vmRoot.lihuiDisplay = viewNode:getChildAutoType("$lihuiDisplay")
end


function RuneHeroShowView:_initUI( )
	self:_initVM()
	self.lihuiDisplay = BindManager.bindLihuiDisplay(self.lihuiDisplay)
	local cardData = CardLibModel:getHeroByUid(self._args.heroUuid)
	self.lihuiDisplay:setData(cardData.code,nil,nil,cardData.fashionId)

	self.prosList:setItemRenderer(function ( index,obj )
			local data = self.prosList._dataTemplate[index+1]
			obj:getChildAutoType("txt_attrName"):setText(Desc["common_fightAttr"..data.id])
			obj:getChildAutoType("txt_cur"):setText("+"..GMethodUtil:getFightAttrName(data.id,data.value))
			-- obj:getChildAutoType("loader_attrIcon"):setURL()
		end)
	local allPros = RuneSystemModel:getRuleAllPros(RuneSystemModel:getCurBjRuneID())
	self.prosList:setData(allPros)

    local skillData = {}
    local pageData = RuneSystemModel:getRunePagesById( RuneSystemModel:getCurBjRuneID() )
	if pageData then
        skillData = pageData.skills
	end
	
	if not  (#skillData>0) then
		table.insert(skillData,0)
	end
	if skillData[1]~=0 then
    	self.view:getController("statusCtrl"):setSelectedIndex(1)
    	local skillInfo = DynamicConfigData.t_passiveSkill[skillData[1]]
    	self.skillName:setText(skillInfo.name)
    	self.skillTxt:setText(skillInfo.desc)

    	local skillId = skillData[1]
	    local iconLoader = self.skillCell:getChildAutoType("iconLoader"):getChildAutoType("iconLoader")
	    -- local selectFrameImg = self.skillCell:getChildAutoType("selectFrameImg")
	    -- local __levelLabel = self.skillCell:getChildAutoType("lv")
	    -- local lockCtrl = self.skillCell:getController("lockCtrl")
	    -- selectFrameImg:setVisible(false)
	    -- __levelLabel:setVisible(false)

	    local skillInfo = DynamicConfigData.t_passiveSkill[skillId]
	    if skillInfo then
	        local skillurl = ModelManager.CardLibModel:getItemIconByskillId(skillInfo.icon)
	        iconLoader:setURL(skillurl)
	    end
        
	    self.skillCell:addClickListener(function( ... )
	        ViewManager.open("ItemTips", {codeType = CodeType.PASSIVE_SKILL, id = skillId,data = skillInfo,btnShow = true})
	    end,100)

    else
    	self.view:getController("statusCtrl"):setSelectedIndex(0)
    end
end




return RuneHeroShowView