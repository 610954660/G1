--Name : RuneChooseView.lua
--Author : generated by FairyGUI
--Date : 2020-5-21
--Desc : added by xhd 符文页选择
local RuneChooseView,Super = class("RuneChooseView", Window)
local  RuneConfiger = require "Game.Modules.RuneSystem.RuneConfiger"
function RuneChooseView:ctor()
	self._packName = "RuneSystem"
	self._compName = "RuneChooseView"
    self._rootDepth = LayerDepth.PopWindow
	self.config = false
end

function RuneChooseView:_initEvent( )
	
end

function RuneChooseView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:RuneSystem.RuneChooseView
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.prosList = viewNode:getChildAutoType("$prosList")--list
		vmRoot.skillList = viewNode:getChildAutoType("$skillList")--list
		vmRoot.skillName = viewNode:getChildAutoType("$skillName")
		vmRoot.skillTxt = viewNode:getChildAutoType("$skillTxt")
	--{vmFieldsEnd}:RuneSystem.RuneChooseView
	--Do not modify above code-------------
end

function RuneChooseView:change_packageviewName( ... )
	self.config = RuneConfiger.getRunePageOpenConfig()
    self.list:setData(self.config) 
end

function RuneChooseView:updateRightTips( flag,runeId)
	if flag then
		self.view:getController("showRight"):setSelectedIndex(1)
		self:updateRightPanel(runeId)
	else
		self.view:getController("showRight"):setSelectedIndex(0)
	end
end

function RuneChooseView:updateRightPanel( runeId )
	local pageData = RuneSystemModel:getRunePagesById(runeId )
	local skillData = {}
	if pageData then
        skillData = pageData.skills
	end

	local allPros = RuneSystemModel:getRuleAllPros(runeId)
	self.prosList:setData(allPros)
	
	if not  (#skillData>0) then
		table.insert(skillData,0)
	end
	self.skillList:setData(skillData)
    if skillData[1]~=0 then
    	self.view:getController("statusCtrl"):setSelectedIndex(1)
    	local skillInfo = DynamicConfigData.t_passiveSkill[skillData[1]]
    	self.skillName:setText(skillInfo.name)
    	self.skillTxt:setText(skillInfo.desc)
    else
    	self.view:getController("statusCtrl"):setSelectedIndex(0)
    end
end

function RuneChooseView:_initUI( )
	self:_initVM()
    self.list:setItemRenderer(function (index,obj)
    	local l_index  = index+1
    	local configData = self.config[l_index]
    	local flag,serverData = ModelManager.RuneSystemModel:check_RunePageOpen(configData.id)
    	if flag then --已解锁
    		if l_index == ModelManager.RuneSystemModel:getCurBjRuneID() then
    			obj:getController("statusCtrl"):setSelectedIndex(1)
	    	else
	    		obj:getController("statusCtrl"):setSelectedIndex(2)
	    	end
	    	local level = ModelManager.RuneSystemModel:getRuleAllLevel(configData.id)
	    	obj:getChildAutoType("level"):setText(level)
            if serverData.name=="" then
                obj:getChildAutoType("name"):setText(Desc.Rune_txt4..configData.id)
            else
                obj:getChildAutoType("name"):setText(serverData.name)
			end

			--改名按钮
			obj:getChildAutoType("btn_changeName"):removeClickListener(11)
			obj:getChildAutoType("btn_changeName"):addClickListener(function( ... )
				local data = ModelManager.RuneSystemModel:getRunePagesById( configData.id )
				local curName = Desc.Rune_txt34
				if data then
					if  data.name and data.name ~="" then
						curName = data.name
					end
				end
				ViewManager.open("RuneEditBoxView",{id=configData.id,name=curName})
			end)
			
			--查看
			obj:getChildAutoType("btn_changeName"):removeEventListener(FUIEventType.TouchBegin)
			-- obj:getChildAutoType("look"):addEventListener(FUIEventType.TouchBegin,function()
			--     -- self:updateRightTips(true,configData.id)
			-- end)

			obj:getChildAutoType("btn_changeName"):removeEventListener(FUIEventType.TouchEnd)
			-- obj:getChildAutoType("look"):addEventListener(FUIEventType.TouchEnd,function()
			-- 	-- self:updateRightTips(false,configData.id)
			-- end)

    	else
    		obj:getController("statusCtrl"):setSelectedIndex(0)
    		obj:getChildAutoType("name"):setText(Desc.Rune_txt4..configData.id)
    	end
    	


    	obj:getChildAutoType("btn_bj"):removeClickListener(11)
    	obj:getChildAutoType("btn_bj"):addClickListener(function( ... )
            if not (configData.id>0) then
                print(1,"出问题了，符文页id不能填写0发送给服务器")
                return 
            end
            local params = {}
            params.id = configData.id
            params.onSuccess = function (res )
                if res.ret ==0 then
                    --printTable(1,"runeChooseView 修改当前编辑页服务器推送成功",res)
                    ModelManager.RuneSystemModel:setCurBjRuneID(res.id)
                    Dispatcher.dispatchEvent(EventType.rune_changeSmallPage,{status=1})
                    Dispatcher.dispatchEvent("update_RuneServerData")
                    Dispatcher.dispatchEvent("rune_quit_change")
                    ViewManager.close("RuneChooseView")
                    RuneSystemModel:checkRuneRedDot()
                end
            end
            RPCReq.Rune_PageRecordId(params, params.onSuccess)
    	end)

    	local data = configData.cost[1]
    	local costFlag = false
    	local itemData = {}
    	if data and data.amount>0 then
    		costFlag = true
    		itemData = ItemConfiger.getInfoByCodeAndType(data.type,data.code)
    	end
    	obj:getChildAutoType("btn_js"):removeClickListener(11)
    	obj:getChildAutoType("btn_js"):addClickListener(function( ... )
    		if not flag  then
    			if costFlag then --需要花费
    				local info = {}
					info.text = Desc.Rune_txt5..data.amount..Desc.Rune_txt6..itemData.name..Desc.Rune_txt7
					info.yesText = Desc.common_sure
					info.noText = Desc.common_cancel
					info.type = "yes_no"
					info.onYes = function()
                        if not ModelManager.PlayerModel:isCostEnough(configData.cost) then
                            return
                        end
	                    --请求解锁
	                    self:request_unlock(configData.id,function( ... )
	                    	self.data = ModelManager.RuneSystemModel:getAllRunePages()
	                	    self.config = RuneConfiger.getRunePageOpenConfig()
	                        self.list:setData(self.config) --默认10个
	                    end)
					end				
					Alert.show(info)
    			else
                    --请求解锁
                    self:request_unlock(configData.id,function( ... )
                    	self.data = ModelManager.RuneSystemModel:getAllRunePages()
                	    self.config = RuneConfiger.getRunePageOpenConfig()
						if tolua.isnull(self.view) then return end
                        self.list:setData(self.config) --默认10个
                    end)
    			end
    		end
           
    	end,11)
    end)

    self.data = ModelManager.RuneSystemModel:getAllRunePages()
    self.config = RuneConfiger.getRunePageOpenConfig()
    self.list:setData(self.config) 
end

function RuneChooseView:request_unlock( id,callback )
	local params = {}
	params.id = id
	params.onSuccess = function (res )
        --printTable(1,res)
	    if res.ret ==0 then
	    	if id == res.id then
	    		ModelManager.RuneSystemModel:insertDataToRunePages( res.retData,id)
                if res.retData.name=="" then
                    print(1,"解锁后名称为空 赋予服务器名称")
                    RPCReq.Rune_PageRename({id=id,name =Desc.Rune_txt4..id},function( res )
                         ModelManager.RuneSystemModel:setRuneArrDataName(res.id,"name",res.name)
                         if callback then callback() end
                    end)
                end
	    	end
	    end
	end
	RPCReq.Rune_PageUnlock(params, params.onSuccess)
end



return RuneChooseView