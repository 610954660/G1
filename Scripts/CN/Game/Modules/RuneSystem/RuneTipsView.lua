--Name : RuneTipsView.lua
--Author : generated by FairyGUI
--Date : 2020-5-21
--Desc : 符文道具点击tips页面

local RuneTipsView,Super = class("RuneTipsView", Window)
local ItemCell = require "Game.UI.Global.ItemCell"
local  RuneConfiger = require "Game.Modules.RuneSystem.RuneConfiger"
function RuneTipsView:ctor()
	--LuaLog("RuneTipsView ctor")
	self._packName = "RuneSystem"
	self._compName = "RuneTipsView"
	self.listData = false
	self.itemcellArr = {}
	self._rootDepth = LayerDepth.Tips
	self.curRuneData = false
end



function RuneTipsView:_initEvent( )
	--卸载
	self.btn_takeoff:addClickListener(function( ... )
		if self.curRuneData and self.curRuneData.runeColor then
			--请求服务器脱下
			local params = {}
			params.id = self.curRuneData.id
			params.type = self.curRuneData.type
			params.index = self.curRuneData.index
			params.onSuccess = function (res )
			    --printTable(1,"请求更换成功服务器数据=",res)
		    	if self.curRuneData and self.curRuneData.id == res.id then
		    		local data = {}
				    data.id = res.id 
				    data.runeColor = res.runeColor
				    data.type = res.type
				    data.index = res.index
				    RuneSystemModel:setCurSelectRuneData( data )
					RuneSystemModel:updateRunePageRuneColor( res.id,res.type,res.index,res.runeColor )
					ViewManager.close("RuneTipsView")
		    	end
			end
			RPCReq.Rune_TakeOffRune(params, params.onSuccess)
		else
			print(1,"出错拉！！！！")
		end
	end)

	--合成
	self.btn_compose:addClickListener(function( ... )
		Dispatcher.dispatchEvent("rune_changePage","RuneCompoundView")
	    ViewManager.close("RuneTipsView")
	end)

	--更换
	self.btn_change:addClickListener(function( ... )
		Dispatcher.dispatchEvent("rune_changeRune", {runeData = self.curRuneData})
		Dispatcher.dispatchEvent(EventType.rune_changeSmallPage,{status=1,page=self.curRuneData.type,show=false, isChange=true})
	    ViewManager.close("RuneTipsView")
	end)
	
	
	self.closeBtn:addClickListener(function( ... )
		self:closeView()
	end)

end

function RuneTipsView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:RuneSystem.RuneTipsView
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.runeName = viewNode:getChildAutoType("$runeName")
		vmRoot.proList = viewNode:getChildAutoType("$proList")
		vmRoot.btn_compose = viewNode:getChildAutoType("$btn_compose")
		vmRoot.btn_change = viewNode:getChildAutoType("$btn_change")
		vmRoot.btn_takeoff = viewNode:getChildAutoType("$btn_takeoff")
		vmRoot.itemCell = viewNode:getChildAutoType("$itemCell")
		
	--{vmFieldsEnd}:RuneSystem.RuneTipsView
	--Do not modify above code-------------
	self.closeBtn = viewNode:getChildAutoType("closeBtn1")
	self.bgLoader = self.view:getChildAutoType("bgLoader") 
	self.txt_desc = self.view:getChildAutoType("txt_desc") 
	
end

function RuneTipsView:_initUI( )
	-- do return end
	self:_initVM()
	self.proList:setItemRenderer(function ( index2,obj2 )
		local data = self.proList._dataTemplate
		obj2:getChildAutoType("title"):setText(Desc["common_fightAttr"..data[index2+1].id])
		obj2:getChildAutoType("titleVal"):setText("+"..GMethodUtil:getFightAttrName(data[index2+1].id,data[index2+1].value))
		if data[index2+1].id < 100 or RuneConfiger.isHightAttr(data[index2+1].id) then
			obj2:getChildAutoType("title"):setColor(cc.c3b(0xFF ,0xA4, 0x43))
			obj2:getChildAutoType("titleVal"):setColor(cc.c3b(0xFF ,0xA4, 0x43))
		else
			obj2:getChildAutoType("title"):setColor(ColorUtil.textColor.gray)
			obj2:getChildAutoType("titleVal"):setColor(ColorUtil.textColor.gray)
		end
	end)
	
	

	self.curRuneData = RuneSystemModel:getCurSelectRuneData(  )
	if self.curRuneData and self.curRuneData.runeColor and self.curRuneData.runeColor.itemCode then
		local itemCode = self.curRuneData.runeColor.itemCode 
		local itemcell = BindManager.bindItemCell(self.itemCell)
		itemcell:setAmountVisible(false)
		itemcell:setData(itemCode)
		local itemInfo = ItemConfiger.getInfoByCode(itemCode)
		self.runeName:setText(itemInfo.name)
		self.runeName:setColor(ColorUtil.getItemTipsColor(itemInfo.color))
		self.proList:setData(self.curRuneData.runeColor.attr)
		if self.bgLoader then
			self.bgLoader:setURL(PathConfiger.getItemTipsHeadBg(itemInfo.color))
		end
		
		
		if self.curRuneData.type == 4 then
			self.view:getController("c1"):setSelectedIndex(1)
			local runeConfig = DynamicConfigData.t_MultipleAttr[self.curRuneData.runeColor.itemCode]
			self.txt_desc:setText(runeConfig and runeConfig.description or "")	
		else
			self.view:getController("c1"):setSelectedIndex(0)	
		end
	
	end
end

return RuneTipsView