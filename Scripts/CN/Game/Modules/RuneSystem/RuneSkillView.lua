--Name : RuneSkillView.lua
--Author : generated by FairyGUI
--Date : 2020-5-21
--Desc : 符文技能页

local RuneSkillView,Super = class("RuneSkillView", Window)
local ItemSkillCell = require "Game.UI.Global.ItemSkillCell"
local  RuneConfiger = require "Game.Modules.RuneSystem.RuneConfiger"
function RuneSkillView:ctor()
	self._packName = "RuneSystem"
	self._compName = "RuneSkillView"
    self._rootDepth = LayerDepth.PopWindow
	self.curSkillInfo = false
	self.skillConfig = false
	self.curRuneData = false
end

function RuneSkillView:_initEvent( )
	
end

function RuneSkillView:_initVM( )
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:RuneSystem.RuneSkillView
		vmRoot.curSkillItem = viewNode:getChildAutoType("$curSkillItem")--Button
		vmRoot.skillName = viewNode:getChildAutoType("$skillName")--text
		vmRoot.studyTj = viewNode:getChildAutoType("$studyTj")--richtext
		vmRoot.list = viewNode:getChildAutoType("$list")--list
		vmRoot.btn_study = viewNode:getChildAutoType("$btn_study")--Button
		vmRoot.btn_takeOff = viewNode:getChildAutoType("$btn_takeOff")--Button
		vmRoot.skillDes = viewNode:getChildAutoType("$skillDes")--richtext
	--{vmFieldsEnd}:RuneSystem.RuneSkillView
	--Do not modify above code-------------
end

function RuneSkillView:_initUI( )
	self:_initVM()
    self.list:setItemRenderer(
        function(index, obj)
            
             --池子里面原来的事件注销掉
            local skillId = self.skillConfig[index + 1].skillid --真实技能ID
            if skillId == self.curSkillInfo.skillid then
            	obj:setSelected(true)
            end
            local maxLevel = RuneSystemModel:getRuleAllLevel( RuneSystemModel:getCurBjRuneID() )
            local iconLoader = obj:getChildAutoType("iconLoader")
            local selectFrameImg = obj:getChildAutoType("selectFrameImg")
            local __levelLabel = obj:getChildAutoType("lv")
            local lockCtrl = obj:getController("lockCtrl")
            local hadStudyCtrl = obj:getController("hadStudyCtrl")
            local skills = RuneSystemModel:getcurPageSkills(RuneSystemModel:getCurBjRuneID()) -- 真实技能ID
            if TableUtil.Exist(skills,skillId) then
            	hadStudyCtrl:setSelectedIndex(1)
            else
            	hadStudyCtrl:setSelectedIndex(0)
            end
            if self.skillConfig[index + 1].levellimit > maxLevel then
               lockCtrl:setSelectedIndex(1)
            else
            	lockCtrl:setSelectedIndex(0)
            end
            selectFrameImg:setVisible(true)
            __levelLabel:setText(self.skillConfig[index + 1].levellimit..Desc.Rune_txt17)
            --暂时使用被动技能
            -- local skillInfo = DynamicConfigData.t_skill[skillId]
            local skillInfo = DynamicConfigData.t_passiveSkill[skillId]
            if skillInfo then
                local skillurl = ModelManager.CardLibModel:getItemIconByskillId(skillInfo.icon)
                iconLoader:setURL(skillurl)
                -- iconLoader:setGrayed(true)
            end
			obj:removeClickListener(100)
            obj:addClickListener(function( ... )
                self.curSkillInfo = self.skillConfig[index + 1]
                self:updateShow(maxLevel)
            end,100)
        end
    )
    self.skillConfig = RuneConfiger.getRuneSkillConfig(  )
	
	local allLevel = RuneSystemModel:getRuleAllLevel( RuneSystemModel:getCurBjRuneID() )
	for _,v in ipairs(self.skillConfig ) do
		if not self.curSkillInfo or (self.curSkillInfo.levellimit < v.levellimit and v.levellimit <= allLevel ) then
			self.curSkillInfo = v
		end
	end
    
    --默认选中第一个
    
    self.list:setData(self.skillConfig)

    local maxLevel = RuneSystemModel:getRuleAllLevel( RuneSystemModel:getCurBjRuneID() )
    self:updateShow(maxLevel)
	self.btn_takeOff:addClickListener(function ( ... )
		--请求服务器脱下
		local params = {}
    	local skillArr = {}
    	table.insert(skillArr,0)
		params.id = RuneSystemModel:getCurBjRuneID()
		params.skillIds = skillArr
		params.onSuccess = function (res )
		    --printTable(1,res)
	    	if RuneSystemModel:getCurBjRuneID() == res.id then
	    		RuneSystemModel:setRuneArrDataName( res.id,"skills",res.skills)
	    		RuneSystemModel:checkRuneRedDot( )
	    		Dispatcher.dispatchEvent(EventType.update_smallPage)
				ViewManager.close("RuneSkillView")
	    	end
		end
		RPCReq.Rune_SkillChoose(params, params.onSuccess)
	end)
    self.btn_study:addClickListener(function ( ... )
		--技能选择
		local params = {}
		local skillArr = {}
		table.insert(skillArr,self.curSkillInfo.id)
		params.id = RuneSystemModel:getCurBjRuneID()
		params.skillIds = skillArr
		--printTable(1,params)
		params.onSuccess = function (res )
			if RuneSystemModel:getCurBjRuneID() == res.id then
				RuneSystemModel:setRuneArrDataName( res.id,"skills",res.skills) --服务器表示 符文页的数据只能是技能id
				RuneSystemModel:checkRuneRedDot()
				Dispatcher.dispatchEvent(EventType.update_smallPage)
				ViewManager.close("RuneSkillView")
			end
		end
		RPCReq.Rune_SkillChoose(params, params.onSuccess)
    end)
end

function RuneSkillView:updateShow( maxLevel )
	if self.curSkillInfo then
		self.skillDes:setText(self.curSkillInfo.description)
		self.studyTj:setText(Desc.Rune_txt18..self.curSkillInfo.levellimit..Desc.Rune_txt19)
         -- local skillInfo = DynamicConfigData.t_skill[self.curSkillInfo.skillid]
		 local skillInfo = DynamicConfigData.t_passiveSkill[self.curSkillInfo.skillid]
		 if skillInfo then
            local skillurl = ModelManager.CardLibModel:getItemIconByskillId(skillInfo.icon)
            local iconLoader = self.curSkillItem:getChildAutoType("iconLoader")
            local selectFrameImg = self.curSkillItem:getChildAutoType("selectFrameImg")
            local __levelLabel = self.curSkillItem:getChildAutoType("lv")
            __levelLabel:setText(self.curSkillInfo.levellimit..Desc.Rune_txt17)
            selectFrameImg:setVisible(false)
            iconLoader:setURL(skillurl)
            -- iconLoader:setGrayed(true)
            self.skillName:setText(self.curSkillInfo.skillname)
        end
        -- self.curSkillItem:addClickListener(function( ... )
        --     ViewManager.open("ItemTips", {codeType = CodeType.SKILL, id = self.curSkillInfo.skillid,btnShow=false})
        -- end,100)
	end
    if self.curSkillInfo.levellimit > maxLevel then
		self.btn_study:setTitle(Desc.Rune_txt21)
    	self.btn_study:setTouchable(false)
    	self.btn_study:setGrayed(true)
    	self.view:getController("statusCtrl"):setSelectedIndex(1)
    else
    	self.btn_study:setTouchable(true)
    	self.btn_study:setGrayed(false)
    	self.view:getController("statusCtrl"):setSelectedIndex(0)
    end
    local skillId = self.curSkillInfo.skillid
    local skills = RuneSystemModel:getcurPageSkills(RuneSystemModel:getCurBjRuneID()) -- 真实技能ID
    if TableUtil.Exist(skills,skillId) then 
		self.btn_takeOff:setVisible(true)
		self.btn_study:setVisible(false)
    	self.btn_study:setTitle(Desc.Rune_txt46)
    else
		self.btn_takeOff:setVisible(false)
		self.btn_study:setVisible(true)
		if #skills > 0 and skills[1] ~= 0  then
			self.btn_study:setTitle(Desc.Rune_txt20) --如果有学习了其他，显示成替换
    	else
			self.btn_study:setTitle(Desc.Rune_txt21) --如果没学习其他，显示成学习（按钮的作用是一样的 ）
		end
    end
end




return RuneSkillView