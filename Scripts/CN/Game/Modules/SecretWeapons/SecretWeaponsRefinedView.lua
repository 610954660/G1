--Date :2020-12-11
--Author : generated by FairyGUI
--Desc : 

local SecretWeaponsRefinedView,Super = class("SecretWeaponsRefinedView", Window)

function SecretWeaponsRefinedView:ctor()
	--LuaLog("SecretWeaponsRefinedView ctor")
	self._packName = "SecretWeapons"
	self._compName = "SecretWeaponsRefinedView"
	self._rootDepth = LayerDepth.PopWindow
	self.curId = 1
	self.costBarObj = false
	self.updateCost = false
	self.listData = {}
end

function SecretWeaponsRefinedView:_initEvent( )
	
end

function SecretWeaponsRefinedView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:SecretWeapons.SecretWeaponsRefinedView
	self.btn_seeAttr = viewNode:getChildAutoType('$btn_seeAttr')--GButton
	self.img_equip = viewNode:getChildAutoType('$img_equip')--GLoader
	self.skillCel = viewNode:getChildAutoType('$skillCel')--GButton
	self.txt_name = viewNode:getChildAutoType('$txt_name')--GRichTextField
	self.txt_skillDesc = viewNode:getChildAutoType('$txt_skillDesc')--GRichTextField
	self.txt_skillLv = viewNode:getChildAutoType('$txt_skillLv')--GRichTextField
	self.NaddText = viewNode:getChildAutoType('NaddText')--GTextField
	self.NallText = viewNode:getChildAutoType('NallText')--GTextField
	self.NlevelText = viewNode:getChildAutoType('NlevelText')--GTextField
	self.addText = viewNode:getChildAutoType('addText')--GTextField
	self.adddesc = viewNode:getChildAutoType('adddesc')--GTextField
	self.allText = viewNode:getChildAutoType('allText')--GTextField
	self.alldesc = viewNode:getChildAutoType('alldesc')--GTextField
	self.arr1 = viewNode:getChildAutoType('arr1')--GImage
	self.arr2 = viewNode:getChildAutoType('arr2')--GImage
	self.arr3 = viewNode:getChildAutoType('arr3')--GImage
	self.blackBg = viewNode:getChildAutoType('blackBg')--GButton
	self.btn_refined = viewNode:getChildAutoType('btn_refined')--GButton
	self.costBar = viewNode:getChildAutoType('costBar')--GComponent
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.img_zhuangpei = viewNode:getChildAutoType('img_zhuangpei')--GImage
	self.levelCtr = viewNode:getController('levelCtr')--Controller
	self.levelText = viewNode:getChildAutoType('levelText')--GTextField
	self.list = viewNode:getChildAutoType('list')--GList
	--{autoFieldsEnd}:SecretWeapons.SecretWeaponsRefinedView
	--Do not modify above code-------------
end

function SecretWeaponsRefinedView:_initListener( )
	
	self.btn_seeAttr:addClickListener(function()
		ViewManager.open("SecretWeaponAddattrView", {type = 1, id = self.curId})
	end)

	self.skillCel:addClickListener(function()

	end)

	self.blackBg:addClickListener(function()

	end)

	self.btn_refined:addClickListener(function()
		if self.updateCost and  ModelManager.PlayerModel:isCostEnough(self.updateCost, true) then
			RPCReq.GodArms_Refine({},function(data)
				printTable(33,"GodArms_Refine call",data)
				if data.data then
					SecretWeaponsModel.secretWeaponsInfo = data.data
					if tolua.isnull(self.view) then return end
					RollTips.show(Desc.SecretWeapones_str2)
					self:updateView()
				end
			end)
		end
	end)

	self.list:setItemRenderer(function(index, obj)
		self:itemShow( index, obj )
	end)

end

function SecretWeaponsRefinedView:initData()
	local listData = {}
	for _,v in pairs(DynamicConfigData.t_godArmsTrigger) do
		table.insert(listData,v)
	end
	table.sort(listData, function (a,b)
		return a.triggerType < b.triggerType
	end )
	return listData
end

function SecretWeaponsRefinedView:_initUI( )
	self:_initVM()
	self:_initListener()

	self.listData = self:initData()
	self.list:setData(self.listData)

	self.costBarObj = BindManager.bindCostBar(self.costBar)
	RedManager.register("V_SECRETWEAPON_REFINE", self.btn_refined:getChildAutoType("img_red"), ModuleId.SecretWeapon.id)

	self:updateView()
end

function SecretWeaponsRefinedView:updateView(  )
	local lv = SecretWeaponsModel:getEquipSkillLv(self.curId)
    local ConfigSkill = DynamicConfigData.t_godArms
    local configOd = ConfigSkill[self.curId]
    if  configOd[lv] then
		local skillId = configOd[lv].skillId
		local max = #configOd
		local conf = DynamicConfigData.t_skill[skillId]
		local cell = BindManager.bindSkillCell(self.skillCel)
		cell:setData(skillId)
		self.skillCel:removeClickListener(100)
		self.skillCel:addClickListener(function()
				if conf then
					ViewManager.open("ItemTips", {codeType = CodeType.SKILL, id = skillId, data = conf})
				end
			end,100)
		self.txt_skillDesc:setText(conf.showName)
		self.txt_skillLv:setText("Lv." .. lv)
    end
   
	local equipurl = SecretWeaponsModel:getEquipById(self.curId)
    self.img_equip:setURL(equipurl)
    local con = DynamicConfigData.t_godArmsTrigger[self.curId]
	self.txt_name:setText(con.name)
	
	--if SecretWeaponsModel.secretWeaponsInfo.curId and SecretWeaponsModel.secretWeaponsInfo.curId == self.curId then
	--	self.img_zhuangpei:setVisible(true)
	--else
		self.img_zhuangpei:setVisible(false)
	--end
	
	local secretWeaponsInfo = SecretWeaponsModel.secretWeaponsInfo
	
	
	
	
	if not secretWeaponsInfo.refineLv then secretWeaponsInfo.refineLv = 0 end
	local configInfo = DynamicConfigData.t_GodArmsForge[self.curId]
	if secretWeaponsInfo.refineLv and configInfo[secretWeaponsInfo.refineLv] and configOd[lv] then
		local curConfig = configInfo[secretWeaponsInfo.refineLv]
		self.levelText:setText(secretWeaponsInfo.refineLv)
		self.adddesc:setText(con.attrDesc1)
		self.alldesc:setText(con.attrDesc2)
		self.addText:setText(curConfig.effect)
		self.allText:setText(curConfig.effect+configOd[lv].showValue)
		if configInfo[secretWeaponsInfo.refineLv+1] then
			self.arr1:setVisible(true)
			self.arr2:setVisible(true)
			self.arr3:setVisible(true)
			self.NlevelText:setText(secretWeaponsInfo.refineLv+1)
			self.NaddText:setText(configInfo[secretWeaponsInfo.refineLv+1].effect)
			self.NallText:setText(configInfo[secretWeaponsInfo.refineLv+1].effect+configOd[lv].showValue)
			self.levelCtr:setSelectedIndex(0)
			local costInfo = DynamicConfigData.t_GodArmsForgeCost[secretWeaponsInfo.refineLv + 1]
			self.updateCost = costInfo.cost
			self.costBarObj:setData(self.updateCost)
		else
			self.arr1:setVisible(false)
			self.arr2:setVisible(false)
			self.arr3:setVisible(false)
			self.NlevelText:setText("")
			self.NaddText:setText("")
			self.NallText:setText("")
			self.levelCtr:setSelectedIndex(1)
		end


	else

	end
end

function SecretWeaponsRefinedView:itemShow( index, obj )
	local configItem = self.listData[index+1]
	local item = obj
	local equImg = item:getChildAutoType("img_goods")
	local txt_name = item:getChildAutoType("txt_name")
	local txt_lv = item:getChildAutoType("txt_lv")
	local txt_lvbg = item:getChildAutoType("n6")
	local gCtr1 = item:getController("c1")
	local equipurl = SecretWeaponsModel:getEquipById(configItem.id)
	equImg:setURL(equipurl)

	local img_zhuangpei = item:getChildAutoType("img_zhuangpei")
	img_zhuangpei:setVisible(false)
	local serverInfo = SecretWeaponsModel.secretWeaponsInfo
    if not serverInfo then
        return
    end
    local equipMap = serverInfo.godArmsMap
    if not equipMap then
        return
	end
	local equipInfo = equipMap[configItem.id]

	if equipInfo then
		gCtr1:setSelectedIndex(0)
		txt_name:setText(configItem.name)
		txt_lv:setVisible(false)
		txt_lvbg:setVisible(false)
		--local iszhuangpei = self:isshowZhuangpeiIcon(configItem.id)
		--img_zhuangpei:setVisible(iszhuangpei)

		item:addClickListener(function(context)
				--ViewManager.open("SecretWeaponStrainView", {id = configItem.id})
				self.curId = configItem.id
				self:updateView(  )
			end,100)
	else
		gCtr1:setSelectedIndex(1)
		txt_name:setText("")
		txt_lv:setText("0")
		item:removeClickListener(100)
		item:addClickListener(function(context)
				RollTips.show(DescAuto[254]) -- [254]="请前往激活"
			end,100)
	end
end

function SecretWeaponsRefinedView:isshowZhuangpeiIcon(curId)
    local isShow = false
    if SecretWeaponsModel.secretWeaponsInfo.curId and SecretWeaponsModel.secretWeaponsInfo.curId == curId then
        isShow = true
    end
    return isShow
end

return SecretWeaponsRefinedView
