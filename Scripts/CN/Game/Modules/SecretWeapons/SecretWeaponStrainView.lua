--Name : SecretWeaponStrainView.lua
--Author : generated by FairyGUI
--Date : 2020-7-28
--Desc : 秘武培养

local SecretWeaponStrainView, Super = class("SecretWeaponStrainView", Window)

function SecretWeaponStrainView:ctor()
    --LuaLog("SecretWeaponStrainView ctor")
    self._packName = "SecretWeapons"
    self._compName = "SecretWeaponStrainView"
    self._rootDepth = LayerDepth.PopWindow
    self.curId = 1
    self.costItem = false
    self.timerKey = false
end

function SecretWeaponStrainView:_initEvent()
end

function SecretWeaponStrainView:_initVM()
    local vmRoot = self
    local viewNode = self.view
    ---Do not modify following code--------
    --{vmFields}:SecretWeapons.SecretWeaponStrainView
    vmRoot.img_equip = viewNode:getChildAutoType("$img_equip")
    --loader
    vmRoot.txt_cost = viewNode:getChildAutoType("$txt_cost")
    --richtext
    vmRoot.skillCel = viewNode:getChildAutoType("$skillCel")
    --Button
    vmRoot.txt_skillDesc = viewNode:getChildAutoType("$txt_skillDesc")
    --richtext
    vmRoot.txt_skillLv = viewNode:getChildAutoType("$txt_skillLv")
    --richtext
    vmRoot.txt_name = viewNode:getChildAutoType("$txt_name")
    --richtext
    vmRoot.txt_ceihuadesc = viewNode:getChildAutoType("$txt_ceihuadesc")
    --list
    vmRoot.btn_up = viewNode:getChildAutoType("$btn_up")
    --Button
    vmRoot.txt_skillName = viewNode:getChildAutoType("$txt_skillName")
    vmRoot.txt_left_time = viewNode:getChildAutoType("txt_left_time")
    --richtext
    --{vmFieldsEnd}:SecretWeapons.SecretWeaponStrainView
    --Do not modify above code-------------
end

function SecretWeaponStrainView:_initUI()
    self:_initVM()
    self.btn_seeAttr = self.view:getChildAutoType("$btn_seeAttr")
    self.btn_assemble = self.view:getChildAutoType("$btn_assemble")
    self.img_zhuangpei = self.view:getChildAutoType("img_zhuangpei")
    self.curId = self._args.id
    self.c1 = self.view:getController("c1")
    local equipurl = SecretWeaponsModel:getEquipById(self.curId)
    self.img_equip:setURL(equipurl)
    local con = DynamicConfigData.t_godArmsTrigger[self.curId]
    self.txt_name:setText(con.name)
    self:showSkill()
    self:isshowZhuangpeiIcon()
    self:setLeftTime()
end

function SecretWeaponStrainView:setLeftTime()
    local serverInfo = SecretWeaponsModel.secretWeaponsInfo
    local equipMap = serverInfo.godArmsMap
    local expireMS = equipMap[self.curId] and equipMap[self.curId].expireTimeMs
    if expireMS then 
        local timems = math.floor((expireMS - ServerTimeModel:getServerTimeMS()) / 1000)
        local function onCountDown(time)
            if not tolua.isnull(self.txt_left_time) then
                local str = TimeLib.getTimeFormatOneDay2(time,true,false)
                self.txt_left_time:setText(string.format(Desc.SecretWeapones_LeftTime,str))
            end
        end
        local function onEnd(...)
            if not tolua.isnull(self.txt_left_time) then
                self.txt_left_time:setText(DescAuto[265]) -- [265]="(已过期)"
            end
        end
        self.timerKey = TimeLib.newCountDown(timems, onCountDown, onEnd, false, false, false)
    else
        self.txt_left_time:setText("")
    end
end

function SecretWeaponStrainView:showSkill()
    local lv = SecretWeaponsModel:getEquipSkillLv(self.curId)
    local ConfigSkill = DynamicConfigData.t_godArms
    local configOd = ConfigSkill[self.curId]
    if not configOd[lv] then
        return
    end
    local skillId = configOd[lv].skillId
    local max = #configOd
    local conf = DynamicConfigData.t_skill[skillId]
    local cell = BindManager.bindSkillCell(self.skillCel)
    cell:setData(skillId)
    self.skillCel:removeClickListener(100)
    self.skillCel:addClickListener(
        function()
            if conf then
                ViewManager.open("ItemTips", {codeType = CodeType.SKILL, id = skillId, data = conf})
            end
        end,
        100
    )
    self.txt_skillName:setText(conf.skillName)
    self.txt_skillLv:setText("Lv." .. lv)
	--self.txt_skillDesc:setText(conf.showName)
    local itemMode = configOd[lv]
	if itemMode then
		local itemSkill = itemMode.skillId
		local skillData = DynamicConfigData.t_skill[itemSkill]
		local colol = "#119717"
		local str = "Lv." .. (lv) .. skillData.showName
		local colorstr = ColorUtil.formatColorString1(str, colol)
		self.txt_skillDesc:setText(colorstr)
	end

	local itemMode = configOd[lv+1]
	if itemMode then
		local itemSkill = itemMode.skillId
		local skillData = DynamicConfigData.t_skill[itemSkill]
		local colol = "#454545"
        local str = "Lv." .. (lv+1) .. skillData.showName
        local configInfo= DynamicConfigData.t_GodArmsSkillLevel
        local nextLv=lv+1
        if nextLv>=#configInfo then
            nextLv=#configInfo
        end
        local nextStr=string.format( DescAuto[266],configInfo[nextLv].godArmsLevel )  -- [266]="(秘武系统%s级激活)"
		local colorstr = ColorUtil.formatColorString1(str, colol)..ColorUtil.formatColorString1(nextStr,"#ca5600")
		self.txt_ceihuadesc:setText(colorstr)
	end
	
    -- self.list_desc:setItemRenderer(
    -- 	function(idx2, obj2)
    -- 		local itemMode= configOd[idx2+1]
    -- 		local itemSkill= itemMode.skillId
    -- 		local skillData = DynamicConfigData.t_skill[itemSkill];
    -- 		local c1= obj2:getController("c1")
    -- 		local colol="#FFFFFF"
    -- 		c1:setSelectedIndex(1)
    -- 		if idx2+1<=lv then
    -- 			colol="#6AFF60"
    -- 			c1:setSelectedIndex(0)
    -- 		end
    -- 		local str="Lv."..(idx2+1)..skillData.showName
    -- 		local colorstr=ColorUtil.formatColorString1(str,colol)
    -- 		local txt_desc=obj2:getChildAutoType("txt_desc")
    -- 		txt_desc:setText(colorstr)
    -- 	end
    -- 	)
    -- self.list_desc:setNumItems(#configOd)
    -- self.list_desc:scrollToView(lv-1,true,true);
    if lv < max then
        self.c1:setSelectedIndex(0)
    else
        self.c1:setSelectedIndex(1)
    end
    -- local remineCost = SecretWeaponsModel:getRemineSkillPoint(self.curId)
    -- if not configOd[lv] then
    --     return
    -- end
    -- local curCost = configOd[lv].point
    --self.txt_cost:setText(remineCost .. "/" .. curCost)
end

function SecretWeaponStrainView:secretWeapons_shengjijinengdian(...)
    -- local remineCost,curCost =self:getRemineNum()
    -- self.txt_cost:setText(remineCost.."/"..curCost)
    self:showSkill()
end

function SecretWeaponStrainView:getRemineNum()
    local lv = SecretWeaponsModel:getEquipSkillLv(self.curId)
    local ConfigSkill = DynamicConfigData.t_godArms
    local configOd = ConfigSkill[self.curId]
    if not configOd or not configOd[lv] then
        return
    end
    local remineCost = SecretWeaponsModel:getRemineSkillPoint(self.curId)
    local curCost = configOd[lv].point
    return remineCost, curCost
end

function SecretWeaponStrainView:_initEvent(...)
    -- self.btn_up:addClickListener(
    --     function(...)
    --         local remineCost, curCost = self:getRemineNum()
    --         if remineCost >= curCost then
    --             SecretWeaponsModel:godArmsUpSkill(self.curId)
    --         else
    --             RollTips.show("技能点不足")
    --         end
    --     end
    -- )

    self.btn_seeAttr:addClickListener(
        function(...)
            ViewManager.open("SecretWeaponAddattrView", {type = 1, id = self.curId})
        end
    )

    self.btn_assemble:addClickListener(
        function(...)
            SecretWeaponsModel:godArmsChoice(self.curId)
            self:closeView()
        end
    )
end

function SecretWeaponStrainView:secretWeapons_IndexIdChoose(...)
    self:isshowZhuangpeiIcon()
end

function SecretWeaponStrainView:isshowZhuangpeiIcon()
    if SecretWeaponsModel.secretWeaponsInfo.curId and SecretWeaponsModel.secretWeaponsInfo.curId == self.curId then
        if not tolua.isnull(self.img_zhuangpei) then
            self.img_zhuangpei:setVisible(true)
        end
    else
        if not tolua.isnull(self.img_zhuangpei) then
            self.img_zhuangpei:setVisible(false)
        end
    end
end

function SecretWeaponStrainView:_exit()
    TimeLib.clearCountDown(self.timerKey)
end

return SecretWeaponStrainView
