--Date :2020-12-24
--Author : generated by FairyGUI
--Desc : 

local CollectWordsActivityModel = class("CollectWordsActivity", BaseModel)

function CollectWordsActivityModel:ctor()
    self.giftInfo 	= {} 	-- 商品信息
    self.redFlag    = false
    self.wordInfo   = {}
end

function CollectWordsActivityModel:init()

end

-- .PActivity_CollectWords {
-- 	exchangeId        1:integer
-- 	curTimes          2:integer
-- }

function CollectWordsActivityModel:initData(data)  
    self.wordInfo = data or {}
    self:updateMainRed()
    Dispatcher.dispatchEvent(EventType.CollectWordsActivityView_refreshPanel)
end


function CollectWordsActivityModel:initShopData(data)
    self.giftInfo = data.gift or {}
    self:updateShopRed()
    self:updateMainRed()
    Dispatcher.dispatchEvent(EventType.CollectWordsActivityShopView_refreshPanel)
end


-- 获取商品数据
function CollectWordsActivityModel:getShopData()
    local moduleId = self:getModuleIdByType(GameDef.ActivityType.CollectWordsShop)
    local giftData = DynamicConfigData.t_CollectWordsShop[moduleId]
    for k,v in pairs(giftData) do
        local data = self.giftInfo[v.id]
        v.buyTime = v.limit
        if data then
            data.buyTimes = data.times or 0
            v.buyTime = v.buyTime - data.times
            v.buyTime = v.buyTime < 0 and 0 or v.buyTime
        end
        v.state = 0 -- 没卖完
        if v.buyTime == 0 then
            v.state = 1 -- 卖完了
        end
    end
    local keys = {
        {key = "state",asc=false},
        {key = "id",asc=false},
    }
    TableUtil.sortByMap(giftData,keys)
    return giftData or {}
end

-- 获取模板id
function CollectWordsActivityModel:getModuleIdByType(type)
	local moduleId = 1
	local actData = ModelManager.ActivityModel:getActityByType(type)
	moduleId = actData and actData.showContent.moduleId or 1
	--printTable(8848,">>actData>>",actData)
	return moduleId
end

function CollectWordsActivityModel:getActivityData()
    local moduleId = self:getModuleIdByType(GameDef.ActivityType.CollectWords)
    local wordCfg = DynamicConfigData.t_CollectWords[moduleId]
    for k,v in pairs(wordCfg) do
        local data = self.wordInfo[v.id] or {}
        local curTimes = data.curTimes or 0 -- 已经兑换的次数
        v.curTimes = curTimes
        local items = v.items 
        local maxNum = 999999
        v.sort = 1
        v.state = 2      -- 不可兑换
        for o,p in pairs(items) do
            p.haveNum = PackModel:getItemsFromAllPackByCode(p.code) or 0
            if math.floor(p.haveNum/p.amount) < maxNum then
                maxNum = math.floor(p.haveNum/p.amount)
            end
        end
        v.maxNum = maxNum   -- 最大兑换次数
        local canTimes = v.time - curTimes
        if v.maxNum > canTimes then
            v.maxNum = canTimes
        end
        if v.maxNum > 0 then
            v.state = 1 -- 可兑换
        end
        -- 判断是否达到上限
        if canTimes == 0 then
            v.sort = 2
            v.state = 3      -- 兑换完了
        end
    end
    local keys = {
        {key = "sort",asc=false},
        {key = "id",asc=false},
    }
    TableUtil.sortByMap(wordCfg,keys)
    return wordCfg or {}
end

-- 监听背包物品变化
function CollectWordsActivityModel:pack_item_change()
    self:updateMainRed()
    Dispatcher.dispatchEvent(EventType.CollectWordsActivityView_refreshPanel)
end

-- 获取第一个可兑换奖励的位置
function CollectWordsActivityModel:getFirstRedPos()
    local pos = 99999
    local wordCfg   = self:getActivityData()
    local showRed   = false
    for k,v in pairs(wordCfg) do
        if (v.state == 1) and (v.sign == 1) then
            if k < pos then
                pos = k
            end
        end
    end
    if pos == 99999 then
        pos = 1
    end
    return pos
end

-- 活动主页红点刷新
function CollectWordsActivityModel:updateMainRed()
    local wordCfg   = self:getActivityData()
    local showRed   = false
    for k,v in pairs(wordCfg) do
        if (v.state == 1) and (v.sign == 1) then
            showRed = true
            break
        end
    end
    RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.CollectWords,showRed)
end

-- 商城红点更新
function CollectWordsActivityModel:updateShopRed()
    local giftData = self:getShopData()
    if not self.redFlag then
        self.redFlag = true
        local keyArr = {}
        for k,v in pairs(giftData) do
            if v.price == 0 and v.buyType == 1 then
                table.insert(keyArr, "V_ACTIVITY_"..GameDef.ActivityType.CollectWordsShop..v.id)
                break
            end
        end
        RedManager.addMap("V_ACTIVITY_"..GameDef.ActivityType.CollectWordsShop, keyArr)
    end

    for k,v in pairs(giftData) do
        if v.price == 0 and v.buyType == 1 then
            RedManager.updateValue("V_ACTIVITY_"..GameDef.ActivityType.CollectWordsShop..v.id , v.buyTime > 0)
            break
        end
    end
end

return CollectWordsActivityModel
