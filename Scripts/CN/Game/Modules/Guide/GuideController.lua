--Name : GuideController.lua
--Author : generated by FairyGUI
--Date : 2020-3-10
--Desc : 

local GuideController = class("GuideController",Controller)

function GuideController:init()

end


function GuideController:guide_first()
	print(33,"guide ",GuideModel.step,GuideModel.state)
	
	if not GuideModel.guide_AllConfig then
		GuideModel.guide_AllConfig = DynamicConfigData.GuideConfig_module
		local firstConfig = DynamicConfigData.GuideConfig
		GuideModel.guide_AllConfig["firstGuide"] = firstConfig
	end

	--临时处理
	if GuideModel.guideName == "yuanhang"  then
		if PlayerModel.level > 20 then
			return
		end
	end
		
	if GuideModel.guideName ~= "migong"  then
		local config = GuideModel.guide_AllConfig[GuideModel.guideName]
		if config and config[GuideModel.step] then
			ViewManager.open("GuideView")
			return
		end
	end
	
	
	
	

	--if GuideModel.step < GuideModel.allStep then
		--local config = DynamicConfigData.GuideConfig[GuideModel.step]
		--if config and GuideModel.step == 1 then
			--ViewManager.open("GuideView",{guideMode = 1})
		--elseif config and GuideModel.state < GuideModel.checkCount then
			--ViewManager.open("GuideView",{guideMode = 1})
		
		--else
			--GuideModel.step = GuideModel.step + 1
			--config = DynamicConfigData.GuideConfig[GuideModel.step]
			--GuideModel.state = 0
			--if config then
				--RPCReq.Attr_UpdateGuide({id = GuideModel.step,value = 1})
				--ViewManager.open("GuideView",{guideMode = 1})
			--end
		--end
		
	--end

end


function GuideController:guide_open(_,info)
	local view = ViewManager.getView("GuideView")
	if view then
		view:closeView()
	end
	--允许重复
	if info.gRepeat then
		ViewManager.open("GuideView",info)
		return
	end
	
	RPCReq.Attr_UpdateGuideMap({id = info.guideName},function(args)
			printTable(33,"Attr_UpdateGuideMap",args)
			if args.state == 0  then
				ViewManager.open("GuideView",info)
			end
		end)
end

function GuideController:player_updateRoleInfo(_,info)


end
	

function GuideController:pushMap_specificguidancepoint(_,info)
	ViewManager.open("GuideView",{guideName = "pushmapmd"})
end

function GuideController:Attr_SyncGuideProgress(_,info)
	print(33,"Attr_SyncGuideProgress id=",info.id)
	if not GuideModel.curData or not GuideModel.curData.waitServer then return end
	local serverData = DynamicConfigData.t_NoviceProcess[info.id]
	if not serverData then return end
	if serverData.node ==GuideModel.guideName and serverData.module == GuideModel.step and serverData.steps == GuideModel.index then
		print(33,"Attr_SyncGuideProgress run next")
		Dispatcher.dispatchEvent(EventType.guideType2_checkNext)
	end
	
end


return GuideController