--Date :2021-01-06
--Author : generated by FairyGUI
--Desc : 

local DormAnswerView,Super = class("DormAnswerView", Window)

function DormAnswerView:ctor()
	--LuaLog("DormAnswerView ctor")
	self._packName = "Dorm"
	self._compName = "DormAnswerView"
	self._rootDepth = LayerDepth.PopWindow
	self.heroData = {}
	self.heroId = false
	self.type = false
	self.index = 0
	self.curData = false
	self.allObj = {}
	self.rightNum = 0
end

function DormAnswerView:_initEvent( )
	
end

function DormAnswerView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:Dorm.DormAnswerView
	self.Decs = viewNode:getChildAutoType('Decs')--GRichTextField
	self.closeButton = viewNode:getChildAutoType('closeButton')--GButton
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.lihuiDisplay = viewNode:getChildAutoType('lihuiDisplay')--GButton
	self.list = viewNode:getChildAutoType('list')--GList
	self.title = viewNode:getChildAutoType('title')--GTextField
	--{autoFieldsEnd}:Dorm.DormAnswerView
	--Do not modify above code-------------
end

function DormAnswerView:_initListener( )
	
	self.closeButton:addClickListener(function()
		self:closeView()
	end)

	self.lihuiDisplay:addClickListener(function()

	end)

	local ABCD = {"A.","B.","C.","D."}
	self.list:setItemRenderer(function(index, obj)
		local str = self.list._dataTemplate[index+1]
		obj:setTitle(ABCD[index+1]..str)
		self.allObj[index+1] = obj
		obj:getController("sureCtr"):setSelectedIndex(0)
		obj:addClickListener(function()
			self:runNext(index,obj)
		end,33)
	end)

end

function DormAnswerView:_initUI( )
	self:_initVM()
	self:_initListener()
   	self:setBg("bg_heroDormitory1.jpg")
	--需要参数
	-- heroData
	-- type  1是对诗 2是答题
	self.heroData = self._args.heroData
	self.type = self.heroData.type or 1
	self.heroId = self.heroData.heroId
	local questionType = 1
	local questionNum = 4
	local typeConfig = DynamicConfigData.t_HeroInteractionConfig[1].InteractionType
	for k,v in pairs(typeConfig) do 
		if self.type  == v.gameType then
			questionType = v.questionType
			questionNum = v.questionNum
			break
		end
	end

	local questionConfig =  DynamicConfigData.t_question
	local myQuestionConfig = {}
	for k,v in pairs(questionConfig) do
		if v.type == questionType then
			table.insert(myQuestionConfig,v)
		end
	end

	local allNum = #myQuestionConfig
	for i=1, allNum do
		local rand = math.random(1,allNum)
		local temp = myQuestionConfig[i]
		myQuestionConfig[i] = myQuestionConfig[rand]
		myQuestionConfig[rand] = temp
	end
	self.myQuestionConfig = myQuestionConfig
	self.questionNum = questionNum

	local lihuiDisplay = BindManager.bindLihuiDisplay(self.lihuiDisplay)
	lihuiDisplay:setData(self.heroId)
	self:run()
end


function DormAnswerView:run()
	if tolua.isnull(self.view) then return end

	local sindex = self.index + 1
	if sindex > self.questionNum or not self.myQuestionConfig or self.myQuestionConfig[sindex] == nil then
		self:doFinish(self.rightNum)
		return
	end
	self.index = sindex
	self.curData = self.myQuestionConfig[self.index]
	self:doQuestion( )
end

function DormAnswerView:runNext(index,obj)
	self.list:setTouchable(false)
	if index+1 == self.curData.right then
		self.rightNum = self.rightNum + 1
		obj:getController("sureCtr"):setSelectedIndex(1)
		RollTips.show(Desc.HeroDormitory_yes)
	else
		RollTips.show(Desc.HeroDormitory_no)
		obj:getController("sureCtr"):setSelectedIndex(2)
		self.allObj[self.curData.right]:getController("sureCtr"):setSelectedIndex(1)
	end
	--延迟执行
	Scheduler.scheduleOnce(1,function() self:run() end)
end

function DormAnswerView:doQuestion( )

	self.title:setText(Desc.HeroDormitory_Ques:format(Desc["common_"..self.index],self.index,4))
	self.Decs:setText(self.curData.issue)

	local question = {}
	for i=1,4 do 
		local key = "opt"..i
		if self.curData[key] and self.curData[key] ~= "" then
			table.insert(question,self.curData[key])
		end
	end
	self.list:setData(question)
	self.list:setTouchable(true)
end

function DormAnswerView:doFinish( rightNum )
	local parameter = DynamicConfigData.t_HeroInteractionType[self.type].parameter
	local index = 1
	for i,v in ipairs(parameter) do
		if v == rightNum then 
			index = i
			break
		end
	end
	local params = {}
	params.tionType = self.type
	params.pos = index
	params.heroCode = self.heroId 
	RPCReq.HeroTotems_AddHeroInteractionType(params)
	self:closeView()
end

return DormAnswerView