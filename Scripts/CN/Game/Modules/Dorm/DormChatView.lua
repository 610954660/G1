--Date :2021-01-05
--Author : generated by FairyGUI
--Desc : 

local DormChatView,Super = class("DormChatView", Window)

function DormChatView:ctor()
	--LuaLog("DormChatView ctor")
	self._packName = "Dorm"
	self._compName = "DormChatView"
	self._rootDepth = LayerDepth.PopWindow
	self.heroId = 0
	self.chatConfig = {}
	self.curData = {}
	self.index = 0
end

function DormChatView:_initEvent( )
	
end

function DormChatView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:Dorm.DormChatView
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.layer = viewNode:getChildAutoType('layer')--layer
		self.layer.name = viewNode:getChildAutoType('layer/$name')--GLabel
		self.layer.text = viewNode:getChildAutoType('layer/$text')--duihua
		self.layer.lihuiDisplay = viewNode:getChildAutoType('layer/lihuiDisplay')--GButton
	self.viewCtrl = viewNode:getController('viewCtrl')--Controller
	--{autoFieldsEnd}:Dorm.DormChatView
	--Do not modify above code-------------
end

function DormChatView:_initListener( )
	
end

function DormChatView:_initUI( )
	self:_initVM()
	self:_initListener()
   	self:setBg("bg_heroDormitory1.jpg")
	local temp = {
		}

	self.heroData = self._args.heroData
	self.heroId = self.heroData.heroId
	self.heroName = DynamicConfigData.t_hero[self.heroId].heroName


	self.lihuiDisplay = BindManager.bindLihuiDisplay(self.layer.lihuiDisplay)
	self.lihuiDisplay:setData(self.heroId)

	local rand = math.random(1,#self.heroData.heroTall) 
	local storyGroup = self.heroData.heroTall[rand]
	local storyConfig = DynamicConfigData.t_StoryGroup[storyGroup]

	local storyDesc = DynamicConfigData.t_StoryDec
	for i = 1,#storyConfig.decGroup do 
		table.insert(self.chatConfig,storyDesc[storyConfig.decGroup[i]])
	end


	self.view:addClickListener(function()

		if self.clickFuc then
			self.clickFuc()
			self.clickFuc = false
		else
			self:runNext()
		end
	end,33)
	self:run( )
end

function DormChatView:run()
	if tolua.isnull(self.view) then return end

	local sindex = self.index + 1
	if not self.chatConfig or self.chatConfig[sindex] == nil then
		self:doFinish()
		return
	end
	self.index = sindex
	self.curData = self.chatConfig[self.index]
	self:doChat( )
end

function DormChatView:runNext()
	if not self or tolua.isnull(self.view) then return end
		--延迟一帧执行
		Scheduler.scheduleNextFrame(function() self:run() end)
	end

function DormChatView:doChat( )
	
	if self.curData.speak == 1 then
		self.layer.name:setTitle(self.heroName)
		self.lihuiDisplay.skeletonNode:setColor({r=255,g=255,b=255})
	else
		self.layer.name:setTitle("我")
		self.lihuiDisplay.skeletonNode:setColor({r=150,g=150,b=150})
	end
	

	local textStr = string.gsub(self.curData.dec, "<br>","\n")
	local textLen = StringUtil.utf8len(textStr)
	local n = 1
	local function updateText()
		local str = StringUtil.utf8sub(textStr,0, n)
		self.layer.text:setTitle(str);
		n = n + 1
		if n > textLen then
			self.layer.text:displayObject():stopAllActions()
			self.clickFuc = false
		end
	end
	
	self.layer.text:displayObject():stopAllActions()
	self.layer.text:displayObject():runAction(cc.RepeatForever:create(cc.Sequence:create(cc.DelayTime:create(0.02),cc.CallFunc:create(function() updateText() end))))
	
	self.clickFuc = function()
		self.layer.text:displayObject():stopAllActions()
		self.layer.text:setTitle(textStr)
	end

end


function DormChatView:doFinish(  )
	local params = {}
	params.heroCode = self.heroId
	RPCReq.HeroTotems_AddHeroStarFirstReward(params)
	self:closeView()
end

return DormChatView