--Date :2020-12-21
--Author : generated by FairyGUI
--Desc : 圣诞登录礼物

local FestivalGiftView,Super = class("FestivalGiftView", Window)

function FestivalGiftView:ctor()
	--LuaLog("FestivalGiftView ctor")
	self._packName = "FestivalGift"
	self._compName = "FestivalGiftView"
	self._rootDepth = LayerDepth.PopWindow
	self.isEnd = false;
	self.timer = false;
	self._showParticle=true
	self.index = 1
	self._action="xuehua_guangqia"
end

function FestivalGiftView:_initEvent( )
	
end

function FestivalGiftView:_initVM( )
	local viewNode = self.view
	---Do not modify following code--------
	--{autoFields}:FestivalGift.FestivalGiftView
	self.bg = viewNode:getChildAutoType('bg')--GLoader
	self.blackbg = viewNode:getChildAutoType('blackbg')--GLabel
	self.btn_get = viewNode:getChildAutoType('btn_get')--GButton
	self.closeButton = viewNode:getChildAutoType('closeButton')--GButton
	self.com_day = viewNode:getChildAutoType('com_day')--com_dayPanel
		self.com_day.day1 = viewNode:getChildAutoType('com_day/day1')--com_day_yuandan
			self.com_day.day1.img_red = viewNode:getChildAutoType('com_day/day1/img_red')--GImage
			self.com_day.day1.title1 = viewNode:getChildAutoType('com_day/day1/title1')--GRichTextField
		self.com_day.day2 = viewNode:getChildAutoType('com_day/day2')--com_day_yuandan
			self.com_day.day2.img_red = viewNode:getChildAutoType('com_day/day2/img_red')--GImage
			self.com_day.day2.title1 = viewNode:getChildAutoType('com_day/day2/title1')--GRichTextField
		self.com_day.day3 = viewNode:getChildAutoType('com_day/day3')--com_day_yuandan
			self.com_day.day3.img_red = viewNode:getChildAutoType('com_day/day3/img_red')--GImage
			self.com_day.day3.title1 = viewNode:getChildAutoType('com_day/day3/title1')--GRichTextField
		self.com_day.day4 = viewNode:getChildAutoType('com_day/day4')--com_day_yuandan
			self.com_day.day4.img_red = viewNode:getChildAutoType('com_day/day4/img_red')--GImage
			self.com_day.day4.title1 = viewNode:getChildAutoType('com_day/day4/title1')--GRichTextField
		self.com_day.day5 = viewNode:getChildAutoType('com_day/day5')--com_day_yuandan
			self.com_day.day5.img_red = viewNode:getChildAutoType('com_day/day5/img_red')--GImage
			self.com_day.day5.title1 = viewNode:getChildAutoType('com_day/day5/title1')--GRichTextField
	self.list_day = viewNode:getChildAutoType('list_day')--GList
	self.list_item = viewNode:getChildAutoType('list_item')--GList
	self.txt_cd = viewNode:getChildAutoType('txt_cd')--GTextField
	self.txt_desc = viewNode:getChildAutoType('txt_desc')--GRichTextField
	self.txt_end = viewNode:getChildAutoType('txt_end')--GRichTextField
	self.txt_head = viewNode:getChildAutoType('txt_head')--GRichTextField
	self.txt_loginCount = viewNode:getChildAutoType('txt_loginCount')--GTextField
	--{autoFieldsEnd}:FestivalGift.FestivalGiftView
	--Do not modify above code-------------
end

function FestivalGiftView:_initListener( )
	
	self.btn_get:addClickListener(function()
		local day = self.index -- self.list_day:getSelectedIndex() + 1;
		local id = self.data[day].id;
		FestivalGiftModel:getAward(id);
	end)

	-- self.list_day:setItemRenderer(function(index, obj)
	-- 	local d = self.data[index + 1];
	-- 	obj:setText(string.format(Desc.FestivalGift_day, d.day));
	-- 	RedManager.register("FestivalGift"..(index + 1), obj:getChildAutoType("img_red"));
	-- end)
	-- self.list_day:removeClickListener();
	-- self.list_day:addClickListener(function()
	-- 	self:upGiftList();
	-- end)
	for i = 1, 5 do
		local item = self.com_day["day"..i];
		item:setTitle(string.format(Desc.FestivalGift_day, i))
		RedManager.register("FestivalGift"..i, item.img_red);
		item:addClickListener(function()
			self.index = i;
			self:upGiftList();
		end)
	end
end

function FestivalGiftView:_initUI( )
	self:_initVM()
	self:_initListener()
	self.bg:setIcon("Bg/FestivalGift.png");
	local activeData = ActivityModel:getActityByType(GameDef.ActivityType.EveryDayLogin);
	local moduleId = activeData and activeData.showContent.moduleId or 1;
	local conf = DynamicConfigData.t_FestivalGift[moduleId];
	self.data = {}
	for _, d in pairs(conf) do
		table.insert(self.data, d);
	end
	table.sort(self.data, function(a, b)
		return a.id < b.id;
	end)
	-- self.list_day:setNumItems(#self.data);
	-- self.list_day:setSelectedIndex(0);
	-- self.list_day:setVisible(#self.data > 1);
	self:upGiftList();
	self.txt_loginCount:setText(string.format(Desc.FestivalGift_dayCount, FestivalGiftModel.loginCount))
	self:updateCountTimer();
end

function FestivalGiftView:FestivalGift_updateData()
	-- self.list_day:setNumItems(#self.data);
	self:upGiftList();
end

function FestivalGiftView:upGiftList()
	local day = self.index;--math.max(self.list_day:getSelectedIndex() + 1, 1);
	local dayCount = FestivalGiftModel.loginCount;
	local conf = self.data[day]
	local reward = conf.reward;
	local flag = bit.band(FestivalGiftModel.recvMark, bit.lshift(1, day - 1)) > 0
	self.list_item:setItemRenderer(function(index, obj)
		local d = reward[index + 1];
		if (not obj.cell) then
			obj.cell = BindManager.bindItemCell(obj:getChildAutoType("itemCell"));
		end
		-- obj.cell:setIsBig(true);
		obj.cell:setData(d.code, d.amount, d.type);
		obj.cell:setIsHook(flag);
		obj.cell.view:getChildAutoType("n50"):setVisible(false);
	end)
	self.list_item:setNumItems(#reward);

	if (not flag and day <= dayCount) then
		self.btn_get:setVisible(true);
	else
		self.btn_get:setVisible(false);
	end

	
	if (conf) then
		local desc = conf.desc;
		if (desc) then
			self.txt_desc:setText(desc);
		end
		local head = conf.head;
		if (head) then
			self.txt_head:setText(head);
		end
		local endl = conf.endl;
		if (endl) then
			self.txt_end:setText(endl);
		end
	end
end

-- 倒计时
function FestivalGiftView:updateCountTimer()
	if self.isEnd then return end
	local actData = ModelManager.ActivityModel:getActityByType(GameDef.ActivityType.EveryDayLogin)
	printTable(8848,">>>actData>>",actData)
	if not actData then return end
	local actId   = actData.id
	local status, addtime = ModelManager.ActivityModel:getActStatusAndLastTime(actId)
	if not addtime then return end

	if status == 2 and addtime == -1 then
		self.isEnd = false
		self.txt_cd:setText(Desc.activity_txt5)
	else
		local lastTime = addtime / 1000
		if lastTime == -1 then
			self.txt_cd:setText(Desc.activity_txt5)
		else
			if not tolua.isnull(self.txt_cd) then
				self.txt_cd:setText(TimeLib.GetTimeFormatDay(lastTime, 2))
			end
			local function onCountDown(time)
				if not tolua.isnull(self.txt_cd) then
					self.isEnd = false
					self.txt_cd:setText(TimeLib.GetTimeFormatDay(time, 2))
				end
			end
			local function onEnd(...)
				self.isEnd = true
				if not tolua.isnull(self.txt_cd) then
					self.txt_cd:setText(Desc.activity_txt18)
				end
				self:refreshPanal()
			end
			if self.timer then
				TimeLib.clearCountDown(self.timer)
			end
			self.timer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
		end
	end
end

function FestivalGiftView:_exit()
	if self.timer then
		TimeLib.clearCountDown(self.timer)
	end
end

return FestivalGiftView