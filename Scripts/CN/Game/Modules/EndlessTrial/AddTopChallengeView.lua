--Name : AddTopChallengeView.lua
--Author : generated by FairyGUI
--Date : 2020-8-3
--Desc : 

local AddTopChallengeView,Super = class("AddTopChallengeView", View)

function AddTopChallengeView:ctor()
	--LuaLog("AddTopChallengeView ctor")
	self._packName = "EndlessTrial"
	self._compName = "AddTopChallengeView"
	self._rootDepth = LayerDepth.PopWindow

	self.btn_close 	= false
	self.btn_reward = false
	self.txt_buffDec = false
	self.list_reward = false

	self.alert 		   = false
	self.alertViewName = false
	
end

function AddTopChallengeView:_initUI( )
	self.btn_close = self.view:getChildAutoType("btn_close")
	self.btn_reward = self.view:getChildAutoType("btn_reward")
	self.txt_buffDec = self.view:getChildAutoType("txt_buffDec")
	self.list_reward = self.view:getChildAutoType("list_reward")
end


function AddTopChallengeView:_initEvent( )
	self.btn_close:removeClickListener()
	self.btn_close:addClickListener(function()
		local info = {}
		info.text = Desc.EndlessTrial_tips1
		info.yesText = Desc.EndlessTrial_continue
		info.noText = Desc.EndlessTrial_exit
		info.type = "yes_no"
		info.align = "center"
		info.onNo = function()
			Dispatcher.dispatchEvent(EventType.EndlessTrial_endBuffView)
			Dispatcher.dispatchEvent(EventType.battle_end)
		end
		self.alert,self.alertViewName =  Alert.show(info)
	end,22)

	self.btn_reward:getChildAutoType("itemCell"):setTouchable(false)
	self.btn_reward:addClickListener(function()
		ViewManager.open("EndlessRewardTipsView")
	end)
	self:EndlessTrial_refreshAddTopChallengeView()
end


function AddTopChallengeView:EndlessTrial_refreshAddTopChallengeView()
	local trialType 	  = EndlessTrialModel:getTrialType() or 1

	-- 首通奖励
	local firstRewardData,takeNum = EndlessTrialModel:getTrialFirstRewardDataByType(trialType,true)
	local itemCell = BindManager.bindItemCell(self.btn_reward:getChildAutoType("itemCell"))
	local data 	= firstRewardData[1].firstReward[1]
	itemCell:setData(data.code, data.amount, data.type)
	if takeNum > 0 then
		itemCell:setReceiveFrame(true)
	end

	-- 提示文本
	local txt_rewardDec = self.btn_reward:getChildAutoType("txt_rewardDec")
	txt_rewardDec:setText(string.format(Desc.EndlessTrial_rewardDec,firstRewardData[1].level))

	-- buff提示
	local level = EndlessTrialModel:getCurrentLevel()
	local buffName = EndlessTrialModel:getBuffName()
	self.txt_buffDec:setText(string.format(Desc.EndlessTrial_buffDec,level,buffName))


	-- 累积奖励
	local rewardAllData = EndlessTrialModel:getRewardDataByType(trialType)
	local rewardData = rewardAllData[1].dailyReward
	local dailyRewardDataNum = EndlessTrialModel:getCumulativeReward()
	self.list_reward:setItemRenderer(function(idx,obj)
		local data =  rewardData[idx+1]
		local icon = obj:getChildAutoType("icon")
		local txt_num = obj:getChildAutoType("txt_num")
		local itemData = ItemsUtil.createItemData({data = {code = data.code, type = data.type}})
		local url =ItemConfiger.getItemIconByCode(itemData:getItemInfo().icon, data.type)
		
		icon:setURL(url)
		if #dailyRewardDataNum == 0 then
			txt_num:setText(0)
		else
			txt_num:setText(StringUtil.transValue(dailyRewardDataNum[idx+1], 2))
		end
	end)
	self.list_reward:setData(rewardData)
	self.list_reward:resizeToFit(TableUtil.GetTableLen(rewardData))

end


function AddTopChallengeView:_exit( )
  
end

--如果是通关战斗结束这个界面要关掉
function AddTopChallengeView:battle_end( )
	Alert.close(self.alertViewName)
	--ViewManager.close("AddTopChallengeView")
end



return AddTopChallengeView