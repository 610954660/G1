--Date :2020-12-23
--Author : generated by FairyGUI
--Desc :

local ExtraordinarylevelMainView, Super = class("ExtraordinarylevelMainView", Window)

function ExtraordinarylevelMainView:ctor()
    --LuaLog("ExtraordinarylevelMainView ctor")
    self._packName = "ExtraordinarylevelPvP"
    self._compName = "ExtraordinarylevelMainView"
    --self._rootDepth = LayerDepth.Window
    self.calltimer = false
    self.calltimer1 = false
    self.calltimer2 = false
end

function ExtraordinarylevelMainView:_initEvent()
end

function ExtraordinarylevelMainView:_initVM()
    local viewNode = self.view
    ---Do not modify following code--------
    --{autoFields}:ExtraordinarylevelPvP.ExtraordinarylevelMainView
	self.bar_jifenbar = viewNode:getChildAutoType('bar_jifenbar')--GProgressBar
	self.btn_add = viewNode:getChildAutoType('btn_add')--GButton
	self.btn_chaofantishi = viewNode:getChildAutoType('btn_chaofantishi')--GButton
	self.btn_chuangqi = viewNode:getChildAutoType('btn_chuangqi')--com_btn_nil
		self.btn_chuangqi.img_red = viewNode:getChildAutoType('btn_chuangqi/img_red')--GImage
	self.btn_defand = viewNode:getChildAutoType('btn_defand')--GButton
	self.btn_duanweidesc = viewNode:getChildAutoType('btn_duanweidesc')--GButton
	self.btn_gerenzhanji = viewNode:getChildAutoType('btn_gerenzhanji')--GButton
	self.btn_help = viewNode:getChildAutoType('btn_help')--GButton
	self.btn_match = viewNode:getChildAutoType('btn_match')--GButton
	self.btn_rank = viewNode:getChildAutoType('btn_rank')--com_btn_nil
		self.btn_rank.img_red = viewNode:getChildAutoType('btn_rank/img_red')--GImage
	self.btn_record = viewNode:getChildAutoType('btn_record')--com_btn_nil
		self.btn_record.img_red = viewNode:getChildAutoType('btn_record/img_red')--GImage
	self.btn_regularseason1 = viewNode:getChildAutoType('btn_regularseason1')--Button5
		self.btn_regularseason1.txt_desc1 = viewNode:getChildAutoType('btn_regularseason1/txt_desc1')--GRichTextField
		self.btn_regularseason1.txt_desc2 = viewNode:getChildAutoType('btn_regularseason1/txt_desc2')--GRichTextField
	self.btn_regularseason2 = viewNode:getChildAutoType('btn_regularseason2')--Button5
		self.btn_regularseason2.txt_desc1 = viewNode:getChildAutoType('btn_regularseason2/txt_desc1')--GRichTextField
		self.btn_regularseason2.txt_desc2 = viewNode:getChildAutoType('btn_regularseason2/txt_desc2')--GRichTextField
	self.btn_reward = viewNode:getChildAutoType('btn_reward')--com_btn_nil
		self.btn_reward.img_red = viewNode:getChildAutoType('btn_reward/img_red')--GImage
	self.btn_shop = viewNode:getChildAutoType('btn_shop')--com_btn_nil
		self.btn_shop.img_red = viewNode:getChildAutoType('btn_shop/img_red')--GImage
	self.c1 = viewNode:getController('c1')--Controller
	self.c2 = viewNode:getController('c2')--Controller
	self.com_wangzhe = viewNode:getChildAutoType('com_wangzhe')--Component15
		self.com_wangzhe.img_red = viewNode:getChildAutoType('com_wangzhe/img_red')--GImage
	self.frame = viewNode:getChildAutoType('frame')--GLabel
	self.img_duanwei = viewNode:getChildAutoType('img_duanwei')--GLoader
	self.list_reward = viewNode:getChildAutoType('list_reward')--GList
	self.list_star = viewNode:getChildAutoType('list_star')--GList
	self.txt_count = viewNode:getChildAutoType('txt_count')--GRichTextField
	self.txt_countdowm = viewNode:getChildAutoType('txt_countdowm')--GRichTextField
	self.txt_dancangshanghai = viewNode:getChildAutoType('txt_dancangshanghai')--GRichTextField
	self.txt_desc = viewNode:getChildAutoType('txt_desc')--GRichTextField
	self.txt_duanweiChinese = viewNode:getChildAutoType('txt_duanweiChinese')--GRichTextField
	self.txt_paming = viewNode:getChildAutoType('txt_paming')--GRichTextField
	self.txt_season = viewNode:getChildAutoType('txt_season')--GTextField
	self.txt_shengchang = viewNode:getChildAutoType('txt_shengchang')--GRichTextField
	self.txt_shenglv = viewNode:getChildAutoType('txt_shenglv')--GRichTextField
	self.txt_starDesc = viewNode:getChildAutoType('txt_starDesc')--GRichTextField
	self.txt_zongfen = viewNode:getChildAutoType('txt_zongfen')--GRichTextField
 --{autoFieldsEnd}:ExtraordinarylevelPvP.ExtraordinarylevelMainView
    --Do not modify above code-------------
end

--添加红点
function ExtraordinarylevelMainView:_addRed(...)
    RedManager.register(
        "M_EXTRAORECORDRED",
        self.btn_record:getChildAutoType("img_red"),
        ModuleId.ExtraordinarylevelMain.id
    )
    RedManager.register(
        "M_EXTRAOREFIRSTDANRED",
        self.btn_reward:getChildAutoType("img_red"),
        ModuleId.ExtraordinarylevelMain.id
    )
    RedManager.register(
        "M_EXTRAOREKINGRED",
        self.com_wangzhe:getChildAutoType("img_red"),
        ModuleId.ExtraordinarylevelMain.id
    )
end

function ExtraordinarylevelMainView:_initEvent()
    self.btn_help:addClickListener(
        function()
            local info = {}
            info["title"] = Desc.help_StrTitle243
            info["desc"] = Desc.help_StrDesc243
            ViewManager.open("GetPublicHelpView", info)
        end
    )

    self.btn_match:addClickListener(
        function()
            if ExtraordinarylevelPvPModel.isTimeWeehours then
                RollTips.show("当前处于休赛期")
            else
                self:touchPipeiBtn()         --匹配按钮
            end
        end
    )

    self.btn_defand:addClickListener(
        function()
            --布阵
            self:enterDefandView()
        end
    )
    self.btn_regularseason1:addClickListener(
        function()
            local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
            ExtraordinarylevelPvPModel:getSelfResults(2, mainInfo.seasonId, 1)
            if mainInfo.joinKing then
                self.c1:setSelectedIndex(1)
                RollTips.show("您已参加王者赛无法参加常规赛")
            else
                self.c1:setSelectedIndex(0)
                self.c2:setSelectedIndex(1)
                ExtraordinarylevelPvPModel:setMatchType(1)
                self:showduanweiChinese()
            end
        end
    )
    self.btn_regularseason2:addClickListener(
        function()
            local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
            if next(mainInfo) == nil then
                return
            end
            ExtraordinarylevelPvPModel:getSelfResults(2, mainInfo.seasonId, 1)
            ExtraordinarylevelPvPModel:setMatchType(2)
            self:showduanweiChinese()
            local isOpen = ExtraordinarylevelPvPModel:isplayerKingOpen()
            if isOpen == true then
                self.c2:setSelectedIndex(1)
            else
                self.c2:setSelectedIndex(0)
            end
        end
    )
    self.btn_chaofantishi:addClickListener(
        function()
            RollTips.show("超凡王者可参与")
        end
    )

    self.btn_record:addClickListener(
        function()
            RedManager.updateValue("M_EXTRAORECORDRED", false)
            ViewManager.open("ExtraordinarylevelRecordtView")
        end
    )
    self.btn_reward:addClickListener(
        function()
            ViewManager.open("ExtraordinaryRewardsView")
        end
    )
    self.btn_shop:addClickListener(
        function()
            ModuleUtil.openModule(ModuleId.Shop_ExtraordShop.id, true)
        end
    )

    self.btn_rank:addClickListener(
        function()
            ViewManager.open("ExtraordinarylevelRankView")
        end
    )

    self.btn_chuangqi:addClickListener(
        function()
            ViewManager.open("ExtraordinaryleveTaleView")
        end
    )
    self.btn_duanweidesc:addClickListener(
        function()
            ViewManager.open("ExtraordinaryDeclareView")
        end
    )
    self.com_wangzhe:addClickListener(
        function()
            ViewManager.open("ExtraordinaryKingView")
        end
    )

    self.btn_gerenzhanji:addClickListener(
        function()
            local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
            if next(mainInfo) == nil then
                return
            end
            ExtraordinarylevelPvPModel:getSelfResults(2, mainInfo.seasonId, 1)
            ViewManager.open("ExtraordinaryPersonalrecordView")
        end
    )

    self.btn_add:addClickListener(
        --购买按钮
        function()
            ViewManager.open("ExtraordinarBuyView")
        end
    )
end

function ExtraordinarylevelMainView:enterDefandView()
    ExtraordinarylevelPvPModel:setCurPVPType(ExtraordinarylevelPvPModel._CrossPVPType._def)
    local battleCall = function(param, data)
        if (param == "cancel") then
        elseif (param == "begin") then
            RollTips.show(Desc.HigherPvP_saveDefSuc)
            ViewManager.close("BattlePrepareView")
        end
    end
    local args = {
        fightID = DynamicConfigData.t_Basics[1].fightId,
        configType = GameDef.BattleArrayType.CrossSuperMundaneDefFirst,
        customPrepare = true
    }
    Dispatcher.dispatchEvent(EventType.battle_requestFunc, battleCall, args)
end

function ExtraordinarylevelMainView:_initUI()
    self:setBg("ExtraordinarylevelPvPBg.png")
    ExtraordinarylevelPvPModel:getSysSeasonInfo()
    -- ExtraordinarylevelPvPModel:getAllDanReward()
    self:_initVM()
    self:showMainInfo()
    self:showBtnGrayed()
end

function ExtraordinarylevelMainView:showBtnGrayed()
    local remineTime = TimeLib.getDayResidueSecond()
    if remineTime <= 60 * 30 then
        self.btn_match:setGrayed(true)
    else
        self.btn_match:setGrayed(false)
    end
end

function ExtraordinarylevelMainView:showMainInfo(...)
    local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
    if next(mainInfo) == nil then
        return
    end
    if mainInfo.joinKing then
        self.c1:setSelectedIndex(1)
        ExtraordinarylevelPvPModel:setMatchType(2)
        self:showduanweiChinese()
    else
        self.c1:setSelectedIndex(0)
        ExtraordinarylevelPvPModel:setMatchType(1)
    end
    --s1赛季xxx赛区倒计时
    local mundName = ExtraordinarylevelPvPModel:getSuperMundName(mainInfo.assignId)
    self.txt_season:setText(string.format("S%s赛季%s赛区倒计时:", mainInfo.seasonId, mundName))
    self:showActiveTime(mainInfo)
    --活动倒计时
    self:showBtnTime(mainInfo)
    self:showduanweiChinese()
    ExtraordinarylevelPvPModel:getSelfResults(2, mainInfo.seasonId, 1)
    local max = ExtraordinarylevelPvPModel:getCurduanExp(mainInfo.dan)
    self.bar_jifenbar:setValue(mainInfo.danScore)
    self.bar_jifenbar:setMax(max)
    self.img_duanwei:setURL(ExtraordinarylevelPvPModel:getDanIcon(mainInfo.dan))
    --段位图标
    self:showJingjisaiStar(mainInfo, max) --晋级赛星数
    self:showFirstDuanweiReward(mainInfo) --首次达到白银段位奖励
    self:showCount()
    self:showChallgeBtn()
    --显示挑战按钮和防守按钮
end

function ExtraordinarylevelMainView:showChallgeBtn()
    local MatchType = ExtraordinarylevelPvPModel:getMatchType()
    if MatchType == 1 then
        self.c2:setSelectedIndex(1)
    else
        local isOpen = ExtraordinarylevelPvPModel:isplayerKingOpen()
        if isOpen == true then
            self.c2:setSelectedIndex(1)
        else
            self.c2:setSelectedIndex(0)
        end
    end
end

function ExtraordinarylevelMainView:touchPipeiBtn()
    local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
    if next(mainInfo) == nil then
        return
    end
    local matchType = ExtraordinarylevelPvPModel:getMatchType()
    local dan, curExp = mainInfo.dan, mainInfo.danScore
    local isCurJingjisai = ExtraordinarylevelPvPModel:isCurJingjisai(dan, curExp)
    if matchType == 1 then
        local isTimeState = 0
        --0可挑战
        --1免费次数不足，弹出可购买窗口，2次数使用完弹出提示
        local remainTimes, maxTimes = MaterialCopyModel:getRemainTumes(GameDef.GamePlayType.CrossSuperMundane)
        local configInfo = DynamicConfigData.t_limit[GameDef.GamePlayType.CrossSuperMundane]
        local copyInfo = ModelManager.MaterialCopyModel:getCopyInfo(GameDef.GamePlayType.CrossSuperMundane)
        if remainTimes == 0 and not isCurJingjisai and copyInfo and copyInfo.dailyInfo and copyInfo.dailyInfo.times~=nil and copyInfo.dailyInfo.times == configInfo.maxTimes then
            isTimeState = 1
        elseif copyInfo and copyInfo.dailyInfo and copyInfo.dailyInfo.times~=nil and copyInfo.dailyInfo.times >= configInfo.maxTimes + configInfo.topupMax then
            isTimeState = 2
        else
            isTimeState = 0
        end
        if isTimeState == 1 then
            ViewManager.open("ExtraordinarBuyView")
        elseif isTimeState == 2 then
            RollTips.show("挑战次数已用完")
        else
            local matchType = ExtraordinarylevelPvPModel:getMatchType()
            ExtraordinarylevelPvPModel:CrossSuperMundaneMatch(matchType)
        end
    else
        if not mainInfo.joinKing then
            local info = {}
            info.text = "参与王者赛后,将无法继续参与常规赛匹配"
            info.title = "购买"
            info.yesText = Desc.materialCopy_str3
            info.noText = Desc.materialCopy_str4
            info.okText = "okText"
            info.noClose = "yes"
            info.type = "yes_no"
            info.mask = true
            info.onClose = function()
                print(5, "noClose")
            end
            info.onYes = function()
                local matchType = ExtraordinarylevelPvPModel:getMatchType()
                ExtraordinarylevelPvPModel:CrossSuperMundaneMatch(matchType)
            end
            info.onNo = function()
                self.c1:setSelectedIndex(0)
                ExtraordinarylevelPvPModel:setMatchType(1)
                self:showduanweiChinese()
            end
            Alert.show(info)
        else
            local isTimeState = 0
            --0可挑战
            --1免费次数不足，弹出可购买窗口，2次数使用完弹出提示
            local remainTimes, maxTimes = MaterialCopyModel:getRemainTumes(GameDef.GamePlayType.CrossSuperMundane)
            local configInfo = DynamicConfigData.t_limit[GameDef.GamePlayType.CrossSuperMundane]
            local copyInfo = ModelManager.MaterialCopyModel:getCopyInfo(GameDef.GamePlayType.CrossSuperMundane)
            if remainTimes == 0 and not isCurJingjisai and copyInfo and copyInfo.dailyInfo and copyInfo.dailyInfo.times~=nil and copyInfo.dailyInfo.times == configInfo.maxTimes then
                isTimeState = 1
            elseif
                copyInfo and copyInfo.dailyInfo and copyInfo.dailyInfo.times~=nil and 
                    copyInfo.dailyInfo.times >= configInfo.maxTimes + configInfo.topupMax
             then
                isTimeState = 2
            else
                isTimeState = 0
            end
            if isTimeState == 1 then
                ViewManager.open("ExtraordinarBuyView")
            elseif isTimeState == 2 then
                RollTips.show("挑战次数已用完")
            else
                local matchType = ExtraordinarylevelPvPModel:getMatchType()
                ExtraordinarylevelPvPModel:CrossSuperMundaneMatch(matchType)
            end
        end
    end
end
function ExtraordinarylevelMainView:showCount()
    local remainTimes, maxTimes = MaterialCopyModel:getRemainTumes(GameDef.GamePlayType.CrossSuperMundane)
    self.txt_count:setText(remainTimes)
end

function ExtraordinarylevelMainView:showFirstDuanweiReward(mainInfo)
    local rewardArr, state = ExtraordinarylevelPvPModel:getDuanweiReward(mainInfo.maxDan or 0)
    self.list_reward:setItemRenderer(
        function(index, obj)
            local cell = obj:getChildAutoType("itemCell")
            local itemcell = BindManager.bindItemCell(cell)
            local award = rewardArr.item[index + 1]
            itemcell:setData(award.code, award.amount, award.type)
            local c1 = obj:getController("c1")
            local btn_get = obj:getChildAutoType("btn_getReward")
            local img_red = cell:getChildAutoType("img_red")
            btn_get:removeClickListener(100)
            btn_get:addClickListener(
                function(context)
                    ExtraordinarylevelPvPModel:receiveDanReward(rewardArr.Level)
                end,
                100
            )
            if state == true then
                c1:setSelectedIndex(1)
                img_red:setVisible(true)
            else
                c1:setSelectedIndex(0)
                img_red:setVisible(false)
            end
        end
    )
    self.list_reward:setNumItems(#rewardArr.item)
    if next(rewardArr) ~= nil then
        local level = rewardArr.Level
        local levelInfo = DynamicConfigData.t_Levelrule[level]
        self.txt_desc:setText(string.format("本赛季首次达到%s可领取", levelInfo.name))
    else
        self.txt_desc:setText("")
    end
end

function ExtraordinarylevelMainView:showJingjisaiStar(mainInfo, maxExp)
    local map = mainInfo.promotionRecord or {}
    local dan, curExp = mainInfo.dan, mainInfo.danScore
    local isCurJingjisai = ExtraordinarylevelPvPModel:isCurJingjisai(dan, curExp)
    if isCurJingjisai then
        self.txt_starDesc:setVisible(true)
        self.list_star:setVisible(true)
        local star = ExtraordinarylevelPvPModel:getCurduanStar(dan)
        self.list_star:setItemRenderer(
            function(index, obj)
                local c1 = obj:getController("c1")
                local promotion = map[index + 1]
                if promotion == true then
                    c1:setSelectedIndex(2)
                elseif promotion == false then
                    c1:setSelectedIndex(1)
                else
                    c1:setSelectedIndex(0)
                end
            end
        )
        self.list_star:setNumItems(star)
    else
        self.list_star:setVisible(false)
        self.txt_starDesc:setVisible(false)
    end
end

function ExtraordinarylevelMainView:showzhongfeng(mainInfo)
    self.txt_zongfen:setText(string.format("总分:%s", mainInfo.score))
    self.txt_paming:setText(string.format("排名:第%s名", mainInfo.rank))
    local curType = ExtraordinarylevelPvPModel:getMatchType()
    if curType == 1 then
        local winNum = mainInfo.winNum or 0
        self.txt_shengchang:setText(string.format("胜场:%s", winNum))
        if mainInfo.total == 0 then
            self.txt_shenglv:setText("胜率:0%")
        else
            self.txt_shenglv:setText(string.format("胜率:%s", math.ceil((winNum / mainInfo.total * 100))) .. "%")
        end
    else
        local kingNum = mainInfo.kingNum or 0
        self.txt_shengchang:setText(string.format("胜场:%s", kingNum))
        if mainInfo.kingTotal == 0 then
            self.txt_shenglv:setText("胜率:0%")
        else
            self.txt_shenglv:setText(string.format("胜率:%s", math.ceil((kingNum / mainInfo.kingTotal * 100))) .. "%")
        end
    end
    self.txt_dancangshanghai:setText(string.format("单场最高伤害:%s", mainInfo.heroDamage))
end

function ExtraordinarylevelMainView:showduanweiChinese()
    local MatchType = ExtraordinarylevelPvPModel:getMatchType()
    if MatchType == 1 then
        local duanweiDesc = ExtraordinarylevelPvPModel:getDuanweiChinese()
        self.txt_duanweiChinese:setText(duanweiDesc)
    else
        local isOpen = ExtraordinarylevelPvPModel:isKingOpen()
        if isOpen == true then
            local duanweiDesc = ExtraordinarylevelPvPModel:getDuanweiChinese()
            self.txt_duanweiChinese:setText(duanweiDesc)
        else
            self.txt_duanweiChinese:setText("王者赛未开启")
        end
    end
end

function ExtraordinarylevelMainView:showBtnTime(info)
    local regularseason1 = self.btn_regularseason1:getChildAutoType("txt_desc1")
    local regularseason2 = self.btn_regularseason1:getChildAutoType("txt_desc2")
    local seasonCtr1 = self.btn_regularseason1:getController("c1")
    local serverTime = ServerTimeModel:getServerTime()
    regularseason1:setText("剩余时间")
    local remintime = info.endTime - serverTime
    if remintime > 0 then
        seasonCtr1:setSelectedIndex(0)
        regularseason2:setText(TimeLib.GetTimeFormatDay1(remintime, 2))
        local function onCountDown(time)
            if not tolua.isnull(regularseason2) then
                regularseason2:setText(TimeLib.GetTimeFormatDay1(time, 2))
            end
        end
        local function onEnd(...)
            regularseason2:setText("未开启")
        end
        if self.calltimer1 then
            TimeLib.clearCountDown(self.calltimer1)
        end
        self.calltimer1 = TimeLib.newCountDown(remintime, onCountDown, onEnd, false, false, false)
    else
        seasonCtr1:setSelectedIndex(1)
        regularseason2:setText("未开启")
    end

    local regularseason3 = self.btn_regularseason2:getChildAutoType("txt_desc1")
    local regularseason4 = self.btn_regularseason2:getChildAutoType("txt_desc2")
    local seasonCtr2 = self.btn_regularseason2:getController("c1")
    local oPentime = info.kingTime - serverTime
    if oPentime > 0 then
        seasonCtr2:setSelectedIndex(0)
        regularseason4:setText("后开启")
        regularseason3:setText(TimeLib.GetTimeFormatDay1(oPentime, 2))
        local function onCountDown(time)
            if not tolua.isnull(regularseason3) then
                regularseason3:setText(TimeLib.GetTimeFormatDay1(time, 2))
            end
        end
        local function onEnd(...)
            regularseason3:setText("已开启")
        end
        if self.calltimer2 then
            TimeLib.clearCountDown(self.calltimer2)
        end
        self.calltimer2 = TimeLib.newCountDown(oPentime, onCountDown, onEnd, false, false, false)
    else
        seasonCtr2:setSelectedIndex(1)
        regularseason3:setText("已开启")
    end
end

function ExtraordinarylevelMainView:showActiveTime(allInfo)
    local serverTime = ServerTimeModel:getServerTime()
    local lastTime = allInfo.endTime - serverTime
    if lastTime > 0 then
        self.txt_countdowm:setText(TimeLib.GetTimeFormatDay1(lastTime, 2))
        local function onCountDown(time)
            self.txt_countdowm:setText(TimeLib.GetTimeFormatDay1(time, 2))
        end
        local function onEnd(...)
            self.txt_countdowm:setText("未开启")
        end
        if self.calltimer then
            TimeLib.clearCountDown(self.calltimer)
        end
        self.calltimer = TimeLib.newCountDown(lastTime, onCountDown, onEnd, false, false, false)
    else
        self.txt_countdowm:setText("未开启")
    end
end

function ExtraordinarylevelMainView:extraordinarylevelPvP_mainInfo(...)
    -- 刷新数据
    self:showMainInfo()
end

function ExtraordinarylevelMainView:extraordinarylevelPvP_BattleEnd(...)
    local info = ExtraordinarylevelPvPModel.battleResultInfo
    if next(info) == nil then
        return
    end
    -- 刷新数据
    local MatchType = ExtraordinarylevelPvPModel:getMatchType()
    if MatchType == 1 then
        local duanweiDesc = ExtraordinarylevelPvPModel:getDanChinese(info.dan)
        self.txt_duanweiChinese:setText(duanweiDesc)
    else
        local isOpen = ExtraordinarylevelPvPModel:isKingOpen()
        if isOpen == true then
            self.txt_duanweiChinese:setText("已开启")
        else
            self.txt_duanweiChinese:setText("王者赛未开启")
        end
    end

    local max = ExtraordinarylevelPvPModel:getCurduanExp(info.dan)
    self.bar_jifenbar:setValue(info.danScore)
    self.bar_jifenbar:setMax(max)
    self.img_duanwei:setURL(ExtraordinarylevelPvPModel:getDanIcon(info.dan))
    --段位图标
    self:showJingjisaiStar(info, max) --晋级赛星数
    self:showFirstDuanweiReward(info) --首次达到白银段位奖励
    self:showCount()
    self:showChallgeBtn()
end

function ExtraordinarylevelMainView:extraordinarylevelPvP_zijizhanji(_, info) -- 刷新数据
    self:showzhongfeng(info)
end

function ExtraordinarylevelMainView:extraordinarylevelPvP_shoutongduanweijiangli() -- 刷新数据
    local mainInfo = ExtraordinarylevelPvPModel:getMainInfo()
    if next(mainInfo) == nil then
        return
    end
    self:showFirstDuanweiReward(mainInfo)
end

function ExtraordinarylevelMainView:materialCopy_updata(_, data)
    self:showCount()
end

function ExtraordinarylevelMainView:materialCopy_pass(_, copytype)
    self:showCount()
end

function ExtraordinarylevelMainView:materialCopy_addCopyNum(_, copytype)
    self:showCount()
end

function ExtraordinarylevelMainView:materialCopy_resetDay(_, copytype)
    self:showCount()
end

function ExtraordinarylevelMainView:_exit()
    if self.calltimer then
        TimeLib.clearCountDown(self.calltimer)
    end
    if self.calltimer2 then
        TimeLib.clearCountDown(self.calltimer2)
    end
    if self.calltimer3 then
        TimeLib.clearCountDown(self.calltimer3)
    end
end
return ExtraordinarylevelMainView
