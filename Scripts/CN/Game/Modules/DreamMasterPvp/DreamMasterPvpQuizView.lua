--Date :2020-11-23
--Author : generated by FairyGUI
--Desc : 

local DreamMasterPvpQuizView, Super = class("DreamMasterPvpQuizView", Window)

function DreamMasterPvpQuizView:ctor()
	--LuaLog("DreamMasterPvpQuizView ctor")
	self._packName = "DreamMasterPvp"
	self._compName = "DreamMasterPvpQuizView"
	self._rootDepth = LayerDepth.Window
	self.skeletonNode = {}
	self.calltimer = false
	self.posInfo = {11, 12, 13, 21, 22, 23}
	self.mode = self._args.mode or DreamMasterPvpModel.matchMode
	self.curTeamType = 1

	self.leftplayerItem = false
	self.rigthplayerItem = false
end

function DreamMasterPvpQuizView:_initVM()
	local vmRoot = self
	local viewNode = self.view
	---Do not modify following code--------
	--{vmFields}:WorldChallenge.DreamMasterPvpQuizView
	vmRoot.n7 = viewNode:getChildAutoType("$n7")
	--text
	vmRoot.btn_lineup = viewNode:getChildAutoType("$btn_lineup")
	--component
	vmRoot.txt_countdown = viewNode:getChildAutoType("$txt_countdown")
	--richtext
	vmRoot.leftplayerLv = viewNode:getChildAutoType("$leftplayerLv")
	--text
	vmRoot.txt_daojishi = viewNode:getChildAutoType("$txt_daojishi")
	vmRoot.txt_statusTitle = viewNode:getChildAutoType("statusTitle")
	--richtext
	vmRoot.img_bg = viewNode:getChildAutoType("$img_bg")
	--loader
	vmRoot.txt_group = viewNode:getChildAutoType("$txt_group")
	--text
	vmRoot.rigth_cai = viewNode:getChildAutoType("$rigth_cai")
	--component
	vmRoot.img_stageNum = viewNode:getChildAutoType("$img_stageNum")
	--loader
	vmRoot.leftplayername = viewNode:getChildAutoType("$leftplayername")
	--text
	vmRoot.txt_leftzhici = viewNode:getChildAutoType("$txt_leftzhici")
	--text
	vmRoot.left_cai = viewNode:getChildAutoType("$left_cai")
	--component
	vmRoot.txt_rigthzhici = viewNode:getChildAutoType("$txt_rigthzhici")
	--text
	vmRoot.rigthplayername = viewNode:getChildAutoType("$rigthplayername")
	--text
	vmRoot.rigthplayerLv = viewNode:getChildAutoType("$rigthplayerLv")
	--text
	vmRoot.btn_record = viewNode:getChildAutoType("$btn_record")
	--text
	vmRoot.playerSubList = viewNode:getChildAutoType("$playerSubList")
	--text
	vmRoot.enemySubList = viewNode:getChildAutoType("$enemySubList")
	--text
	vmRoot.txt_myScore = viewNode:getChildAutoType("myScore")
	
	vmRoot.txt_stateTxt = viewNode:getChildAutoType("stateTxt")
	vmRoot.lookBattleBt = viewNode:getChildAutoType("lookBattleBt")
	vmRoot.lookTxt = viewNode:getChildAutoType("lookTxt")

	vmRoot.zengsongTxt = viewNode:getChildAutoType("zengsongTxt")
	vmRoot.zengsong = viewNode:getTransition("zengsong")
	--{vmFieldsEnd}:WorldChallenge.DreamMasterPvpQuizView
	--Do not modify above code-------------
end

function DreamMasterPvpQuizView:_initUI()
	self.list_team = self.view:getChildAutoType("list_team")
	local ctrl = self.view:getController("teamCtrl")
	ctrl:setSelectedIndex(self.mode == 0 and 0 or 1)
	self.list_team:setSelectedIndex(0)

	self:_initVM()
	local url = "UI/WorldChallenge/worldchallengedengguanbg.png"
	self.img_bg:setURL(url)
	self.c1 = self.view:getController("c1")
	self.c2 = self.view:getController("c2")
	self.c3 = self.view:getController("c3")
	self.c2:setSelectedIndex(1)

	self.leftplayer_power = self.view:getChildAutoType("$leftplayer_power")
	self.rigthplayer_power = self.view:getChildAutoType("$rigthplayer_power")
	self.btn_right = self.view:getChildAutoType("btn_right")
	self.btn_left = self.view:getChildAutoType("btn_left")

	printTable(16, ">>>>>>>>wewerewr", self._args.quiz)

	self.btn_halloffame = self.view:getChildAutoType("$btn_halloffame")
	self.btn_mymatch = self.view:getChildAutoType("btn_mymatch")
	self.btn_mymatch:addClickListener(
		function(context) --我的比赛
			local model = DreamMasterPvpModel:getModelByType(self.mode)
			model:setBattleArrayState()
			RedManager.updateValue("V_DREAMMASTER_MYMATCH", false)
			local id = model:getMyopponentId()
			if id ~= 0 then
				model:getBattlePlayerInfo(id)
			end
			if model:getcanChange() == true then
				if ViewManager.getView("DreamMasterPvpQuizView") then
					ViewManager.close("DreamMasterPvpQuizView")
				end
				ViewManager.open("DreamMasterPvpQuizView", {quiz = 2, mode = self.mode})
			else
				RollTips.show(Desc.WorldChallenge_str2)
			end
		end
	)

	self.btn_halloffame:addClickListener(
		function(context) 
			ModuleUtil.openModule(ModuleId.Chat)
		end
	)

	self:showAllEquizView()
	
	
	self.left_cai:removeClickListener(100)
	self.left_cai:addClickListener(
		function(context)

			if not self.leftplayerItem then
				return
			end
			ViewManager.open("DreamMasterPvpGuessView",{guessName = self.leftplayerItem.name,guessPos = self.leftplayerItem.pos})
		end,
		100
	)

	self.rigth_cai:removeClickListener(100)
	self.rigth_cai:addClickListener(
		function(context)

			if not self.rigthplayerItem then
				return
			end
			ViewManager.open("DreamMasterPvpGuessView",{guessName = self.rigthplayerItem.name,guessPos = self.rigthplayerItem.pos})
		end,
		100
	)

	

	self.lookBattleBt:addClickListener(
		function(context)

			if DreamMasterPvpModel.curGuessRecordId then
				DreamMasterPvpModel:playBattleRecord(DreamMasterPvpModel.curGuessRecordId)
			end
		end,
		100
	)
	
	if self._args.quiz == 2 then
		DreamMasterPvpModel:setMymatchFirstRed()
	end

	local configInfo=DynamicConfigData.t_DreamMasterPvpConst[1];
	self.zengsongTxt:setText(Desc.DreamMasterPvp_zengsong:format(configInfo.freePoint))
	self:_addRed()
end

function DreamMasterPvpQuizView:dreamMaster_wodebisaianniu()
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	if model:getcanChange() == true and DreamMasterPvpModel.state == GameDef.DreamPvpState.Pre then
		self.btn_mymatch:setVisible(true)
	else
		self.btn_mymatch:setVisible(false)
	end
end

function DreamMasterPvpQuizView:_addRed()

    RedManager.register(
        "V_DREAMMASTER_MYMATCH",
        self.btn_mymatch:getChildAutoType("img_red"),
        ModuleId.DreamMasterPvp.id
    )
end

function DreamMasterPvpQuizView:dreamMaster_updateView()
	self:showAllEquizView()
	
end

function DreamMasterPvpQuizView:showAllEquizView()
	if self._args.quiz == 0 then --竞猜开始
		self.c1:setSelectedIndex(0)
		self:showquizIng()
	elseif self._args.quiz == 2 then --调整阵容
		--0界面打开1刷新
		self.c1:setSelectedIndex(2)
		self:showChangeSquad(1)
	elseif self._args.quiz == 3 then --竞猜成功
		self.c1:setSelectedIndex(3)
		self:showSquadWin(true)
	elseif self._args.quiz == 4 then --竞猜失败
		self.c1:setSelectedIndex(4)
		self:showSquadWin(false)
	end
end

function DreamMasterPvpQuizView:setPlayerInfoBtn(playerId, serverId, isleft)
	if isleft == 1 then
		self.btn_left:removeClickListener(100)
		self.btn_left:addClickListener(
			function(context)
				if self.mode == 1 then
					-- 打开天境赛玩家信息
				else
					local playId = playerId
					local serverId = serverId
					ViewManager.open(
						"ViewPlayerView",
						{playerId = playId, serverId = serverId, arrayType = GameDef.BattleArrayType.DreamPvp}
					)
				end
			end,
			100
		)
	else
		self.btn_right:removeClickListener(100)
		self.btn_right:addClickListener(
			function(context)
				if self.mode == 1 then
					-- 打开天境赛玩家信息
				else
					local playId = playerId
					local serverId = serverId
					ViewManager.open(
						"ViewPlayerView",
						{playerId = playId, serverId = serverId, arrayType = GameDef.BattleArrayType.DreamPvp}
					)
				end
			end,
			100
		)
	end
end

function DreamMasterPvpQuizView:getBattleArr(playerId,serverId,callfuc)

	local params = {}
	params.playerId  = playerId
	params.serverId  =  LoginModel:getUnitServerId();
	params.arrayType =  GameDef.BattleArrayType.DreamPvp
	params.onSuccess = function (res )
		printTable(33,"DreamMasterPvpQuizView:getBattleArr",res)
		if tolua.isnull(self.view) then return end
		if callfuc then
			local data = {}
			data.heroInfo = {}
			if res.playerInfo and res.playerInfo.array then
				for k,v in pairs(res.playerInfo.array) do
					data.heroInfo[v.id] = v
				end
			end
			callfuc(data)
		end
	end
	
	RPCReq.Player_FindPlayer(params, params.onSuccess)

end

function DreamMasterPvpQuizView:showquizIng() -- flag
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	local countdown = DreamMasterPvpModel.stateEndTimeMs and DreamMasterPvpModel.stateEndTimeMs/1000 or 0
	self:showCountDown(self.txt_statusTitle,self.txt_daojishi, countdown)
	if DreamMasterPvpModel.myGuessInfo and DreamMasterPvpModel.myGuessInfo.dreamPvpScore then
		self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(DreamMasterPvpModel.myGuessInfo.dreamPvpScore))
	else
		self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(0))
	end
	self:dreamMaster_wodebisaianniu()
	local guessInfo = model:getGuessing()
	if not guessInfo then return end
	printTable(31, "打印的竞猜数据", guessInfo)
	local t_guessInfo = {}
	for k,v in pairs(guessInfo) do
		table.insert(t_guessInfo,v)
	end

	local function cmppp(a,b)
		return a.battleSide < b.battleSide
	end

	table.sort(t_guessInfo,cmppp)

	local leftPlayer = t_guessInfo[1]
	local rigthPlayer = t_guessInfo[2]
	if not leftPlayer then return end


	local leftplayerItem = model.playerList[leftPlayer.pos]
	self.leftplayername:setText(leftplayerItem.name)
	self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
	self:setPlayerInfoBtn(leftplayerItem.playerId, leftplayerItem.serverId, 1)
	local rigthplayerItem = model.playerList[rigthPlayer.pos]
	if rigthplayerItem.name ~= nil then
		self.rigthplayername:setText(rigthplayerItem.name)
	end
	-- if not leftPlayer or not leftPlayer.heroInfo then
	--     leftPlayer = {heroInfo = {}}
	-- end
	if rigthplayerItem.level ~= nil then
		self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
		self:setPlayerInfoBtn(rigthplayerItem.playerId, rigthplayerItem.serverId, 2)
	end
	printTable(30, "sadfffff", rigthplayerItem)

	self.leftplayerItem = leftplayerItem
	self.rigthplayerItem = rigthplayerItem
	
	self.txt_stateTxt:setText(DreamMasterPvpModel:getStatTex(rigthplayerItem.pos))
	-- 左边队伍
	self:getBattleArr(leftplayerItem.playerId, leftplayerItem.serverId,function(arrayLeft)
		--local arrayLeft = self:getGuessArr(leftPlayer)
		self:showModel(arrayLeft, 1)
		local leftPower = self:getFightIngPower(arrayLeft)
		self.leftplayer_power:setText(leftPower)
	end)
	
	-- 右边队伍
	self:getBattleArr(rigthplayerItem.playerId, rigthplayerItem.serverId,function(arrayRight)
		--local arrayRight = self:getGuessArr(rigthPlayer)
		-- local haveArray = not arrayRight.heroInfo and not rigthPlayer.battleArrayInfo
		-- if not rigthPlayer and haveArray then
		-- 	self.c2:setSelectedIndex(1)
		-- elseif rigthPlayer and haveArray and rigthplayerItem.name ~= nil then
		-- 	self.c2:setSelectedIndex(2)
		-- else
		-- 	self.c2:setSelectedIndex(0)
		-- 	self:showModel(arrayRight, 2)
		-- end
		self.c2:setSelectedIndex(0)
		self:showModel(arrayRight, 2)
		local rightPower = self:getFightIngPower(arrayRight)
		self.rigthplayer_power:setText(StringUtil.transValue(rightPower))
	end)

	self:dreamMaster_updateGuess()

end

-- 改变阵容
function DreamMasterPvpQuizView:dreamMaster_updateGuess(_,playNow)
	self.lookBattleBt:setVisible(false)
	self.lookTxt:setVisible(false)
	if self._args.quiz ~= 0 then
		return
	end
	
	if (DreamMasterPvpModel.myGuessInfo and DreamMasterPvpModel.myGuessInfo.dreamPvpPos and DreamMasterPvpModel.myGuessInfo.dreamPvpPos > 0 and DreamMasterPvpModel.myGuessInfo.dreamPvpPos < 65) or DreamMasterPvpModel.state == GameDef.DreamPvpState.Fight then
		if DreamMasterPvpModel.myGuessInfo.dreamPvpScore then
			self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(DreamMasterPvpModel.myGuessInfo.dreamPvpScore))
		end
		local leftNum = 0
		local rightNum = 0
		for k,v in pairs(DreamMasterPvpModel.guessInfoMap) do
			if self.leftplayerItem.pos == v.pos then
				leftNum = v.count
			elseif self.rigthplayerItem.pos == v.pos then
				rightNum = v.count
			end
		end
		local allNum = rightNum + leftNum
		local allNum = rightNum + leftNum
		if allNum <=0 then
			allNum = 100
		end
		local leftSuppNum = math.floor(100*leftNum / allNum)
		local rightSuppNum = 100 - leftSuppNum
		self.txt_leftzhici:setText(leftSuppNum .. "%")
		self.txt_rigthzhici:setText(rightSuppNum .. "%")
		self.c1:setSelectedIndex(1)
		if self.leftplayerItem and DreamMasterPvpModel.myGuessInfo.dreamPvpPos == self.leftplayerItem.pos then
			self.c3:setSelectedIndex(0)
		else
			self.c3:setSelectedIndex(1)
		end
		if DreamMasterPvpModel.curGuessRecordId and DreamMasterPvpModel.state == GameDef.DreamPvpState.Fight then
			self.lookTxt:setVisible(true)
			self.lookBattleBt:setVisible(true)
			if playNow and self._args.quiz == 0 then
				DreamMasterPvpModel:playBattleRecord(DreamMasterPvpModel.curGuessRecordId)
			end
		else
			self.lookTxt:setVisible(false)
			self.lookBattleBt:setVisible(false)
		end
	else
		self.c1:setSelectedIndex(0)
		self.c3:setSelectedIndex(1)
	end
end

function DreamMasterPvpQuizView:DreamPvp_GuessInfoNotify()

end

-- 改变阵容
function DreamMasterPvpQuizView:showChangeSquad(type)
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	local stage = model.pVPIndex
	local stageStr = DreamMasterPvpModel:getPresentStageImgURL()
	self.img_stageNum:setURL(stageStr)
	local countdown = DreamMasterPvpModel.stateEndTimeMs and DreamMasterPvpModel.stateEndTimeMs/1000 or 0
	self:showCountDown(self.txt_statusTitle,self.txt_daojishi, countdown)
	--self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(DreamMasterPvpModel.myGuessInfo.dreamPvpScore))

	local leftplayerItem = ModelManager.PlayerModel
	self.leftplayername:setText(leftplayerItem.username)
	self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
	local leftplayId = ModelManager.PlayerModel.userid
	local leftserverId = math.tointeger(LoginModel:getLoginServerInfo().unit_server)
	self:setPlayerInfoBtn(leftplayId, leftserverId, 1)
	
	local isOpenBtn = model:isOpenGuanjunSai()
	if isOpenBtn then
		self.txt_group:setText("")
	else
		if model.joinBattleInfo and model.joinBattleInfo.groupId then
			self.txt_group:setText(string.format(Desc.WorldChallenge_str8, model.joinBattleInfo.groupId))
		else
			self.txt_group:setText(string.format(Desc.WorldChallenge_str8, "1"))
		end
	end
	if DreamMasterPvpModel.battlePos == false then
		self.txt_stateTxt:setText(Desc.DreamMasterPvp_out)
	else
		self.txt_stateTxt:setText(DreamMasterPvpModel:getStatTex(DreamMasterPvpModel.playerMap[PlayerModel.userid].pos))
	end

	local rigthplayerItem = model:getOpponentInfo()
	printTable(31, "wwwwww2222222222222", rigthplayerItem)
	if rigthplayerItem then
		self.rigthplayername:setText(rigthplayerItem.name)
		self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
		self:setPlayerInfoBtn(rigthplayerItem.playerId, rigthplayerItem.serverId, 2)
		if rigthplayerItem.playerId > 0 then
			self.c2:setSelectedIndex(0)
			self:getBattleArr(rigthplayerItem.playerId, rigthplayerItem.serverId,function(arrayRight)
				--local arrayLeft = self:getGuessArr(leftPlayer)
				self:showModel(arrayRight, 2)
				local rightPower = self:getFightIngPower(arrayRight)
				self.rigthplayer_power:setText(StringUtil.transValue(rightPower))
			end)
		else
			self.c2:setSelectedIndex(1)
		end

		

	else
		if type == 0 then
			RollTips.show(Desc.WorldChallenge_str12)
		end
		self.c2:setSelectedIndex(1)
	end

	self:changeTeamShow()

end


function DreamMasterPvpQuizView:dreamMaster_playZengsong()
	print(33,"dreamMaster_playZengsong")
	if self._args.quiz ~= 0 then return end
	if DreamMasterPvpModel.state  ~= GameDef.DreamPvpState.Pre then return end
	Scheduler.scheduleOnce(0.1,function()
		if tolua.isnull(self.zengsong) then return end
		
		self.zengsong:play(function()end)
		
	end)
end

-- 改变调整阵容下队伍显示
function DreamMasterPvpQuizView:changeTeamShow()
	self:getBattleArr(PlayerModel.userid, nil,function(arrayRight)
		--local arrayLeft = self:getGuessArr(leftPlayer)
		self:showModel(arrayRight, 1)
		local myfight = self:getFightIngPower(arrayRight)
		self.leftplayer_power:setText(StringUtil.transValue(myfight))
	end)
end

function DreamMasterPvpQuizView:showSquadWin(type)
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	if not model.dreamPvpState == 0 then return end
	
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	local countdown = DreamMasterPvpModel.stateEndTimeMs and DreamMasterPvpModel.stateEndTimeMs/1000 or 0
	self:showCountDown(self.txt_statusTitle,self.txt_daojishi, countdown)
	self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(DreamMasterPvpModel.myGuessInfo.dreamPvpScore))
	
	if type == true then
		self.c1:setSelectedIndex(3)
	else
		self.c1:setSelectedIndex(4)
	end
	
	local guessInfo = model:getLastGuessing()
	if not guessInfo then return end
	printTable(31, "打印的竞猜数据", guessInfo)
	local t_guessInfo = {}
	for k,v in pairs(guessInfo) do
		table.insert(t_guessInfo,v)
	end

	local leftPlayer = t_guessInfo[1]
	local rigthPlayer = t_guessInfo[2]


	local leftplayerItem = model.playerList[leftPlayer.pos]
	self.leftplayername:setText(leftplayerItem.name)
	self.leftplayerLv:setText("Lv." .. leftplayerItem.level)
	self:setPlayerInfoBtn(leftplayerItem.playerId, leftplayerItem.serverId, 1)
	local rigthplayerItem = model.playerList[rigthPlayer.pos]
	if rigthplayerItem.name ~= nil then
		self.rigthplayername:setText(rigthplayerItem.name)
	end
	-- if not leftPlayer or not leftPlayer.heroInfo then
	--     leftPlayer = {heroInfo = {}}
	-- end
	if rigthplayerItem.level ~= nil then
		self.rigthplayerLv:setText("Lv." .. rigthplayerItem.level)
		self:setPlayerInfoBtn(rigthplayerItem.playerId, rigthplayerItem.serverId, 2)
	end
	printTable(30, "sadfffff", rigthplayerItem)

	self.leftplayerItem = leftplayerItem
	self.rigthplayerItem = rigthplayerItem
	
	self.txt_stateTxt:setText(DreamMasterPvpModel:getStatTex(rigthplayerItem.pos))
	-- 左边队伍
	self:getBattleArr(leftplayerItem.playerId, leftplayerItem.serverId,function(arrayLeft)
		--local arrayLeft = self:getGuessArr(leftPlayer)
		self:showModel(arrayLeft, 1)
		local leftPower = self:getFightIngPower(arrayLeft)
		self.leftplayer_power:setText(leftPower)
	end)
	
	-- 右边队伍
	self:getBattleArr(rigthplayerItem.playerId, rigthplayerItem.serverId,function(arrayRight)
		--local arrayRight = self:getGuessArr(rigthPlayer)
		-- local haveArray = not arrayRight.heroInfo and not rigthPlayer.battleArrayInfo
		-- if not rigthPlayer and haveArray then
		-- 	self.c2:setSelectedIndex(1)
		-- elseif rigthPlayer and haveArray and rigthplayerItem.name ~= nil then
		-- 	self.c2:setSelectedIndex(2)
		-- else
		-- 	self.c2:setSelectedIndex(0)
		-- 	self:showModel(arrayRight, 2)
		-- end
		self.c2:setSelectedIndex(0)
		self:showModel(arrayRight, 2)
		local rightPower = self:getFightIngPower(arrayRight)
		self.rigthplayer_power:setText(StringUtil.transValue(rightPower))
	end)
	
	

	self.txt_myScore:setText(Desc.DreamMasterPvp_myScore:format(DreamMasterPvpModel.myGuessInfo.dreamPvpScore))
	local leftNum = 0
	local rightNum = 0
	for k,v in pairs(DreamMasterPvpModel.lastGuessInfo.guessInfoMap) do
		if self.leftplayerItem.pos == v.pos then
			leftNum = v.count
		elseif self.rigthplayerItem.pos == v.pos then
			rightNum = v.count
		end
	end
	local allNum = rightNum + leftNum
	if allNum <=0 then
		allNum = 100
	end
	local leftSuppNum = math.floor(100*leftNum / allNum)
	local rightSuppNum = 100 - leftSuppNum
	self.txt_leftzhici:setText(leftSuppNum .. "%")
	self.txt_rigthzhici:setText(rightSuppNum .. "%")
	
	if self.leftplayerItem and DreamMasterPvpModel.lastGuessInfo and DreamMasterPvpModel.lastGuessInfo.posWin == self.leftplayerItem.pos then
		if type == true then
			self.c3:setSelectedIndex(0)
		else
			self.c3:setSelectedIndex(1)
		end
	else
		if type == true then
			self.c3:setSelectedIndex(1)
		else
			self.c3:setSelectedIndex(0)
		end
	end
end

function DreamMasterPvpQuizView:showModel(leftPlayer, isleft)
	if not leftPlayer.heroInfo then
		return
	end
	local hasRePlace = false
	local leftReplaceArr = {}
	local rightReplaceArr = {}
	for seatId, heroInfo in pairs(leftPlayer.heroInfo) do
		if self:getSeatType(seatId) == "replace" then --替补位
			hasRePlace = true
			if isleft == 1 then
				table.insert(leftReplaceArr, heroInfo)
			else
				table.insert(rightReplaceArr, heroInfo)
			end
		end
	end

	local function cmpp(a,b)  
		return tonumber(a.id) < tonumber(b.id)
	end

	if isleft == 1 then
		self.playerSubList:setVisible(hasRePlace)
		table.sort(leftReplaceArr,cmpp)
		self:showReplaceItem(self.playerSubList, leftReplaceArr)
	else
		table.sort(rightReplaceArr,cmpp)
		self.enemySubList:setVisible(hasRePlace)
		self:showReplaceItem(self.enemySubList, rightReplaceArr)
	end
	for i = 1, 6, 1 do
		local pos = self.posInfo[i]
		if not leftPlayer.heroInfo then
			break
		end
		local modeitemInfo = leftPlayer.heroInfo[pos]
		local modeKey = "model_" .. pos
		local aniKey = "1_" .. pos
		if isleft == 2 then
			modeKey = "rigthmodel_" .. pos
			aniKey = "2_" .. pos
			printTable(29, "wwwwwwwwwwwwwwwwwwww", modeitemInfo, pos)
		end
		local item = self.view:getChildAutoType(modeKey)
		local com_mode = item:getChildAutoType("com_mode")
		local img_type = item:getChildAutoType("img_type")
		local txt_level = item:getChildAutoType("txt_level")
		if not modeitemInfo then
			item:setVisible(false)
		else
			item:setVisible(true)
			local configItem = DynamicConfigData.t_hero[modeitemInfo.code]
			local modeId = configItem.model
			local skeletonNode = SpineMnange.createSprineById(modeId)
			if not skeletonNode then
				LuaLogE(DescAuto[105] .. modeId) -- [105]="无当前spine"
				break
			end
			if i == 1 then
				printTable(13, ">>>>>>>>>>>??", modeId, skeletonNode, com_mode)
			end
			com_mode:displayObject():addChild(skeletonNode)
			skeletonNode:setAnimation(0, "stand", true)
			if isleft == 2 then
				skeletonNode:setScaleX(-1)
			end
			if self.skeletonNode[aniKey] then
				self.skeletonNode[aniKey]:removeFromParent()
			end
			self.skeletonNode[aniKey] = skeletonNode
			img_type:setURL(PathConfiger.getCardCategory(configItem.category))
			txt_level:setText(modeitemInfo.level .. Desc.itemtips_level2)
		end
	end
end

function DreamMasterPvpQuizView:getFightIngPower(leftPlayer)
	local power = 0
	if not leftPlayer.heroInfo then
		return power
	end
	for seatId, heroInfo in pairs(leftPlayer.heroInfo) do
		power = power + heroInfo.combat
	end
	return power
end

function DreamMasterPvpQuizView:showReplaceItem(list, hero)
	list:setItemRenderer(
		function(index, obj)
			local heroInfo = hero[index + 1]
			if not heroInfo then
				return
			end
			local heroId = heroInfo.code
			local configInfo = DynamicConfigData.t_hero[heroId]
			if not configInfo then
				return
			end
			local SubItem = BindManager.bindSubItem(obj)
			SubItem:initItemCell(heroId, heroInfo.star, heroInfo.level,nil, heroInfo.fashionId, heroInfo.uniqueWeaponLevel)
			-- local controller = obj:getController("state")
			-- controller:setSelectedIndex(1)
			-- local frame = obj:getChildAutoType("frame")
			-- frame:setURL(PathConfiger.getHeroFrame(heroInfo.star))
			-- local camp = obj:getChildAutoType("camp")
			-- camp:setURL(PathConfiger.getCardCategory(configInfo.category))
			-- local level = obj:getChildAutoType("level")
			-- level:setText(heroInfo.level .. "级")
			-- local img_quality = obj:getChildAutoType("img_quality")
			-- img_quality:setURL(PathConfiger.getHeroFrameLine(heroInfo.star))
			-- local starList = obj:getChildAutoType("starList")
			-- local cardStar = BindManager.bindCardStar(starList)
			-- cardStar:setData(heroInfo.star)
			-- local icon = obj:getChildAutoType("heroicon")
			--  --正常上阵英雄
			-- icon:setURL(PathConfiger.getHeroOfMonsterIcon(heroId))
		end
	)
	list:setNumItems(#hero)
end

function DreamMasterPvpQuizView:dreamMaster_updateState()
	local countdown = DreamMasterPvpModel.stateEndTimeMs/1000
	self:showCountDown(self.txt_statusTitle,self.txt_daojishi, countdown)
end

function DreamMasterPvpQuizView:showCountDown(txt_statusTitle,txt_countdown, serverTime)
	local model = DreamMasterPvpModel:getModelByType(self.mode)
	local stage = DreamMasterPvpModel.status
	local actState = DreamMasterPvpModel.pVPIndex
	printTable(33, "打印的倒计时.........1", stage, actState)
	if actState == GameDef.DreamPvpIndex.Seven or stage == GameDef.DreamMasterPvpActivityStatus.AllEnd then
		txt_countdown:setText(Desc.DreamMasterPvp_allend)
		txt_statusTitle:setVisible(false)
		return
	end
	txt_statusTitle:setVisible(true)
	if DreamMasterPvpModel.state == GameDef.DreamPvpState.Pre then
		txt_statusTitle:setText(Desc.DreamMasterPvp_ready)
	elseif DreamMasterPvpModel.state == GameDef.DreamPvpState.Lock then
		txt_statusTitle:setText(Desc.DreamMasterPvp_lock)
	elseif DreamMasterPvpModel.state == GameDef.DreamPvpState.Fight then
		txt_statusTitle:setText(Desc.DreamMasterPvp_battle)
	end
	
	local curServerTime = ServerTimeModel:getServerTime()
	local addtime = serverTime - curServerTime


	if (stage == GameDef.DreamMasterPvpActivityStatus.ReadyOne or stage == GameDef.DreamMasterPvpActivityStatus.ReadyTwo or 
		stage == GameDef.DreamMasterPvpActivityStatus.ReadyThree or stage == GameDef.DreamMasterPvpActivityStatus.ReadyFour) and  actState == 1 then
		addtime = DreamMasterPvpModel.nextSec - (curServerTime - DreamMasterPvpModel.nextSecServerTime)
	end

	if addtime > 0 then
		txt_countdown:setText(TimeLib.GetTimeFormatDay(addtime, 2))
		local function onCountDown(time)
			txt_countdown:setText(TimeLib.formatTime(time, 2))
		end
		local function onEnd(...)
			txt_countdown:setText(Desc.DreamMasterPvp_allend)
		end
		if self.calltimer then
			TimeLib.clearCountDown(self.calltimer)
		end
		self.calltimer = TimeLib.newCountDown(addtime, onCountDown, onEnd, false, false, false)
	else
		txt_countdown:setText(Desc.DreamMasterPvp_allend)
	end
end

--根据座位id 获取座位类型
function DreamMasterPvpQuizView:getSeatType(id)
	for typeKey, typeList in pairs(ModelManager.BattleModel.SeatType) do
		for k, ranges in ipairs(typeList) do
			for seatId = ranges[1], ranges[2] do
				if seatId == id then
					return typeKey
				end
			end
		end
	end
	return ""
end

function DreamMasterPvpQuizView:_initEvent()
	self.btn_lineup:addClickListener(
		function(context)
			local model = DreamMasterPvpModel:getModelByType(self.mode)
			if model:isCanBattleArray() == true then
				local playerId = 0
				--ModelManager.PlayerModel.userid
				local rigthplayerItem = model:getOpponentInfo()
				printTable(31, "wwwwww2222222222222", rigthplayerItem)
				if rigthplayerItem and next(rigthplayerItem) ~= nil then
					playerId = rigthplayerItem.playerId
				end
				self:beginChallenge(playerId)
			else
				RollTips.show(Desc.DreamMasterPvp_nochange)
			end
		end
	)
	self.btn_record:addClickListener(
		function(context)
			local model = DreamMasterPvpModel:getModelByType(self.mode)
			local recordId = model:getshangGuessingRecordId()
			if recordId ~= false then
				model:seeCombatlog(recordId, GameDef.GamePlayType.DreamPvp)
			else
				RollTips.show(Desc.WorldChallenge_str14)
			end
		end
	)
	self.list_team:addClickListener(function()
			self.curTeamType = self.list_team:getSelectedIndex() + 1
			if self._args.quiz == 0 then --竞猜开始
				self:showquizIng()
			elseif self._args.quiz == 2 then --调整阵容
				--0界面打开1刷新
				self:showChangeSquad(1)
			elseif self._args.quiz == 3 then --竞猜成功
				self:showSquadWin(true)
			elseif self._args.quiz == 4 then --竞猜失败
				self:showSquadWin(false)
			end
		end)
end

function DreamMasterPvpQuizView:worldChallenge_dianjijincai() --点击竞猜刷新
	self:showquizIng()
end

function DreamMasterPvpQuizView:squadtomodify_change() --点击修改阵容刷新
	self:showChangeSquad(1)
end

function DreamMasterPvpQuizView:worldChallenge_dianjiwodebisaixiugaizhenrong() --点击修改阵容刷新
	self:showChangeSquad(1)
end

--开始挑战
function DreamMasterPvpQuizView:beginChallenge(playerId)
	local function battleHandler(eventName)
		if eventName == "begin" then
			ViewManager.close("BattlePrepareView")
		elseif eventName == "end" then
		end
	end
	local arrayType = GameDef.BattleArrayType.DreamPvp
	local configInfo=DynamicConfigData.t_DreamMasterPvpConst[1];
	Dispatcher.dispatchEvent(
		EventType.battle_requestFunc,
		battleHandler,
		{fightID = configInfo.fightId, configType = arrayType, playerId = playerId}
	)
end

function DreamMasterPvpQuizView:getGuessArr(info)
	if (info.heroInfo) then
		return info
	end
	local arrInfo = {}
	if (self.mode == 1 and info.battleArrayInfo) then
		arrInfo = info.battleArrayInfo[self.curTeamType + 3000] or {}
	end
	return {
		heroInfo = arrInfo.posInfo or {},
	}
end

function DreamMasterPvpQuizView:_exit()
	if self.calltimer then
		TimeLib.clearCountDown(self.calltimer)
	end
	self.calltimer = false

	if DreamMasterPvpModel.state  == GameDef.DreamPvpState.Pre  and (self._args.quiz == 3 or self._args.quiz == 4) then
		Dispatcher.dispatchEvent("dreamMaster_playZengsong")
	end
end

return DreamMasterPvpQuizView
