--Date :2020-11-23
--Author : generated by FairyGUI
--Desc : 

local DreamMasterPvpController = class("DreamMasterPvp",Controller)

function DreamMasterPvpController:init()
	
end


function DreamMasterPvpController:Activity_UpdateData(_, params)
	if params.type == GameDef.ActivityType.DreamMasterPvp then
		
		DreamMasterPvpModel:initData(params.dreamMasterPvp)
		Dispatcher.dispatchEvent("dreamMaster_updateButton")
		Dispatcher.dispatchEvent(EventType.worldChallenge_jingcaiRedUp)   
	end
end

function DreamMasterPvpController:DreamPvp_StateNotifyInfo(_, params)
	printTable(33,"PDreamPvp_StateNotifyInfo",params)
	DreamMasterPvpModel.state = params.state or 0
	DreamMasterPvpModel.stateEndTimeMs = params.stateEndTimeMs or 0
	DreamMasterPvpModel.curGuessRecordId = params.recordId or false

	if DreamMasterPvpModel.curGuessRecordId then
		Dispatcher.dispatchEvent("dreamMaster_updateGuess",true)
	end
	Dispatcher.dispatchEvent("dreamMaster_updateState")
	Dispatcher.dispatchEvent("dreamMaster_wodebisaianniu")
	if DreamMasterPvpModel.state  == GameDef.DreamPvpState.Pre then
		Dispatcher.dispatchEvent("dreamMaster_playZengsong")
	end
end

function DreamMasterPvpController:DreamPvp_PVPIndexNotifyInfo(_, params)
	printTable(33,"PDreamPvp_PVPIndexNotifyInfo",params)
	DreamMasterPvpModel.lastGuessInfo = params
	DreamMasterPvpModel:resetMymatchRed()
	if DreamMasterPvpModel.curData and DreamMasterPvpModel.curData.nodeId == 1 and params.pVPIndex == GameDef.DreamPvpIndex.Seven then
		DreamMasterPvpModel:getPlayersInfo(1)
	else
		DreamMasterPvpModel:getPlayersInfo()
	end
end

function DreamMasterPvpController:DreamPvp_GuessInfoNotify(_, params)
	printTable(33,"DreamPvp_GuessInfoNotify",params)
	DreamMasterPvpModel.guessInfoMap = params.guessInfoMap or false
	Dispatcher.dispatchEvent("dreamMaster_updateGuess")
end

function DreamMasterPvpController:DreamPvp_ArrayInfoNotify(_, params)
	printTable(33,"DreamPvp_ArrayInfoNotify",params)
	
	Dispatcher.dispatchEvent("dreamMaster_updateGuess")
end

return DreamMasterPvpController