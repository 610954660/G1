--Date :2020-11-23
--Author : generated by FairyGUI
--Desc : 

local DreamMasterPvpModel = class("DreamMasterPvpModel", BaseModel)

local isFirst = true
local isFirst2 = true
function DreamMasterPvpModel:ctor()
	self.ItemPos = {
		"3_1",
		"3_2",
		"3_3",
		"3_4",
		"3_5",
		"3_6",
		"3_7",
		"3_8",
		"2_1",
		"2_2",
		"2_3",
		"2_4",
		"1_1",
		"1_2",
		"0_1"
	}
	self.LinePos = {"2_1", "2_2", "2_3", "2_4", "1_1", "1_2", "1_3", "1_4", "0_1"}
	self.WorldChallengeGuessRed = {}
	self.hasChange = false
	self.WorldChallengeActiveTime = {}
	self.playerMap = {}
	self.WorldChallenInfo = {}
	self.Winner= {}
	self.guessInfo = {}
	--竞猜信息
	self.HonourInfo = {}
	--名人堂信息
	self.joinBattleInfo = {}
	--擂台赛我的对手信息
	--擂台赛首次登陆
	self.WorldChallenFirstLogin={}
	--擂台赛竞猜红点
	self.WorldChallenJingCaiRed=false
	self.matchMode = 0 -- 0 竞技场模式  1 天境赛模式  只读 --根据消息WorldArena_StateNotify确定
	self.timer = false
	self.txtComp = false
	self.status = 1    --活动阶段 DreamMasterPvpActivityStatus
	self.nextSec = false --下一阶段的时间
	self.nextSecServerTime = 0
	self.state = false  -- 比赛阶段状态1 DreamPvpState
	self.pVPIndex = 0   --比赛阶段状态2 DreamPvpIndex
	self.stateEndTimeMs = 0  --比赛阶段状态 结束时间

	self.playerList = {}
	self.guessInfoMap = false

	self.myGuessInfo = false

	self.curDreamNum = 1

	self.oldData = {}
	self.curData = false
	self.battlePos = false

	self.dreamPvpState = 0
	self.lastGuessInfo = false
	self.curGuessRecordId = false
	self.isToday = false
end

function DreamMasterPvpModel:init()
	
end

function DreamMasterPvpModel:resetMymatchRed()
	xpcall(function()
		FileCacheManager.setStringForKey("DreamMasterPvp_mymatch", "1", nil, false)
	end, __G__TRACKBACK__)
	
end

function DreamMasterPvpModel:setMymatchFirstRed()
	xpcall(function()
		local curDay = tostring(DateUtil.getOppostieDays()) 
		FileCacheManager.setStringForKey("DreamMasterPvp_mymatch", curDay, nil, false)
	end, __G__TRACKBACK__)
end

function DreamMasterPvpModel:setDayFirstRed()
	xpcall(function()
		local curDay = tostring(DateUtil.getOppostieDays()) 
		FileCacheManager.setStringForKey("DreamMasterPvp_date", curDay, nil, false)
	end, __G__TRACKBACK__)
end


function DreamMasterPvpModel:setFirstLoginState(key)
	self.WorldChallenFirstLogin[key]=true
end

function DreamMasterPvpModel:getFirstLoginState(key)
	if self.WorldChallenFirstLogin[key]==nil then
		return false
	end
	return self.WorldChallenFirstLogin[key]
end

function DreamMasterPvpModel:getWorldChallengeShouzhiAnim(com, pos)
	local animation = false
	if not pos then
		pos = Vector2.zero
	end
	animation =
	SpineUtil.createSpineObj(
		com,
		{x = 0, y = 0},
		"ui_dianzan_loop",
		"Effect/UI",
		"efx_sijieleitaisai",
		"efx_sijieleitaisai",
		false
	)
	animation:setAnimation(0, "ui_dianzan_loop", true)
	return animation
end

function DreamMasterPvpModel:getWorldChallengeXiantiaoAnim(com, Tag, pos) --线条动效
	local animation = false
	if not pos then
		pos = Vector2.zero
	end
	local str = "ui_lianxian8_1_loop"
	if Tag == 1 then
		str = "ui_lianxian8_1_loop"
	elseif Tag == 2 then
		str = "ui_lianxian4_1_loop"
	elseif Tag == 3 then
		str = "ui_lianxian2_1_loop"
	end
	animation =
	SpineUtil.createSpineObj(
		com,
		{x = 0, y = 0},
		str,
		"Effect/UI",
		"efx_sijieleitaisai",
		"efx_sijieleitaisai",
		false
	)
	animation:setAnimation(0, str, true)
	return animation
end

function DreamMasterPvpModel:getWorldChallengeXiantiao(groupId, lineId, modeType)

	local isActive = self:isActiveIng()
	--在活动中
	if isActive == true then
		local xianArr, tagId = self:getXiantiaobyStage(self.pVPIndex)
		if table.indexof(xianArr, lineId) ~= false then
			if groupId == 0 and tagId == 0 then
				return true
			elseif groupId ~= 0 and tagId ~= 0 then
				return true
			end
		end
	end
	return false
	-- return true
end

function DreamMasterPvpModel:getXiantiaobyStage(stage)
	local xiantiaoArr = {}
	local tagId = 0
	if stage == GameDef.DreamPvpIndex.One then
		xiantiaoArr = {"2_1", "2_2", "2_3", "2_4"}
		tagId = 1
	elseif stage == GameDef.DreamPvpIndex.Two then
		xiantiaoArr = {"1_1", "1_2", "1_3", "1_4"}
		tagId = 1
	elseif stage == GameDef.DreamPvpIndex.Three then
		xiantiaoArr = {"0_1"}
		tagId = 1
	elseif stage == GameDef.DreamPvpIndex.Four then
		xiantiaoArr = {"2_1", "2_2", "2_3", "2_4"}
		tagId = 0
	elseif stage == GameDef.DreamPvpIndex.Five then
		xiantiaoArr = {"1_1", "1_2", "1_3", "1_4"}
		tagId = 0
	elseif stage == GameDef.DreamPvpIndex.Six then
		xiantiaoArr = {"0_1"}
		tagId = 0
	end
	return xiantiaoArr, tagId
end

function DreamMasterPvpModel:getXiantiaobyStageAnim(com, modeType)

	local stage = self.pVPIndex
	local ani = false
	if stage == GameDef.DreamPvpIndex.One or stage == GameDef.DreamPvpIndex.Four then
		ani = self:getWorldChallengeXiantiaoAnim(com, 1)
	elseif stage == GameDef.DreamPvpIndex.Two or stage == GameDef.DreamPvpIndex.Five then
		ani = self:getWorldChallengeXiantiaoAnim(com, 2)
	elseif stage == GameDef.DreamPvpIndex.Three or stage == GameDef.DreamPvpIndex.Six then
		ani = self:getWorldChallengeXiantiaoAnim(com, 3)
	end
	return ani
end

-- End = 0,--结束阶段
-- 	Prepare = 1,--准备阶段可以竞猜和可以调整阵容
-- 	Wait = 2,--等待阶段可以竞猜不能调整阵容
-- 	Battle = 3,--战斗阶段不能竞猜和调整阵容
-- assignId                    1:integer       #跨服分组id
-- stage                       2:integer       #活动阶段
-- actState                    3:integer       #当前活动状态
-- nextBattleStamp             4:integer       #下一次战斗时间戳(如果活动状态是已结束或者是战斗状态, 则忽略吧)

-- promotionGroupInfo          5:*WorldArena_GroupInfo(groupId)    #晋级赛小组数据
-- finalsInfo                  6:WorldArena_MatchInfo              #决赛数据
-- battlePlayerInfo            7:*WorldArena_BattlePlayerInfo(playerId)    #对战玩家信息
-- guessInfo                   8:WorldArena_PlayerGuessInfo        #竞猜信息

-- #joinBattleInfo             *:WorldArena_JoinBattleInfo         #我的比赛信息
-- ModelManager.PlayerModel.userid

function DreamMasterPvpModel:getGroupId(stage,pos)
	if stage >3 then return 0 end
	return math.ceil(pos/8)
end


-- function DreamMasterPvpModel:getRecordPos(pos)
-- 	local num = 1
-- 	if stage == GameDef.DreamPvpIndex.One then
-- 		num = 8
-- 	elseif stage == GameDef.DreamPvpIndex.Two then
-- 		num = 4
-- 	elseif stage == GameDef.DreamPvpIndex.Three then
-- 		num = 2
-- 	elseif stage == GameDef.DreamPvpIndex.Four then
-- 		itemKey = 2
-- 	elseif stage == GameDef.DreamPvpIndex.Five then
-- 		itemKey = 1
-- 	elseif stage == GameDef.DreamPvpIndex.Six then
-- 		itemKey = 0
-- 	end
-- end

function DreamMasterPvpModel:setPlayersInfo(params)
	print(33,"setPlayersInfo",params.curNodeId)
	self.WorldChallenInfo = {}
	self.guessInfo = {}
	--printTable(150,"22222222222222",info.guessInfo)
	self.playerMap = {}
	
	self.stateEndTimeMs = params.stateEndTimeMs or 0
	self.myGuessInfo = params.myGuessInfo or {}
	self.battlePos = params.enemyPos or false
	self.curGuessRecordId = params.recordId or false
	self.dreamPvpState = params.dreamPvpState or 0

	local data = params.recordData or {}
	-- if data.pVPIndex and data.pVPIndex > 7 then
	-- 	data.pVPIndex = 7
	-- end
	self.playerList = data.playerList or {}
	self.guessInfoMap = data.guessInfoMap or {}
	self.state = data.state or 1
	self.pVPIndex = data.pVPIndex or 0
	if not params.recordData then return end

	

	local curPos = {{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1},{1,1,1,1,1,1,1}}
	curPos[0] = {1,1,1,1,1,1,1}
	for j =1,#data.playerList do
		local playerInfo = data.playerList[j]
		self.playerMap[playerInfo.playerId] = playerInfo
		for k=1,playerInfo.pVPIndex do
			
			local group = self:getGroupId(k,playerInfo.pos)
			local v3key = self:getPoskey(k, group, curPos[group][k])
			self.WorldChallenInfo[v3key] = playerInfo
			curPos[group][k] = curPos[group][k] + 1
			if k==4 then
				local skey = self:getPoskey(k, math.ceil(playerInfo.pos/8), 1)
				self.WorldChallenInfo[skey] = playerInfo
			end
		end
	end
	
	
	--printTable(155, "打印的竞猜理解士大夫士大夫", info.guessInfo)
	--self.joinBattleInfo = info.joinBattleInfo or {}
	--self:setHasMychallge()

	self.WorldChallenInfo["assignId"] = data.assignId
	self.WorldChallenInfo["stage"] = self.status
	self.WorldChallenInfo["actState"] = data.pVPIndex
	self.WorldChallenInfo["nextBattleStamp"] = data.nextBattleStamp
	
	if (self.dreamPvpState == 1 or  self.dreamPvpState == 2 ) and self.lastGuessInfo then
		print(33,"DreamMasterPvpModel jingcai show res")
		if self.lastGuessInfo.guessInfoMap and data.pVPIndex and self.lastGuessInfo.pVPIndex == data.pVPIndex then
			print(33,"DreamMasterPvpModel jingcai show res222")
			local info = {}
			info.name =  "DreamMasterPvpQuizView" .. UIDUtil:getUID()
			info.mode = self.mode
			info.className = "DreamMasterPvpQuizView" 

			if self.pVPIndex  == GameDef.DreamPvpIndex.Seven then
				ViewManager.close("DreamMasterPvpQuizView")
			end

			if self.dreamPvpState == 1 then
				--竞猜成功
				local configInfo=DynamicConfigData.t_DreamMasterPvpConst[1];
				info.quiz = 3
				ViewManager.open(info.name , info)
				local ssparams = {}
				ssparams.reward = {{type=3,code=configInfo.pointId,amount=params.dreamPvpWinScore}}
				ssparams.type = GameDef.GamePlayType.DreamPvp
				PlayerModel:set_awardData(ssparams)
				Scheduler.scheduleOnce(1,function()
					Dispatcher.dispatchEvent(EventType.show_gameReward, {gamePlayType = ssparams.type})
					end)
			else
				--竞猜失败
				info.quiz = 4
				ViewManager.open(info.name , info)
			end

			self.dreamPvpState = 0
			if self.oldData then self.oldData.dreamPvpState = 0 end	
			if self.curData then self.curData.dreamPvpState = 0 end	

		end
		
	end
	self:checkRed()
--	printTable(33, "self.WorldChallenInfo", self.WorldChallenInfo)
end

function DreamMasterPvpModel:setHasMychallge()
	local has = false
	if next(self.joinBattleInfo) ~= nil then
		has = true
	end
	self.hasChange = has
end

function DreamMasterPvpModel:getPoskey(stage, groupId, pos)
	local itemKey = 3
	if groupId == 0 then
		itemKey = 7-stage
	else
		itemKey = 4-stage
	end
	
	local key = groupId .. "_" .. itemKey .. "_" .. pos
	return key
end

function DreamMasterPvpModel:getPlayerItem(groupId, itemKey)
	local tag = 0 --0空白
	if not self.WorldChallenInfo then
		return tag
	end
	local arr = string.split(itemKey, "_")
	local key = tonumber(arr[1])
	local pos = tonumber(arr[2])
	local nextKey = self:getNextKey(key, pos)
	if itemKey == "2_4" then
		printTable(31, "qqqqqqqqqqwerrrrrrrrrrrr", arr)
	end
	local infoKey = groupId .. "_" .. itemKey
	local nextinfoKey = groupId .. "_" .. nextKey
	local itemInfo = self.WorldChallenInfo[infoKey]
	if not itemInfo then
		tag = 0
	else
		local nextArr1 = {"2_1", "1_1", "0_1"}
		local nextArr2 = {"2_2", "1_1", "0_1"}
		local nextArr3 = {"2_3", "1_2", "0_1"}
		local nextArr4 = {"2_4", "1_2", "0_1"}
		local winner = 0
		if table.indexof(nextArr1, nextKey) ~= false then
			local pos=table.indexof(nextArr1, nextKey)
			winner = self:getPlayerWiner(groupId, nextArr1,pos)
		elseif table.indexof(nextArr2, nextKey) ~= false then
			local pos=table.indexof(nextArr2, nextKey)
			winner = self:getPlayerWiner(groupId, nextArr2,pos)
		elseif table.indexof(nextArr3, nextKey) ~= false then
			local pos=table.indexof(nextArr3, nextKey)
			winner = self:getPlayerWiner(groupId, nextArr3,pos)
		elseif table.indexof(nextArr4, nextKey) ~= false then
			local pos=table.indexof(nextArr4, nextKey)
			winner = self:getPlayerWiner(groupId, nextArr4,pos)
		end
		if winner==0 then
			tag = 3
		elseif winner~=0 and itemInfo.playerId~=winner then
			tag = 2
		else
			tag = 3
		end
	end
	return tag
end

function DreamMasterPvpModel:getPlayerWiner(groupId, nextArr1,pos)
	local winner = 0
	for i = 1, #nextArr1, 1 do
		if i>=pos then
			local nextinfoKey = groupId .. "_" .. nextArr1[i]
			local nextInfo = self.WorldChallenInfo[nextinfoKey]
			if nextInfo then
				winner = nextInfo.playerId
			end
		end
	end
	return winner
end

function DreamMasterPvpModel:getNextKey(key, pos)
	local nextSatge = key - 1
	local nextPos = 1
	nextPos = math.ceil(pos / 2)
	return nextSatge .. "_" .. nextPos
end

function DreamMasterPvpModel:getLineBarState(groupId, lineId)
	if lineId == "0_1" then
		print(33,"groupId, lineId",groupId, lineId)
	end
	local arr = string.split(lineId, "_")
	local key = tonumber(arr[1])
	local pos = tonumber(arr[2])
	local oldKey = 1
	local oldPosshang = 1
	local oldPosXia = 2
	local isshuang = false
	local curKey = groupId .. "_" .. lineId
	if key == 2 then
		oldPosshang = pos * 2 - 1
		oldPosXia = pos * 2
		isshuang = true
	elseif key == 1 and pos >= 1 and pos <= 2 then
		oldPosshang = 1
		oldPosXia = 2
		curKey = groupId .. "_1_1"
	elseif key == 1 and pos >= 3 and pos <= 4 then
		oldPosshang = 3
		oldPosXia = 4
		curKey = groupId .. "_1_2"
	elseif key == 0 then
		oldPosshang = pos * 2 - 1
		oldPosXia = pos * 2
	end
	oldKey = key + 1
	local shangItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosshang
	local xiaItemkey = groupId .. "_" .. oldKey .. "_" .. oldPosXia
	local curItem = self.WorldChallenInfo[curKey]
	if lineId == "1_2" then
		-- printTable(31, "111111111", curKey, shangItemkey, xiaItemkey, curItem)
	end
	local shangItem = self.WorldChallenInfo[shangItemkey]
	local xiaItem = self.WorldChallenInfo[xiaItemkey]
	if not curItem then
		return false
	end
	if isshuang and pos <= 2 then
		if curItem and shangItem and curItem.playerId == shangItem.playerId then
			return 1
		end
		if curItem and xiaItem and curItem.playerId == xiaItem.playerId then
			return 2
		end
	elseif isshuang and pos >= 2 and pos <= 4 then
		if curItem and shangItem and curItem.playerId == shangItem.playerId then
			return 2
		end
		if curItem and xiaItem and curItem.playerId == xiaItem.playerId then
			return 1
		end
	else
		if curItem and xiaItem and shangItem and key == 0 and pos == 1 then --最后一个
			if curItem and shangItem and curItem.playerId == shangItem.playerId then
				return 3
			end
			if curItem and xiaItem and curItem.playerId == xiaItem.playerId then
				return 4
			end
		end

		if curItem and shangItem and curItem.playerId == shangItem.playerId and pos % 2 ~= 0 then
			return true
		end
		if curItem and xiaItem and curItem.playerId == xiaItem.playerId and pos % 2 == 0 then
			return true
		end
		
	end
	return false
end

function DreamMasterPvpModel:getHasOpen()
	local isOpen = true
	-- if self.WorldChallenInfo.actState and self.WorldChallenInfo.actState == 4 then
	-- 	isOpen = false
	-- end
	return isOpen
end

function DreamMasterPvpModel:getPresentStageImgURL(stage) --# stage 比赛阶段  1决赛, 2 半决赛, 3 8强进4赛, 4 16强进8赛, 5 32强进16赛, 6 64强进32赛
	local stage = stage or self.pVPIndex
	local imgId = 32
	if stage == 1 then
		imgId = 32
	elseif stage == 2 then
		imgId = 16
	elseif stage == 3 then
		imgId = 8
	elseif stage == 4 then
		imgId = 4
	elseif stage == 5 then
		imgId = 2
	elseif stage == 6 then
		imgId = 1
	elseif stage == 7 then
		imgId = 1
	end
	return "UI/WorldChallenge/worldchallengeyisuzi" .. imgId .. ".png "
end

function DreamMasterPvpModel:getStatTex(pos) --# stage 比赛阶段  1决赛, 2 半决赛, 3 8强进4赛, 4 16强进8赛, 5 32强进16赛, 6 64强进32赛
	local stage = self.pVPIndex
	if stage == 1 then
		return Desc.DreamMasterPvp_stateTxt1:format("32")..Desc.DreamMasterPvp_stateTxt2:format(self:getGroupId(stage,pos))
	elseif stage == 2 then
		return Desc.DreamMasterPvp_stateTxt1:format("16")..Desc.DreamMasterPvp_stateTxt2:format(self:getGroupId(stage,pos))
	elseif stage == 3 then
		return Desc.DreamMasterPvp_stateTxt1:format("8")..Desc.DreamMasterPvp_stateTxt2:format(self:getGroupId(stage,pos))
	elseif stage == 4 then
		return Desc.DreamMasterPvp_stateTxt4:format("4")
	elseif stage == 5 then
		return Desc.DreamMasterPvp_stateTxt4:format("2")
	elseif stage == 6 then
		return Desc.DreamMasterPvp_stateTxt3
	elseif stage == 7 then
		return Desc.DreamMasterPvp_stateTxt3
	end
end

function DreamMasterPvpModel:getAwardTex() --# stage 比赛阶段  1决赛, 2 半决赛, 3 8强进4赛, 4 16强进8赛, 5 32强进16赛, 6 64强进32赛
	local stage = self.pVPIndex -1
	if stage == 1 then
		return Desc.DreamMasterPvp_stateTxt1:format("32")
	elseif stage == 2 then
		return Desc.DreamMasterPvp_stateTxt1:format("16")
	elseif stage == 3 then
		return Desc.DreamMasterPvp_stateTxt1:format("8")
	elseif stage == 4 then
		return Desc.DreamMasterPvp_stateTxt4:format("4")
	elseif stage == 5 then
		return Desc.DreamMasterPvp_stateTxt4:format("2")
	elseif stage == 6 then
		return Desc.DreamMasterPvp_stateTxt3
	elseif stage == 7 then
		return Desc.DreamMasterPvp_stateTxt3
	end
	return ""
end

function DreamMasterPvpModel:getChallengeText(stage, id) --0晋级赛1冠军赛
	local num = 32
	if stage == 0 then
		if id >= 1 and id <= 8 then
			num = 64
		elseif id >= 9 and id <= 12 then
			num = 32
		elseif id >= 13 and id <= 14 then
			num = 16
		elseif id >= 15 then
			num = 8
		end
	else
		if id >= 1 and id <= 8 then
			num = 8
		elseif id >= 9 and id <= 12 then
			num = 4
		elseif id >= 13 and id <= 14 then
			num = 2
		elseif id >= 15 then
			return GMethodUtil.getSizeString(Desc.WorldChallenge_str9, 28)
		end
	end
	return GMethodUtil.getSizeString(num, 28) .. Desc.WorldChallenge_str10
end

-- function DreamMasterPvpModel:getChallengeIdex() --得到当前的分组
--     local index = self:getGuessinggroupId()
--     local indexTable = {}
--     index = math.min(6, math.max(1, index))
--     table.insert(indexTable, index)
--     table.insert(indexTable, index + 1)
--     table.insert(indexTable, index + 2)
--     return index, indexTable
-- end

function DreamMasterPvpModel:hasGuessingResult() --得到竞猜记录
	if not self.guessInfo then
		return false, nil
	end

	if not self.guessInfo.recordList then
		return false, nil
	end
	local recordList = self.guessInfo.recordList
	printTable(32, "111111111111111111111112222222222", recordList)
	if recordList and recordList[#recordList] and recordList[#recordList].record then
		printTable(32, "11111111111111111111113333333333", recordList[#recordList].record.isRead)
		if recordList[#recordList].record.isRead == false then
			return true, recordList[#recordList].record.result
		else
			return false, nil
		end
	end
	return false, nil
end

function DreamMasterPvpModel:hashuifangRecordId(itemKey) --得到录像id
	local itemPosKey = itemKey
	local has = false
	local recordId = 0
	local playerInfo = self.WorldChallenInfo[itemPosKey]
	--printTable(32,"战斗记录临时设施所所所所所所所所所所所所",itemKey,playerInfo)
	if playerInfo and playerInfo.videoRecords then
		local arr = string.split(itemKey,"_")
		local index = -1
		if arr[1] == "0" then
			if arr[2] == "3" then
				--index = 4
			elseif arr[2] == "2" then
				index = 4
			elseif arr[2] == "1" then
				index = 5
			elseif arr[2] == "0" then
				index = 6
			end
		else
			if arr[2] == "3" then
				--index = 1
			elseif arr[2] == "2" then
				index = 1
			elseif arr[2] == "1" then
				index = 2
			elseif arr[2] == "0" then
				index = 3
			end
		end
		if index > 0 and playerInfo.videoRecords[index] then
			has = true
			recordId = playerInfo.videoRecords[index].recordId
		end
	end
	return has, recordId
end

function DreamMasterPvpModel:hasGuessingRecord() --得到竞猜记录
	if not self.guessInfo then
		return false
	end

	if not self.guessInfo.recordList then
		return false
	end
	if not self.guessInfo.recordList[#self.guessInfo.recordList] then
		return false
	end
	local recordList = self.guessInfo.recordList[#self.guessInfo.recordList]
	return recordList
end

function DreamMasterPvpModel:getshangGuessingRecordId() --上一场竞猜战斗记录id
	if not self.guessInfo then
		return false
	end

	if not self.guessInfo.recordList then
		return false
	end
	if not self.guessInfo.recordList[#self.guessInfo.recordList] then
		return false
	end
	local recordList = self.guessInfo.recordList[#self.guessInfo.recordList]
	local guessInfo1 = recordList.record
	local pos = guessInfo1.pos
	local groupId = guessInfo1.groupId
	local stage = guessInfo1.stage
	local PlayerInfoKey = self:getPoskey(stage, groupId, pos)
	local has, recordId = self:hashuifangRecordId(PlayerInfoKey)
	if has then
		return recordId
	end
	return false
end

function DreamMasterPvpModel:getGuessinggroupId() --得到竞猜分组
	if self.myGuessInfo and self.myGuessInfo.dreamPvpPos then
		return self:getGroupId(self.pVPIndex,self.myGuessInfo.dreamPvpPos) 
	end
	return 0
end

function DreamMasterPvpModel:getGuessinggroupPos() --得到竞猜玩家位置
	local  stage = self.pVPIndex
	if stage == GameDef.DreamPvpIndex.One then
		return 3
	elseif stage == GameDef.DreamPvpIndex.Two then

		return 2
	elseif stage == GameDef.DreamPvpIndex.Three then

		return 1
	elseif stage == GameDef.DreamPvpIndex.Four then

		return 3
	elseif stage == GameDef.DreamPvpIndex.Five then

		return 2
	elseif stage == GameDef.DreamPvpIndex.Six then

		return 1
	end
	return 0
end

function DreamMasterPvpModel:getGuessingPlayer() --得到竞猜玩家id
	local playerId = 0
	if self.guessInfo and self.guessInfo.guessInfo and self.guessInfo.guessInfo.guessInfo then
		playerId = self.guessInfo.guessInfo.guessInfo.playerId
	end
	return playerId
end

function DreamMasterPvpModel:getGuessingTwoPlayer() --得到竞猜2个玩家
	return self.guessInfo.guessInfo.playerInfo
end

function DreamMasterPvpModel:getGuessing() --得到竞猜信息
	return self.guessInfoMap
end

function DreamMasterPvpModel:getLastGuessing() --得到上局竞猜阵容
	return self.lastGuessInfo.guessInfoMap
end

function DreamMasterPvpModel:getCanGuessing() --0活动没开无法竞猜，1活动开了可以竞猜，2活动开了但已经在比赛中无法竞猜
	local can = 0
	local isActive = self:isActiveIng()
	local canGuess = self:isCanGuessIng()
	if isActive == false or not self.guessInfo.guessInfo then
		can = 0
	elseif isActive == true and canGuess == true then
		can = 1
	elseif isActive == true and canGuess == false then
		can = 2
	end
	return can
end

function DreamMasterPvpModel:isActiveIng() --在活动中
	if self.pVPIndex > 0 and self.pVPIndex < 7 then
		return true
	end

	return false
end

function DreamMasterPvpModel:isCanBattleArray() --在比赛中可换阵容
	if self.battlePos == false then
		return false
	end

	if self.status  == GameDef.DreamMasterPvpActivityStatus.AllEnd then
		return false
	end
	if self.state  == GameDef.DreamPvpState.Pre then
		return true
	end
	return false
end

function DreamMasterPvpModel:isCanGuessIng() --在比赛中可竞猜
	local isActive = self:isActiveIng()
	local map = self.WorldChallenInfo
	if not map or not map.actState then
		return false
	end
	if
		isActive and map and map.actState and map.actState == GameDef.WorldArenaActStateType.Prepare or
		map.actState == GameDef.WorldArenaActStateType.Wait
		then
		return true
	end
	return false
end

function DreamMasterPvpModel:getcanChange() --自己是否参赛
	if not self.playerMap[PlayerModel.userid] then return false end
	if self.playerMap[PlayerModel.userid].pVPIndex < self.pVPIndex then return false end
	return true
end

function DreamMasterPvpModel:getOpponentInfo() --擂台赛对手数据
	if not self.battlePos then return false end
	if not self.playerList[self.battlePos] then return false end
	return self.playerList[self.battlePos] 
end

function DreamMasterPvpModel:getMyopponentId() --擂台赛对手id
	if not self.battlePos then return 0 end
	if not self.playerList[self.battlePos] then return 0 end
	return self.playerList[self.battlePos].playerId 
end

function DreamMasterPvpModel:isOpenGuanjunSai()

	if self.pVPIndex >=GameDef.DreamPvpIndex.One and self.pVPIndex <=GameDef.DreamPvpIndex.Three then
		return false
	end

	return true
end


function DreamMasterPvpModel:isShowMainIcon()

	if  self.status == GameDef.DreamMasterPvpActivityStatus.GoingOne or 
		self.status == GameDef.DreamMasterPvpActivityStatus.GoingTwo or 
		self.status == GameDef.DreamMasterPvpActivityStatus.GoingThree or 
		self.status == GameDef.DreamMasterPvpActivityStatus.GoingFour or 
		self.isToday then
		return true
	end

	return false
end

--#获取跨服分组活动信息
function DreamMasterPvpModel:getPlayersInfo(nodeId)

	local info = {}
	
	info.nodeId = 1
	
	
	if self.status < 3 then
		info.nodeId = 1
	elseif self.status < 5 then
		info.nodeId = 2
	elseif self.status < 7 then
		info.nodeId = 3
	else
		info.nodeId = 4
	end
	local curNode = info.nodeId
	if nodeId then
		info.nodeId = nodeId
	end

	printTable(33, "获取跨服分组活动信息", info)
	if self.oldData[info.nodeId] and curNode ~= info.nodeId then
		self:setPlayersInfo(self.oldData[info.nodeId])
		Dispatcher.dispatchEvent(EventType.dreamMaster_updateView)
		return
	end

	local function success(data)
		printTable(33, "获取跨服分组活动信息返回", data)
		if data and data.data then
			self.curData = data.data
			self:setPlayersInfo(data.data)
			self.oldData[info.nodeId] = data.data
		else
			self.WorldChallenInfo = {}
			self.guessInfo = {}
			self.playerMap = {}
			self.joinBattleInfo = {}
			printTable(33, "22222222222222", self.guessInfo)
		end
		Dispatcher.dispatchEvent(EventType.dreamMaster_updateView)
	end
	
	RPCReq.DreamPvp_GetUintInfoEx(info, success)
end


--#竞猜请求
function DreamMasterPvpModel:GuessReq(pos,num)

	if self.status == GameDef.DreamMasterPvpActivityStatus.AllEnd then
		RollTips.show(Desc.DreamMasterPvp_guessEnd)
		return
	end

	if self.state == GameDef.DreamPvpState.Fight then
		RollTips.show(Desc.DreamMasterPvp_guessLock)
		return
	end

	local function success(data)
		printTable(31, "竞猜请求返回", data)
		if data.data then
			self.myGuessInfo = data.data
			RollTips.show(Desc.DreamMasterPvp_guessSuccess)
		end
		Dispatcher.dispatchEvent(EventType.dreamMaster_updateGuess)
		Dispatcher.dispatchEvent(EventType.dreamMaster_dianjijincai)
		RedManager.updateValue("V_DREAMMASTER_JINGCAI", false);  
	end
	local info = {
		pos = pos, --:integer   #投票的玩家pos
		score = num --:integer   #分数
	}
	printTable(33, "竞猜请求信息", info)
	RPCReq.DreamPvp_SupportPos(info, success)
end

--#查看战斗记录
function DreamMasterPvpModel:seeCombatlog(recordId, gamePlayType)
	local function success(data)
		printTable(12, "查看战斗记录返回", data)
		--Dispatcher.dispatchEvent(EventType.cardView_activeSkillSuc,data);
	end
	local info = {
		recordId = recordId, --1:string			#战斗记录id
		gamePlayType = gamePlayType --2:integer			#玩法类型,某些特定玩法需要提供
	}
	printTable(12, "查看战斗记录", info)
	BattleModel:requestBattleRecord(recordId,nil,gamePlayType)
end

--#观看战斗
function DreamMasterPvpModel:playBattleRecord(recordId)
	print(33,"playBattleRecord",recordId)
	local ptype = GameDef.GamePlayType.DreamPvp

	local recVideo = ChatModel:getBattleData(ptype,recordId)
	if recVideo then
		Dispatcher.dispatchEvent(EventType.Battle_replayRecord,{isRecord = true,battleData = recVideo})
		return
	end

	local function success(data)
		
		local recVideo = ChatModel:getBattleData(ptype,recordId)
		printTable(33,"requestBattleRecord success",recVideo)
		if recVideo then
			Dispatcher.dispatchEvent(EventType.Battle_replayRecord,{isRecord = true,battleData = recVideo})
			return
		end
	end

	BattleModel:requestBattleRecord(recordId,success,ptype,nil,true)
end

--#查看名人堂
function DreamMasterPvpModel:seeHalloffame()
	local function success(data)
		printTable(28, "查看名人堂返回", data)
		if data and data.honourInfo then
			self.HonourInfo = data.honourInfo
		end
		Dispatcher.dispatchEvent(EventType.worldChallenge_HonourInfoupdateInfo)
	end
	local info = {}
	printTable(13, "查看名人堂", info)
	RPCReq.WorldArena_GetHonourInfo(info, success)
end

--#获取当前分组指定玩家战斗阵容信息
function DreamMasterPvpModel:getBattlePlayerInfo(playerId)
	-- local function success(data)
	-- 	if data and data.playerInfo then
	-- 		self.joinBattleInfo["enemyInfo"] = data.playerInfo
	-- 	end
	-- 	printTable(32, "获取当前分组指定玩家战斗阵容信息", data)
	-- 	Dispatcher.dispatchEvent(EventType.worldChallenge_dianjiwodebisaixiugaizhenrong)
	-- end
	-- local params = {
	-- 	playerId = playerId --1:integer       #玩家id
	-- }
	-- RPCReq.WorldArena_GetBattlePlayerInfo(params, success)
end

--#获取当前竞猜对阵玩家阵容信息
function DreamMasterPvpModel:GetGuessInfo()
	local function success(data)
		printTable(150, "获取当前竞猜对阵玩家阵容信息", data)
		if data.guessInfo then
			if not self.guessInfo.guessInfo then
				self.guessInfo.guessInfo = {}
			end
			self.guessInfo.guessInfo = data.guessInfo
		end
		Dispatcher.dispatchEvent(EventType.dreamMaster_dianjijincai)
	end
	local params = {}
	RPCReq.WorldArena_GetGuessInfo(params, success)
end

--#获取当前竞猜对阵玩家阵容信息
function DreamMasterPvpModel:setBattleArrayState()
	local function success(data)
	end
	local params = {}
	--RPCReq.WorldArena_SetBattleArrayState(params, success)
end

-- --#查看排行榜
-- function DreamMasterPvpModel:seeRank()
-- 	local function success(data)
-- 		printTable(13,"查看排行榜记录返回",data)
-- 		--Dispatcher.dispatchEvent(EventType.cardView_activeSkillSuc,data);
-- 	end
-- 	local params = {}
--     params.rankType =GameDef.RankType.WorldArenaPlayerScore
--     RPCReq.Rank_GetRankData(params,success)
-- end

function DreamMasterPvpModel:getModelByType(modeType)
	return self
end

function DreamMasterPvpModel:checkRed()
	
	local data = FileCacheManager.getStringForKey("DreamMasterPvp_date", "", nil, false)
	local myMatchData = FileCacheManager.getStringForKey("DreamMasterPvp_mymatch", "", nil, false)
	local curDay = tostring(DateUtil.getOppostieDays()) 

	if data == curDay then
		isFirst = false
	else
		isFirst = true
	end

	if myMatchData == curDay then
		isFirst2 = false
	else
		isFirst2 = true
	end

	if self.status == GameDef.DreamMasterPvpActivityStatus.GoingOne  or self.status ==  GameDef.DreamMasterPvpActivityStatus.GoingTwo or
	   self.status == GameDef.DreamMasterPvpActivityStatus.GoingThree  or self.status ==  GameDef.DreamMasterPvpActivityStatus.GoingFour then
		RedManager.updateValue("V_DREAMMASTER_MAIN", true)
	else
		RedManager.updateValue("V_DREAMMASTER_MAIN", isFirst)
		isFirst = false
	end

	if (self.status == GameDef.DreamMasterPvpActivityStatus.GoingOne or self.status == GameDef.DreamMasterPvpActivityStatus.GoingTwo or self.status == GameDef.DreamMasterPvpActivityStatus.GoingThree or self.status == GameDef.DreamMasterPvpActivityStatus.GoingFour or self.pVPIndex == GameDef.DreamPvpIndex.One) and 
	self.myGuessInfo and (not self.myGuessInfo.dreamPvpPos or self.myGuessInfo.dreamPvpPos == 0)  and self.state ~= GameDef.DreamPvpState.Fight and self.guessInfoMap and next(self.guessInfoMap) ~=nil then
		RedManager.updateValue("V_DREAMMASTER_JINGCAI", true);  
	else
		RedManager.updateValue("V_DREAMMASTER_JINGCAI", false);  
	end

	if not self.battlePos or self.battlePos  == 0  or self.state == GameDef.DreamPvpState.Fight then
		RedManager.updateValue("V_DREAMMASTER_MYMATCH", false);  
	else
		RedManager.updateValue("V_DREAMMASTER_MYMATCH", isFirst2);  
		isFirst2 = false
	end
end

function DreamMasterPvpModel:clearTimeScheduler()
	if self.timer then
        TimeLib.clearCountDown(self.timer)
        self.timer = false
    end
end


--主界面计时
function DreamMasterPvpModel:timeScheduler(txtComp)
	if self.timer then
		TimeLib.clearCountDown(self.timer)
		self.timer = false
	end
	if txtComp then
		self.txtComp = txtComp
	end
	
	if not self.txtComp then return end

	self.txtComp:setVisible(true)

	if not self.status then return end
	if self.status == GameDef.DreamMasterPvpActivityStatus.GoingOne or self.status == GameDef.DreamMasterPvpActivityStatus.GoingTwo then
		self.txtComp:setText(Desc.DreamMasterPvp_going)
		return
	elseif self.status == GameDef.DreamMasterPvpActivityStatus.GoingThree or self.status == GameDef.DreamMasterPvpActivityStatus.GoingFour then
		self.txtComp:setText(Desc.DreamMasterPvp_going)
		return
	elseif self.status == GameDef.DreamMasterPvpActivityStatus.AllEnd then
		self.txtComp:setText(Desc.DreamMasterPvp_allend)
		return
	end
	local dayTime = 24*60*60
	local curServerTime = ServerTimeModel:getServerTime()
	local addTime = self.nextSec - (curServerTime - self.nextSecServerTime)
	self.timer = TimeLib.newCountDown(addTime,function(time)
			if tolua.isnull(self.txtComp) then
				return
			end
			self.txtComp:setVisible(true)
			
			if time<dayTime then
				self.txtComp:setText(TimeLib.formatTime(time))
			else
				self.txtComp:setText(TimeLib.GetTimeFormatDay1(time))
			end
		end,function()
			if tolua.isnull(self.txtComp) then
				return
			end
			self.txtComp:setText(TimeLib.formatTime(0))
			--self:timeScheduler(self.txtComp)
		end,false,false,false)
end

function DreamMasterPvpModel:initData(data)
	printTable(33,"DreamMasterPvpModel:initData",data)
	if not data then return end
	self.status = data.status or 1
	self.nextSec = data.nextSec or  false
	self.nextSecServerTime = ServerTimeModel:getServerTime() or 0
	self.WorldChallenInfo["stage"] = self.status
	self.isToday = data.isToday or false
	self:timeScheduler()

	self:checkRed()
end

return DreamMasterPvpModel
